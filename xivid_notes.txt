[Epoch/time conversions and timezone recovery]

"The Unix epoch (or Unix time or POSIX time or Unix timestamp) is the number of seconds that have elapsed since January 1, 1970." (https://www.epochconverter.com/)

$ date -d 2019-07-01T01:00:00 +%s
1561935600

$ date -d @1561935600 +%FT%T
2019-07-01T01:00:00
$ printf '%(%FT%T)T' 1561935600
2019-07-01T01:00:00

$ date -d @1561935600 +%d-%m-%Y
01-07-2019
$ printf '%(%d-%m-%Y)T' 1561935600
01-07-2019

$ xidel -s -e '1561935600 * duration("PT1S") + dateTime("1970-01-01T00:00:00")'
2019-06-30T23:00:00

$ xidel -s -e 'format-date(1561935600 * duration("PT1S") + date("1970-01-01"),"[D01]-[M01]-[Y]")'
30-06-2019

Date/printf houdt rekening met de lokale tijdzone, Xidel niet natuurlijk en print de UTC tijd.
Zomertijd in Nederland betekent UTC+2 (GMT+2), dus 2 uren erbij.

$ xidel -s -e '1561935600 * duration("PT1S") + duration("PT2H") + dateTime("1970-01-01T00:00:00")'
2019-07-01T01:00:00

$ xidel -s -e 'format-date(1561935600 * duration("PT1S") + duration("PT2H") + date("1970-01-01"),"[D01]-[M01]-[Y]")'
01-07-2019

$ xidel -s -e '(dateTime("2019-07-01T01:00:00") - dateTime("1970-01-01T00:00:00") - duration("PT2H")) div dayTimeDuration("PT1S")'
1561935600

Voor een deling is expliciet dayTimeDuration() nodig. Zie https://sourceforge.net/p/videlibri/mailman/videlibri-xidel/thread/7e952f3d-18d5-ede8-17df-8480b2594b7c%40benibela.de/#msg36722060.

----------------------------------------------------------------

Bij het weergeven van de actuele tijd is Xidel wel bewust van de tijdzone.

$ xidel -s -e '"'$(date +%FT%T)'",current-dateTime()'
2019-07-18T22:17:03
2019-07-18T22:17:03.265

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Bash:

$ xidel -s -e 'let $a:=1561935600 return [system(x"date -d @{$a} +%FT%T")]'
["2019-07-01T01:00:00\n"]
$ xidel -s -e 'let $a:=1561935600 return x:lines(system(x"date -d @{$a} +%FT%T"))[1]'
2019-07-01T01:00:00

Date, zoals bijna elk programma, voegt een nieuwe regel (Unix:'\n', Windows:'\r\n') toe aan het einde.

$ xidel -s -e 'let $a:=1561935600 return system(x"bash -c ""echo -n $(date -d @{$a} +%FT%T)""")'
2019-07-01T01:00:00

$ xidel -s -e 'let $a:=1561935600 return system(x"bash -c ""printf '\''%(%FT%T)T'\'' {$a}""")'
2019-07-01T01:00:00

$ xidel -s --xquery 'let $a:=1561935600 return system(x"bash -c ""printf &apos;%(%FT%T)T&apos; {$a}""")'
2019-07-01T01:00:00

Printf voegt geen nieuwe regel toe en echo met de '-n' optie evenmin.
I.t.t. date zijn printf en echo geen programma's, maar functies van Bash, waardoor ze d.m.v. een nieuwe instantie van bash aangeroepen moeten worden.

----------------------------------------------------------------

$ date +%:z
+02:00

$ xidel -s -e 'replace("'$(date +%:z)'","\+?(\d{2}):(\d{2})","PT$1H$2M")'
PT02H00M

$ xidel -s -e 'let $a:=1561935600 return $a * duration("PT1S") + duration(replace("'$(date +%:z)'","\+?(\d{2}):(\d{2})","PT$1H$2M")) + dateTime("1970-01-01T00:00:00")'
2019-07-01T01:00:00

Deze methode is vergelijkbaar met http://www.xqueryfunctions.com/xq/functx_duration-from-timezone.html, maar werkt w√©l met tijdzones als "+05:30" (India).
---

$ xidel -s -e 'time("00:00:00") - time("00:00:00'$(date +%:z)'")'
PT2H

$ xidel -s -e 'let $a:=1561935600 return $a * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00")'
2019-07-01T01:00:00
---

$ xidel -s -e '(time("00:00:00") - time("00:00:00'$(date +%:z)'")) div dayTimeDuration("PT1S")'
7200

$ xidel -s -e 'let $a:=1561935600 return ($a + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) div dayTimeDuration("PT1S")) * duration("PT1S") + dateTime("1970-01-01T00:00:00")'
2019-07-01T01:00:00

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Batch:

https://www.informationbuilders.com/support/developers/timezone

REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias

! REG.EXE VERSION 3.0

HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\TimeZoneInformation
    ActiveTimeBias      REG_DWORD       0xffffff88

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO @ECHO %A
0xffffff88   # Signed 32bit Hex

xidel -s -e "let $a:=x:integer('0xffffff88'),$b:=x:integer-to-base($a,2) return if (string-length($b) < 32) then $a else $a - integer(math:pow(2,string-length($b)))"
-120

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO @xidel -s -e "let $a:=x:integer('%A'),$b:=x:integer-to-base($a,2) return (if (string-length($b) < 32) then $a else $a - math:pow(2,string-length($b))) * duration('-PT1M')"
PT2H

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO @xidel -s -e "let $a:=1561935600,$b:=x:integer('%A'),$c:=x:integer-to-base($b,2) return $a * duration('PT1S') + (if (string-length($c) < 32) then $b else $b - math:pow(2,string-length($c))) * duration('-PT1M') + dateTime('1970-01-01T00:00:00')"
2019-07-01T01:00:00

of

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO @xidel -s -e "let $a:=x:integer('%A'),$b:=x:integer-to-base($a,2) return (if (string-length($b) < 32) then $a else $a - math:pow(2,string-length($b))) * -60"
7200

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO @xidel -s -e "let $a:=1561935600,$b:=x:integer('%A'),$c:=x:integer-to-base($b,2) return ($a + (if (string-length($c) < 32) then $b else $b - math:pow(2,string-length($c))) * -60) * duration('PT1S') + dateTime('1970-01-01T00:00:00')"
2019-07-01T01:00:00

------------------------------------------------------------------------------------------------

Tekst naar datum:

$ xidel -s -e 'x:parse-date("17 february 2019  7:45","dd mmmm yyyy")'
2019-02-17

$ xidel -s -e 'x:parse-dateTime("17 february 2019  7:45","dd mmmm yyyy  h:nn")'
2019-02-17T07:45:00

Het Pascal format komt heel precies, MAAR Xidel ondersteunt (op dit moment) alleen Engels en Duits:

$ xidel -s -e 'x:parse-date("17 februari 2019  7:45","dd mmmm yyyy")'
Error:
err:FORG0001: Invalid conversion from 17 februari 2019  7:45 to date format dd mmmm yyyy

Het kan ook handmatig:

$ xidel -s -e 'tokenize("17 februari 2019  7:45","\s+")'
17
februari
2019
7:45

$ xidel -s -e 'extract("17 februari 2019  7:45","(\d+)\s+([a-z]+)\s+(\d{4})",(1 to 3))'
17
februari
2019

$ xidel -s -e 'let $a:={"januari":"01","februari":"02","maart":"03","april":"04","mei":"05","juni":"06","juli":"07","augustus":"08","september":"09","oktober":"10","november":"11","december":"12"},$b:=extract("17 februari 2019  7:45","(\d+)\s+([a-z]+)\s+(\d{4})",(1 to 3)) return (if ($b[1] < 10) then "0"||$b[1] else $b[1],$a($b[2]),$b[3])'
17
02
2019

$ xidel -s -e 'let $a:={"januari":"01","februari":"02","maart":"03","april":"04","mei":"05","juni":"06","juli":"07","augustus":"08","september":"09","oktober":"10","november":"11","december":"12"},$b:=extract("17 februari 2019  7:45","(\d+)\s+([a-z]+)\s+(\d{4})",(1 to 3)) return join((if ($b[1] < 10) then "0"||$b[1] else $b[1],$a($b[2]),$b[3]),"-")'
17-02-2019

declare function txt-to-date ($txt as xs:string) as xs:string {
  let $a:={
        "januari":"01","februari":"02","maart":"03",
        "april":"04","mei":"05","juni":"06",
        "juli":"07","augustus":"08","september":"09",
        "oktober":"10","november":"11","december":"12"
      },
      $b:=extract($txt,"(\d+)\s+([a-z]+)\s+(\d{4})",(1 to 3))
  return
  join(
    (
      if ($b[1] < 10) then "0"||$b[1] else $b[1],
      $a($b[2]),
      $b[3]
    ),
    "-"
  )
};

------------------------------------------------------------------------------------------------

Afronden:

$ xidel -s -e 'format-time(time("00:19:06.040"),"[H01]:[m01]:[s01]")'
00:19:06

$ xidel -s -e 'format-time(time("00:19:06.540"),"[H01]:[m01]:[s01]")'
00:19:06

$ xidel -s -e 'format-time(time("00:19:06.540") + duration("PT0.5S"),"[H01]:[m01]:[s01]")'
00:19:07

================================================================================================

[xivid -i, video informatie optie]

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json() return $b'
name
date
duration
subtitle
formats

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] return $b'
name
date
duration
subtitle

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]] return $b'
name
date
duration
subtitle

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]] return $b ! $a(.)'
Naam:
Datum:
Tijdsduur:
Ondertiteling:

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) return $c'
14

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)),$d:=string-join((1 to $c + 1) ! "#") return $d'
###############

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)),$d:=string-join((1 to $c + 1) ! " "),$e:=$b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type) return $e'
Naam:          NOS Journaal 20.00 uur
Datum:         01-01-2017
Tijdsduur:     00:15:42
Ondertiteling: webvtt

------------------------------------------------------------------------------------------------

$ sed -n 2035,2073p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)),$d:=string-join((1 to $c + 1) ! " "),$e:=$b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type) return $e' -e '"Formaten:"'
Naam:  NPO 1: Livestream
Datum: 16-03-2019
Formaten:

$ sed -n 2035,2073p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=$b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type) return $e' -e '"Formaten:"'
Naam:     NPO 1: Livestream
Datum:    16-03-2019
Formaten:

------------------------------------------------------------------------------------------------

In deze volgorde moeten de kolommen ook worden samengesteld:

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=$e(1)() return $f'
format
container
resolution
samplerate
bitrate

De aanwezige objecten in $json/(formats)() in de goede volgorde:

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=distinct-values($json/(formats)()())[.!="url"] return $f'
format
container
resolution
bitrate

------------------------------------------------------------------------------------------------

De aanwezige objecten in $json/(formats)() in de verkeerde volgorde:

$ sed -n '3649,3660p;3662,3676p;3678,3687p' xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=distinct-values($json/(formats)()()[.!="url"]) return $f'
format
container
resolution
bitrate
samplerate

De aanwezige objecten in $json/(formats)() in de goede volgorde:

$ sed -n '3649,3660p;3662,3676p;3678,3687p' xivid_notes.txt | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)] return $f'
format
container
resolution
samplerate
bitrate

------------------------------------------------------------------------------------------------

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! $e(1)(.) return $g'
formaat
container
resolutie
bitrate

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)) return $g'
7
14
9
12

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - -e 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! "#") return $h'
##########################################

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") for $x in $e(1) return concat(substring("Formaten:"||$d,1,$c + 1),string-join(for $y at $i in $f return substring($x($y)[.]||$h,1,$g[$i] + 2)))'
Formaten:      formaat  container       resolutie  bitrate

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") for $x at $i in $e() return concat(if ($i = 1) then substring("Formaten:"||$d,1,$c + 1) else $d,string-join(for $y at $i in $f return substring($x($y)[.]||$h,1,$g[$i] + 2)),if ($i = count($e())) then "(best)" else ())'
Formaten:      formaat  container       resolutie  bitrate
               hls-0    m3u8[manifest]
               hls-1    m3u8[aac]                  64kbps
               hls-2    m3u8[aac]                  128kbps
               hls-3    m3u8[h264+aac]  480x270    202|64kbps
               hls-4    m3u8[h264+aac]  640x360    504|128kbps
               hls-5    m3u8[h264+aac]  768x432    705|128kbps
               hls-6    m3u8[h264+aac]  1024x576   1006|128kbps  (best)

$ sed -n 2250,2307p xivid_notes.txt | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type),for $x at $i in $e() return concat(if ($i = 1) then substring("Formaten:"||$d,1,$c + 1) else $d,string-join(for $y at $i in $f return substring($x($y)[.]||$h,1,$g[$i] + 2)),if ($i = count($e())) then "(best)" else ()))'
Naam:          NOS Journaal 20.00 uur
Datum:         28-02-2017
Tijdsduur:     00:25:37
Ondertiteling: webvtt
Formaten:      formaat  container       resolutie  bitrate
               hls-0    m3u8[manifest]
               hls-1    m3u8[aac]                  64kbps
               hls-2    m3u8[aac]                  128kbps
               hls-3    m3u8[h264+aac]  480x270    203|64kbps
               hls-4    m3u8[h264+aac]  640x360    506|128kbps
               hls-5    m3u8[h264+aac]  768x432    707|128kbps
               hls-6    m3u8[h264+aac]  1024x576   1109|128kbps  (best)

$ sed -n 2035,2073p xivid_notes.txt | xidel -s - --xquery '[...]'
Naam:     NPO 1: Livestream
Datum:    16-03-2019
Formaten: formaat  container       resolutie  bitrate
          hls-0    m3u8[manifest]
          hls-1    m3u8[aac]                  128kbps
          hls-2    m3u8[h264+aac]  640x360    500|128kbps
          hls-3    m3u8[h264+aac]  848x480    1000|128kbps
          hls-4    m3u8[h264+aac]  1024x576   1800|128kbps  (best)

------------------------------------------------------------------------------------------------

$ sed -n '2508,2530p;2532,2540p' xivid_notes.txt | xidel -s - -e '$json[start]/(start,duration)'
00:09:02   # Begin.
00:01:05   # Tijdsduur.

$ sed -n '2508,2530p;2532,2540p' xivid_notes.txt | xidel -s - -e '$json[start]/(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S"))'
542   # Begin in sec.
65    # Tijdsduur in sec.

$ sed -n '2508,2530p;2532,2540p' xivid_notes.txt | xidel -s - -e '$json[start]/(let $a:=(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return ($a[1] - $a[1] mod 30,$a[1] mod 30,$a[2]))'
540   # Begin op 30 sec nauwkeurig.
2     # Begin restant.
65    # Tijdsduur.

$ sed -n '2508,2530p;2532,2540p' xivid_notes.txt | xidel -s - -e '$json[start]/(let $a:=(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return concat("Download: ffmpeg -ss ",$a[1] - $a[1] mod 30," -i <url> -ss ",$a[1] mod 30," -t ",$a[2]," [...]"))'
Download: ffmpeg -ss 540 -i <url> -ss 2 -t 65 [...]

Begin 00:00:29 :

$ xidel -s -e 'let $start:="00:00:29",$duration:="00:00:10",$a:=($start,$duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return concat("Download: ffmpeg",($a[1] - $a[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -i <url> -ss ",$a[1] mod 30," -t ",$a[2]," [...]")'
Download: ffmpeg -i <url> -ss 29 -t 10 [...]

Begin 00:00:30 :

$ xidel -s -e 'let $start:="00:00:30",$duration:="00:00:10",$a:=($start,$duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return concat("Download: ffmpeg",($a[1] - $a[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -i <url>",($a[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -t ",$a[2]," [...]")'
Download: ffmpeg -ss 30 -i <url> -t 10 [...]

00:00:29 --> ffmpeg -i <url> -ss 29 -t 10 [...]
00:00:30 --> ffmpeg -ss 30 -i <url> -t 10 [...]
00:00:31 --> ffmpeg -ss 30 -i <url> -ss 1 -t 10 [...]

------------------------------------------------------------------------------------------------

$ sed -n '2508,2530p;2532,2540p' xivid_notes.txt | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type),for $x at $i in $e() return concat(if ($i = 1) then substring("Formaten:"||$d,1,$c + 1) else $d,string-join(for $y at $i in $f return substring($x($y)[.]||$h,1,$g[$i] + 2)),if ($i = count($e())) then "(best)" else ()),$json[start]/(let $i:=(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return ("",concat(substring("Download:"||$d,1,$c + 1),"ffmpeg",($i[1] - $i[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -i <url>",($i[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -t ",$i[2]," [...]"))))'
Naam:          NOS Journaal: STOP! Verkeerslicht voor telefoonverslaafde
Datum:         14-02-2017
Tijdsduur:     00:01:05
Begin:         00:09:02
Einde:         00:10:07
Ondertiteling: webvtt
Formaten:      formaat  container       resolutie  bitrate
               hls-0    m3u8[manifest]
               hls-6    m3u8[h264+aac]  1024x576   1027|128kbps  (best)

Download:      ffmpeg -ss 540 -i <url> -ss 2 -t 65 [...]

$ cat <<EOF | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[.!="formats"] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (. > 9) then . else 9),$d:=string-join((1 to $c + 1) ! " "),$e:=[{"format":"formaat","container":"container","resolution":"resolutie","samplerate":"frequentie","bitrate":"bitrate"},$json/(formats)()],$f:=for $x in $e(1)() return distinct-values($json/(formats)()()[.!="url"])[contains(.,$x)],$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c + 1),if ($json(.) instance of string) then $json(.) else $json(.)/type),if ($e(2)) then for $x at $i in $e() return concat(if ($i = 1) then substring("Formaten:"||$d,1,$c + 1) else $d,string-join(for $y at $i in $f return substring($x($y)[.]||$h,1,$g[$i] + 2)),if ($i = count($e())) then "(best)" else ()) else substring("Formaten:"||$d,1,$c + 1)||"-",$json[start]/(let $i:=(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S")) return ("",concat(substring("Download:"||$d,1,$c + 1),"ffmpeg",($i[1] - $i[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -i <url>",($i[1] mod 30) ! (if (. = 0) then () else " -ss "||.)," -t ",$i[2]," [...]"))))'
{
  "name": "VPRO: Zigeunermuziek doet pijn - Bob Entrop, VPRO, 2008 (58 min.)",
  "date": "21-07-2010",
  "duration": "00:58:00",
  "start": null,
  "end": null,
  "expdate": null,
  "subtitle": null,
  "formats": null
}
EOF
Naam:      VPRO: Zigeunermuziek doet pijn - Bob Entrop, VPRO, 2008 (58 min.)
Datum:     21-07-2010
Tijdsduur: 00:58:00
Formaten:  -

$ sed -n '3649,3660p;3662,3676p;3678,3687p' xivid_notes.txt | xidel -s - --xquery '[...]'
Naam:      Delta Impuls 2 - Delta Impuls 3 (regionale 1e klasse tafeltennis, 18-01-2019)
Datum:     01-02-2019
Tijdsduur: 00:18:13
Formaten:  formaat  container      resolutie       frequentie  bitrate
           pg-1     mp4[h264+aac]  640x360                     489kbps
           pg-3     mp4[h264+aac]  1280x720                    1603kbps
           dash-1   mp4[aac]                       44.1kHz     131kbps
           dash-14  mp4[h264]      1280x720@50fps              2866kbps  (best)

------------------------------------------------------------------------------------------------

--xquery '
  let $a:={
        "name":"Naam:",
        "date":"Datum:",
        "duration":"Tijdsduur:",
        "start":"Begin:",
        "end":"Einde:",
        "expdate":"Gratis tot:",
        "subtitle":"Ondertiteling:"
      },
      $b:=$json()[.!="formats"] ! .[$json(.)[.]],
      $c:=max(
        $b ! $a(.) ! string-length(.)
      ) ! (if (. > 9) then . else 9),
      $d:=string-join((1 to $c + 1) ! " "),
      $e:=[
        {
          "format":"formaat",
          "container":"container",
          "resolution":"resolutie",
          "samplerate":"frequentie",
          "bitrate":"bitrate"
        },
        $json/(formats)()
      ],
      $f:=for $x in $e(1)() return
      distinct-values(
        $json/(formats)()()[.!="url"]
      )[contains(.,$x)],
      $g:=$f ! max($e()(.) ! string-length(.)),
      $h:=string-join((1 to sum($g)) ! " ")
  return (
    $b ! concat(
      substring($a(.)||$d,1,$c + 1),
      if ($json(.) instance of string) then $json(.) else $json(.)/type
    ),
    if ($e(2)) then
      for $x at $i in $e() return
      concat(
        if ($i = 1) then substring("Formaten:"||$d,1,$c + 1) else $d,
        string-join(
          for $y at $i in $f return
          substring($x($y)[.]||$h,1,$g[$i] + 2)
        ),
        if ($i = count($e())) then "(best)" else ()
      )
    else
      substring("Formaten:"||$d,1,$c + 1)||"-",
    $json[start]/(
      let $i:=(start,duration) ! ((time(.) - time("00:00:00")) div dayTimeDuration("PT1S"))
      return (
        "",
        concat(
          substring("Download:"||$d,1,$c + 1),
          "ffmpeg",
          ($i[1] - $i[1] mod 30) ! (if (. = 0) then () else " -ss "||.),
          " -i <url>",
          ($i[1] mod 30) ! (if (. = 0) then () else " -ss "||.),
          " -t ",
          $i[2],
          " [...]"
        )
      )
    )
  )
'

================================================================================================

[HLS master playlist ontleding]

'playlist.m3u8':

#EXTM3U
#EXT-X-VERSION:3
#EXT-X-STREAM-INF:BANDWIDTH=400000
chunklist_w1563069634_b400000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=800000
chunklist_w1563069634_b800000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1200000
chunklist_w1563069634_b1200000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=2000000
chunklist_w1563069634_b2000000.m3u8

$ xidel -s playlist.m3u8 -e 'tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")]'
BANDWIDTH=400000
chunklist_w1563069634_b400000.m3u8

BANDWIDTH=800000
chunklist_w1563069634_b800000.m3u8

BANDWIDTH=1200000
chunklist_w1563069634_b1200000.m3u8

BANDWIDTH=2000000
chunklist_w1563069634_b2000000.m3u8

$ xidel -s playlist.m3u8 -e 'tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] ! extract(.,".+m3u8")'
chunklist_w1563069634_b400000.m3u8
chunklist_w1563069634_b800000.m3u8
chunklist_w1563069634_b1200000.m3u8
chunklist_w1563069634_b2000000.m3u8

$ xidel -s playlist.m3u8 --xquery 'let $a:="https://live.wowza.kpnstreaming.nl/[...]/playlist.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] return {"format":"hls-"||$i,"container":"m3u8[h264+aac]","bitrate":extract($x,"BANDWIDTH=(\d+)\d{3}",1)||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://live.wowza.kpnstreaming.nl/[...]/playlist.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[h264+aac]",
    "bitrate": "400kbps",
    "url": "https://live.wowza.kpnstreaming.nl/[...]/chunklist_w1563069634_b400000.m3u8"
  },
  [...]
  {
    "format": "hls-4",
    "container": "m3u8[h264+aac]",
    "bitrate": "2000kbps",
    "url": "https://live.wowza.kpnstreaming.nl/[...]/chunklist_w1563069634_b2000000.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'150712214549413136.m3u8':

#EXTM3U
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=610664,RESOLUTION=320x180,CODECS="mp4a.40.2,avc1.4d401f"
r1/sbs6_wegmisbruikers_S00E304_150712213652413136-hls-350.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=928708,RESOLUTION=512x288,CODECS="mp4a.40.2,avc1.4d401f"
r2/sbs6_wegmisbruikers_S00E304_150712213537413136-hls-650.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1288969,RESOLUTION=640x360,CODECS="mp4a.40.2,avc1.4d401f"
r3/sbs6_wegmisbruikers_S00E304_150712213809413136-hls-900.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1643382,RESOLUTION=768x432,CODECS="mp4a.40.2,avc1.4d401f"
r4/sbs6_wegmisbruikers_S00E304_150712213551413136-hls-1200.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=2179034,RESOLUTION=868x488,CODECS="mp4a.40.2,avc1.4d401f"
r8/sbs6_wegmisbruikers_S00E304_150712213938413136-hls-1885.m3u8

$ xidel -s 150712214549413136.m3u8 --xquery 'let $a:="http://l3c.cdn.sbsnet.nl/[...]/150712214549413136.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] return {"format":"hls-"||$i,"container":"m3u8[h264+aac]","resolution":extract($x,"RESOLUTION=([\dx]+)",1)[.],"bitrate":round(extract($x,"BANDWIDTH=(\d+)",1) div 1000)||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "http://l3c.cdn.sbsnet.nl/[...]/150712214549413136.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[h264+aac]",
    "resolution": "320x180",
    "bitrate": "611kbps",
    "url": "http://l3c.cdn.sbsnet.nl/[...]/r1/sbs6_wegmisbruikers_S00E304_150712213652413136-hls-350.m3u8"
  },
  [...]
  {
    "format": "hls-5",
    "container": "m3u8[h264+aac]",
    "resolution": "868x488",
    "bitrate": "2179kbps",
    "url": "http://l3c.cdn.sbsnet.nl/[...]/r8/sbs6_wegmisbruikers_S00E304_150712213938413136-hls-1885.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'VPWON_1226681.m3u8':

#EXTM3U
#EXT-X-VERSION:1
## Created with Unified Streaming Platform(version=1.7.6)
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=281960,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=288x162
VPWON_1226681-audio_eng=65000-video=201000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=666740,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=416x234
VPWON_1226681-audio_eng=128000-video=501000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=878740,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=544x306
VPWON_1226681-audio_eng=128000-video=701000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1196740,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=608x342
VPWON_1226681-audio_eng=128000-video=1001000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=135680,CODECS="mp4a.40.2"
VPWON_1226681-audio_eng=128000.m3u8

$ xidel -s VPWON_1226681.m3u8 -e 'tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] ! extract(.,".+m3u8")'
VPWON_1226681-audio_eng=65000-video=201000.m3u8
VPWON_1226681-audio_eng=128000-video=501000.m3u8
VPWON_1226681-audio_eng=128000-video=701000.m3u8
VPWON_1226681-audio_eng=128000-video=1001000.m3u8
VPWON_1226681-audio_eng=128000.m3u8

$ xidel -s VPWON_1226681.m3u8 --xquery 'for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] order by extract($x,"BANDWIDTH=(\d+)",1) return concat($i," ",extract($x,".+m3u8"))'
5 VPWON_1226681-audio_eng=128000.m3u8
1 VPWON_1226681-audio_eng=65000-video=201000.m3u8
2 VPWON_1226681-audio_eng=128000-video=501000.m3u8
3 VPWON_1226681-audio_eng=128000-video=701000.m3u8
4 VPWON_1226681-audio_eng=128000-video=1001000.m3u8

$ xidel -s VPWON_1226681.m3u8 --xquery 'for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return concat($i," ",extract($x,".+m3u8"))'
1 VPWON_1226681-audio_eng=128000.m3u8
2 VPWON_1226681-audio_eng=65000-video=201000.m3u8
3 VPWON_1226681-audio_eng=128000-video=501000.m3u8
4 VPWON_1226681-audio_eng=128000-video=701000.m3u8
5 VPWON_1226681-audio_eng=128000-video=1001000.m3u8

$ xidel -s VPWON_1226681.m3u8 --xquery 'let $a:="https://adaptive-e50c1a.npostreaming.nl/[...]/VPWON_1226681.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":extract($x,"RESOLUTION=([\dx]+)",1)[.],"bitrate":let $a:=extract($x,"audio.+?(\d+)\d{3}(?:-video=(\d+)\d{3})?",(1,2)) return join(($a[2][.],$a[1]),"|")||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/VPWON_1226681.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[aac]",
    "resolution": null,
    "bitrate": "128kbps",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/VPWON_1226681-audio_eng=128000.m3u8"
  },
  [...]
  {
    "format": "hls-5",
    "container": "m3u8[h264+aac]",
    "resolution": "608x342",
    "bitrate": "1001|128kbps",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/VPWON_1226681-audio_eng=128000-video=1001000.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'2263747.m3u8':

#EXTM3U
#EXT-X-VERSION:1
## Created with Unified Streaming Platform(version=1.9.5)

# variants
#EXT-X-STREAM-INF:BANDWIDTH=562000,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=640x360,VIDEO-RANGE=SDR
230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=402176.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1089000,CODECS="mp4a.40.2,avc1.66.30",RESOLUTION=848x480,VIDEO-RANGE=SDR
230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=899820.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1508000,CODECS="mp4a.40.2,avc1.66.31",RESOLUTION=960x540,VIDEO-RANGE=SDR
230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=1294344.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=2039000,CODECS="mp4a.40.2,avc1.66.31",RESOLUTION=1280x720,VIDEO-RANGE=SDR
230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=1795632.m3u8

$ xidel -s 2263747.m3u8 --xquery 'let $a:="https://adaptive-e50c1a.npostreaming.nl/[...]/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] return {"format":"hls-"||$i,"container":"m3u8[h264+aac]","resolution":extract($x,"RESOLUTION=([\dx]+)",1)[.],"bitrate":let $a:=extract($x,"audio.+?(\d+)\d{3}(?:-video.+?(\d+))?",(1,2)) return join((round($a[2][.] div 1000),$a[1]),"|")||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[h264+aac]",
    "resolution": "640x360",
    "bitrate": "402|128kbps",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=402000.m3u8"
  },
  [...]
  {
    "format": "hls-4",
    "container": "m3u8[h264+aac]",
    "resolution": "1280x720",
    "bitrate": "1796|128kbps",
    "url": "https://adaptive-e50c1a.npostreaming.nl/[...]/230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=1795000.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'cefbd40f-34a0-3f94-b3d8-1705119c79f4.m3u8':

#EXTM3U
#EXT-X-VERSION:1
## Created with Unified Streaming Platform(version=1.6.6)
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=1324403,CODECS="mp4a.40.2,avc1.77.31",RESOLUTION=711x400
http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437-video=1124000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=2570963,CODECS="mp4a.40.2,avc1.100.41",RESOLUTION=912x512
http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437-video=2300000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=4496983,CODECS="mp4a.40.2,avc1.100.41",RESOLUTION=1280x720
http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437-video=4117000.m3u8
#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=132963,CODECS="mp4a.40.2"
http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437.m3u8

$ xidel -s cefbd40f-34a0-3f94-b3d8-1705119c79f4.m3u8 --xquery '[{"format":"hls-0","container":"m3u8[manifest]","url":"http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.m3u8"},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":extract($x,"RESOLUTION=([\dx]+)",1)[.],"bitrate":let $a:=extract($x,"audio=(\d+)(?:-video=(\d+)\d{3})?",(1,2)) return join(($a[2][.],round($a[1] div 1000)),"|")||"kbps","url":extract($x,".+m3u8")}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[aac]",
    "resolution": null,
    "bitrate": "125kbps",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437.m3u8"
  },
  [...]
  {
    "format": "hls-4",
    "container": "m3u8[h264+aac]",
    "resolution": "1280x720",
    "bitrate": "4117|125kbps",
    "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437-video=4117000.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'1535976944566.m3u8':

#EXTM3U
#EXT-X-VERSION:4
## Created with Unified Streaming Platform(version=1.9.5)

# AUDIO groups
#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID="audio-aacl-94",NAME="audio",AUTOSELECT=YES,DEFAULT=YES,CHANNELS="1"

# variants
#EXT-X-STREAM-INF:BANDWIDTH=471000,CODECS="mp4a.40.2,avc1.4D4015",RESOLUTION=320x180,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=350000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=794000,CODECS="mp4a.40.2,avc1.4D4015",RESOLUTION=512x288,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=655000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1067000,CODECS="mp4a.40.2,avc1.4D401E",RESOLUTION=640x360,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=912000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1387000,CODECS="mp4a.40.2,avc1.4D401E",RESOLUTION=768x432,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=1214000.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=2112000,CODECS="mp4a.40.2,avc1.4D401F",RESOLUTION=868x488,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8

# variants
#EXT-X-STREAM-INF:BANDWIDTH=100000,CODECS="mp4a.40.2",AUDIO="audio-aacl-94"
Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8

# keyframes
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=47000,CODECS="avc1.4D4015",RESOLUTION=320x180,URI="keyframes/Peking_Express_Season_1_Episode_1-index-video=350000.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=87000,CODECS="avc1.4D4015",RESOLUTION=512x288,URI="keyframes/Peking_Express_Season_1_Episode_1-index-video=655000.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=121000,CODECS="avc1.4D401E",RESOLUTION=640x360,URI="keyframes/Peking_Express_Season_1_Episode_1-index-video=912000.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=161000,CODECS="avc1.4D401E",RESOLUTION=768x432,URI="keyframes/Peking_Express_Season_1_Episode_1-index-video=1214000.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=252000,CODECS="avc1.4D401F",RESOLUTION=868x488,URI="keyframes/Peking_Express_Season_1_Episode_1-index-video=1898000.m3u8"

$ xidel -s 1535976944566.m3u8 -e 'tokenize($raw,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] ! (position(),.)'
1
STREAM-INF:BANDWIDTH=471000,CODECS="mp4a.40.2,avc1.4D4015",RESOLUTION=320x180,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=350000.m3u8

2
STREAM-INF:BANDWIDTH=794000,CODECS="mp4a.40.2,avc1.4D4015",RESOLUTION=512x288,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=655000.m3u8

3
STREAM-INF:BANDWIDTH=1067000,CODECS="mp4a.40.2,avc1.4D401E",RESOLUTION=640x360,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=912000.m3u8

4
STREAM-INF:BANDWIDTH=1387000,CODECS="mp4a.40.2,avc1.4D401E",RESOLUTION=768x432,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=1214000.m3u8

5
STREAM-INF:BANDWIDTH=2112000,CODECS="mp4a.40.2,avc1.4D401F",RESOLUTION=868x488,FRAME-RATE=25,AUDIO="audio-aacl-94",CLOSED-CAPTIONS=NONE
Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8

# variants

6
STREAM-INF:BANDWIDTH=100000,CODECS="mp4a.40.2",AUDIO="audio-aacl-94"
Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8

# keyframes

$ xidel -s 1535976944566.m3u8 --xquery 'for $x at $i in tokenize($raw,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return concat($i," ",extract($x,".+m3u8"))'
1 Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8
2 Peking_Express_Season_1_Episode_1-index-audio=94000-video=350000.m3u8
3 Peking_Express_Season_1_Episode_1-index-audio=94000-video=655000.m3u8
4 Peking_Express_Season_1_Episode_1-index-audio=94000-video=912000.m3u8
5 Peking_Express_Season_1_Episode_1-index-audio=94000-video=1214000.m3u8
6 Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8

$ xidel -s 1535976944566.m3u8 --xquery 'let $a:="https://vod-tpc-prod-1.talpatvcdn.nl/[...]/1535976944566.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (if ($a) then concat(.,"@",$a,"fps") else .),"bitrate":let $a:=extract($x,"audio.+?(\d+)\d{3}(?:-video=(\d+)\d{3})?",(1,2)) return join(($a[2][.],$a[1]),"|")||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/1535976944566.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[aac]",
    "resolution": null,
    "bitrate": "94kbps",
    "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8"
  },
  [...]
  {
    "format": "hls-6",
    "container": "m3u8[h264+aac]",
    "resolution": "868x488@25fps",
    "bitrate": "1898|94kbps",
    "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8"
  }
]

------------------------------------------------------------------------------------------------

'2970835.m3u8':

#EXTM3U
#EXT-X-VERSION:3


#EXT-X-STREAM-INF:BANDWIDTH=528000,CODECS="avc1.640015,mp4a.40.2",RESOLUTION=426x240,FRAME-RATE=25.000
400/prog_index.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=1328000,CODECS="avc1.64001e,mp4a.40.2",RESOLUTION=854x480,FRAME-RATE=25.000
1200/prog_index.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=2128000,CODECS="avc1.64001f,mp4a.40.2",RESOLUTION=1280x720,FRAME-RATE=25.000
2000/prog_index.m3u8

#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=400000,CODECS="avc1.640015",RESOLUTION=426x240,URI="400/iframe_prog_index.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=1200000,CODECS="avc1.64001e",RESOLUTION=854x480,URI="1200/iframe_prog_index.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=2000000,CODECS="avc1.64001f",RESOLUTION=1280x720,URI="2000/iframe_prog_index.m3u8"

round-half-to-even(25,3)     --> 25
round-half-to-even(23.976,3) --> 23.976
round-half-to-even(25.000,3) --> 25

$ xidel -s 2970835.m3u8 --xquery 'let $a:="https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/index.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-STREAM-INF:")[contains(.,"m3u8")] return {"format":"hls-"||$i,"container":"m3u8[h264+aac]","resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (if ($a) then concat(.,"@",round-half-to-even($a,3),"fps") else .),"bitrate":extract($x,"BANDWIDTH=(\d+)\d{3}",1)||"kbps","url":resolve-uri(extract($x,".+m3u8"),$a)}]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/index.m3u8"
  },
  {
    "format": "hls-1",
    "container": "m3u8[h264+aac]",
    "resolution": "426x240@25fps",
    "bitrate": "528kbps",
    "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/400/prog_index.m3u8"
  },
  [...]
  {
    "format": "hls-3",
    "container": "m3u8[h264+aac]",
    "resolution": "1280x720@25fps",
    "bitrate": "2128kbps",
    "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/2000/prog_index.m3u8"
  }
]

------------------------------------------------------------------------------------------------

Cumulatief (1 query voor alle gevallen):

$ xidel -s 1535976944566.m3u8 --xquery 'let $a:="https://vod-tpc-prod-1.talpatvcdn.nl/[...]/1535976944566.m3u8" return [{"format":"hls-0","container":"m3u8[manifest]","url":$a},for $x at $i in tokenize($raw,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (not(contains($x,"CODECS")) or contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (if ($a) then concat(.,"@",round-half-to-even($a,3),"fps") else .),"bitrate":let $a:=extract($x,"audio(?:_.+?)?=(\d+)(?:-video.+?(\d+))?",(1,2)),$b:=round(extract($x,"BANDWIDTH=(\d+)",1) div 1000) return concat(if ($a[1]) then join((round($a[2][.] div 1000),round($a[1] div 1000)),"|") else $b,"kbps"),"url":extract($x,".+m3u8") ! (if (starts-with(.,"http")) then . else resolve-uri(.,$a))}]'

Dan kan ik er net zo goed een functie van maken. Zal aardig wat regels aan code schelen.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Alleen lokaal voor m3u8-bestanden:

$ xidel -s --xquery 'declare function m3u8-to-json ($url as xs:string, $url2 as xs:string) as item()* {({"format":"hls-0","container":"m3u8[manifest]","url":$url2},for $x at $i in tokenize(file:read-text($url),"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (not(contains($x,"CODECS")) or contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (if ($a) then concat(.,"@",round-half-to-even($a,3),"fps") else .),"bitrate":let $a:=extract($x,"audio(?:_.+?)?=(\d+)(?:-video.+?(\d+))?",(1,2)),$b:=round(extract($x,"BANDWIDTH=(\d+)",1) div 1000) return concat(if ($a[1]) then join((round($a[2][.] div 1000),round($a[1] div 1000)),"|") else $b,"kbps"),"url":extract($x,".+m3u8") ! (if (starts-with(.,"http")) then . else resolve-uri(.,$url2))})}; m3u8-to-json("1535976944566.m3u8","https://vod-tpc-prod-1.talpatvcdn.nl/[...]/1535976944566.m3u8")'
{
  "format": "hls-0",
  "container": "m3u8[manifest]",
  "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/1535976944566.m3u8"
}
{
  "format": "hls-1",
  "container": "m3u8[aac]",
  "resolution": null,
  "bitrate": "94kbps",
  "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8"
}
[...]
{
  "format": "hls-6",
  "container": "m3u8[h264+aac]",
  "resolution": "868x488",
  "bitrate": "1898|94kbps",
  "url": "https://vod-tpc-prod-1.talpatvcdn.nl/[...]/Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

m3u8-to-json functie incl. x:request() voor redirect-urls:

--xquery 'declare function m3u8-to-json ($url as xs:string?) as item()* {if ($url) then let $a:=x:request({"url":$url,"error-handling":"4xx=accept"}) return $a[doc]/({"format":"hls-0","container":"m3u8[manifest]","url":$a/url},for $x at $i in tokenize($a/doc,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")] order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (not(contains($x,"CODECS")) or contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (if ($a) then concat(.,"@",round-half-to-even($a,3),"fps") else .),"bitrate":let $a:=extract($x,"audio(?:_.+?)?=(\d+)(?:-video.+?(\d+))?",(1,2)),$b:=round(extract($x,"BANDWIDTH=(\d+)",1) div 1000) return concat(if ($a[1]) then join((round($a[2][.] div 1000),round($a[1] div 1000)),"|") else $b,"kbps"),"url":extract($x,".+m3u8") ! (if (starts-with(.,"http")) then . else resolve-uri(.,$a/url))}) else ()}; m3u8-to-json(<url>)'

xs:string    # Een string.
xs:string+   # E√©n of meerdere strings.
xs:string*   # Nul of meerdere strings.
xs:string?   # Nul of √©√©n string.

declare function m3u8-to-json ($url as xs:string?) as item()* {
  if ($url) then 
    let $a:=x:request({
      "url":$url,
      "error-handling":"4xx=accept"
    }) return
    $a[doc]/(
      {
        "format":"hls-0",
        "container":"m3u8[manifest]",
        "url":$a/url
      },
      for $x at $i in tokenize($a/doc,"#EXT-X-")[matches(.,"^STREAM-INF:.+m3u8$","ms")]
      order by extract($x,"BANDWIDTH=(\d+)",1)
      count $i
      return {
        "format":"hls-"||$i,
        "container":if (not(contains($x,"CODECS")) or contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]",
        "resolution":let $a:=extract($x,"FRAME-RATE=([\d.]+)",1) return
        extract($x,"RESOLUTION=([\dx]+)",1)[.] ! (
          if ($a) then concat(.,"@",round-half-to-even($a,3),"fps") else .
        ),
        "bitrate":let $a:=extract($x,"audio(?:_.+?)?=(\d+)(?:-video.+?(\d+))?",(1,2)),
            $b:=round(extract($x,"BANDWIDTH=(\d+)",1) div 1000)
        return
        concat(
          if ($a[1]) then 
            join(
              (round($a[2][.] div 1000),round($a[1] div 1000)),
              "|"
            )
          else
            $b,
          "kbps"
        ),
        "url":extract($x,".+m3u8") ! (
          if (starts-with(.,"http")) then . else resolve-uri(.,$a/url)
        )
      }
    )
  else
    ()
};

================================================================================================

[npo-live]

https://www.npostart.nl/live/npo-1 (huidige API)

$ xidel -s -H "X-Requested-With: XMLHttpRequest" "https://www.npostart.nl/api/token" -e '$json'
of
$ xidel -s -e 'x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json'
{
  "token": "dXbagD2EBAsa43aAQ1lEDMp1ZvUpQbHs0SEPAByt"
}

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'let $a:=//npo-player/@media-id return x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$a})/json'
{
  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwic21hcnR0YWciOnsic2l0ZUlkIjoiNCJ9LCJoYXNTdWJzY3JpcHRpb24iOiIiLCJoYXNQcmVtaXVtU3Vic2NyaXB0aW9uIjoiIiwiZWxlbWVudElkIjoicGxheWVyLUxJX05MMV80MTg4MTAyIiwibWVkaWFJZCI6IkxJX05MMV80MTg4MTAyIiwidG9wc3BpbiI6eyJwYXJ0eUlkIjoiIiwicHJvZmlsZUlkIjoiIn0sImhhc1NldHRpbmdzIjoiMCIsImhhc0FkQ29uc2VudCI6IjEiLCJzaGFyZSI6IjEiLCJwYWdlVXJsIjoiIiwic3RlclJlZmVycmFsVXJsIjoiIiwic3RlclNpdGVJZCI6Im5wb3N0YXJ0IiwiaWF0IjoxNTUyNjY0NTY0LCJuYmYiOjE1NTI2NjQ1NjQsImV4cCI6MTU1MjY5MzM2NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MCwibm9BZHMiOjAsInJlY29tbWVuZGF0aW9ucyI6MSwiaXNzIjoiZXlKcGRpSTZJbXB1UkZWbFFqaG1kbWxCVTFOalEyOU5WR2xYZFZFOVBTSXNJblpoYkhWbElqb2lZM2h4UmpVNFlWTjJOMEp1VVRkTmMxWjVlbmQ2VGpWMU1YUXpaRzVXT1VkaFNIUkhObW94VkRBellUbGhRMFl4UkVWa1NuVjBPVTVXY1RFd1EzWXJkeUlzSW0xaFl5STZJbVppWVRWbFlUSmtPRE5rTWpCak1URmlZemsyTkdFek5XWTNNakpsWldGbU9HVTVZMk15TlRobU4yVmlZVEZqTlRNellUUTJabVEyTVRKbVpESmtZekVpZlE9PSJ9.Vajmxn2QFcp9ZUAcfK6eTayccAhKZhLSIggO5i_G9mk",
  "embedUrl": "https://start-player.npo.nl/embed/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwic21hcnR0YWciOnsic2l0ZUlkIjoiNCJ9LCJoYXNTdWJzY3JpcHRpb24iOiIiLCJoYXNQcmVtaXVtU3Vic2NyaXB0aW9uIjoiIiwiZWxlbWVudElkIjoicGxheWVyLUxJX05MMV80MTg4MTAyIiwibWVkaWFJZCI6IkxJX05MMV80MTg4MTAyIiwidG9wc3BpbiI6eyJwYXJ0eUlkIjoiIiwicHJvZmlsZUlkIjoiIn0sImhhc1NldHRpbmdzIjoiMCIsImhhc0FkQ29uc2VudCI6IjEiLCJzaGFyZSI6IjEiLCJwYWdlVXJsIjoiIiwic3RlclJlZmVycmFsVXJsIjoiIiwic3RlclNpdGVJZCI6Im5wb3N0YXJ0IiwiaWF0IjoxNTUyNjY0NTY0LCJuYmYiOjE1NTI2NjQ1NjQsImV4cCI6MTU1MjY5MzM2NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MCwibm9BZHMiOjAsInJlY29tbWVuZGF0aW9ucyI6MSwiaXNzIjoiZXlKcGRpSTZJbXB1UkZWbFFqaG1kbWxCVTFOalEyOU5WR2xYZFZFOVBTSXNJblpoYkhWbElqb2lZM2h4UmpVNFlWTjJOMEp1VVRkTmMxWjVlbmQ2VGpWMU1YUXpaRzVXT1VkaFNIUkhObW94VkRBellUbGhRMFl4UkVWa1NuVjBPVTVXY1RFd1EzWXJkeUlzSW0xaFl5STZJbVppWVRWbFlUSmtPRE5rTWpCak1URmlZemsyTkdFek5XWTNNakpsWldGbU9HVTVZMk15TlRobU4yVmlZVEZqTlRNellUUTJabVEyTVRKbVpESmtZekVpZlE9PSJ9.Vajmxn2QFcp9ZUAcfK6eTayccAhKZhLSIggO5i_G9mk",
  "embedCode": "<script>var urlForIframe = \"https://start-player.npo.nl/embed/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJjb21zY29yZSI6eyJucG9JbmdlbG9nZCI6Im5vIiwibnBvTG9naW50eXBlIjoiYW5vbmllbSIsIm5wb0xvZ2luSWQiOiIifSwic21hcnR0YWciOnsic2l0ZUlkIjoiNCJ9LCJoYXNTdWJzY3JpcHRpb24iOiIiLCJoYXNQcmVtaXVtU3Vic2NyaXB0aW9uIjoiIiwiZWxlbWVudElkIjoicGxheWVyLUxJX05MMV80MTg4MTAyIiwibWVkaWFJZCI6IkxJX05MMV80MTg4MTAyIiwidG9wc3BpbiI6eyJwYXJ0eUlkIjoiIiwicHJvZmlsZUlkIjoiIn0sImhhc1NldHRpbmdzIjoiMCIsImhhc0FkQ29uc2VudCI6IjEiLCJzaGFyZSI6IjEiLCJwYWdlVXJsIjoiIiwic3RlclJlZmVycmFsVXJsIjoiIiwic3RlclNpdGVJZCI6Im5wb3N0YXJ0IiwiaWF0IjoxNTUyNjY0NTY0LCJuYmYiOjE1NTI2NjQ1NjQsImV4cCI6MTU1MjY5MzM2NCwiY29uc3VtZXJJZCI6bnVsbCwiaXNQbGF5bGlzdCI6ZmFsc2UsInJlZmVycmVyVXJsIjpudWxsLCJza2lwQ2F0YWxvZyI6MCwibm9BZHMiOjAsInJlY29tbWVuZGF0aW9ucyI6MSwiaXNzIjoiZXlKcGRpSTZJbXB1UkZWbFFqaG1kbWxCVTFOalEyOU5WR2xYZFZFOVBTSXNJblpoYkhWbElqb2lZM2h4UmpVNFlWTjJOMEp1VVRkTmMxWjVlbmQ2VGpWMU1YUXpaRzVXT1VkaFNIUkhObW94VkRBellUbGhRMFl4UkVWa1NuVjBPVTVXY1RFd1EzWXJkeUlzSW0xaFl5STZJbVppWVRWbFlUSmtPRE5rTWpCak1URmlZemsyTkdFek5XWTNNakpsWldGbU9HVTVZMk15TlRobU4yVmlZVEZqTlRNellUUTJabVEyTVRKbVpESmtZekVpZlE9PSJ9.Vajmxn2QFcp9ZUAcfK6eTayccAhKZhLSIggO5i_G9mk\"; var elementId = \"player-LI_NL1_4188102\"; var mediaId = \"LI_NL1_4188102\";</script><script src=\"https://start-player.npo.nl/js/embed.js\"></script>"
}

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'let $a:=//npo-player/@media-id return x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$a})/json/json(doc(embedUrl)//script/extract(.,"var video =(.+);",1)[.])'
{
  "id": "LI_NL1_4188102",
  "type": "livetv",
  "title": "NPO 1",
  "subtitles": [],
  "episodeTitle": "",
  "franchiseTitle": "",
  "description": "",
  "duration": null,
  "age_rating": null,
  "still_image_url": "https://www-assets.npo.nl/uploads/tv_channel/263/guide_highlight/regular_2018_-_NPO1_IDENT_-_PAUW.jpg",
  "orig_image_url": "https://www-assets.npo.nl/uploads/tv_channel/263/logo/logo-npo1.png",
  "post_play_url": "https://www-assets.npo.nl/uploads/tv_channel/263/guide_highlight/regular_2018_-_NPO1_IDENT_-_PAUW.jpg",
  "share_text": "Bekijk NPO 1 op https://www.npostart.nl/LI_NL1_4188102",
  "share_url": "https://www.npostart.nl/LI_NL1_4188102",
  "broadcasters": [],
  "broadcastDate": "2019-03-15T15:44:20Z",
  "nextAsset": null,
  "qualityOptions": [
    {
      "bitrate": "0",
      "label": "Hoogste",
      "resolution": "1080p",
      "platform": "npo"
    },
    {
      "bitrate": "643000",
      "label": "Hoog",
      "resolution": "720p",
      "platform": "npo"
    },
    {
      "bitrate": "491000",
      "label": "Medium",
      "resolution": "576p",
      "platform": "npo"
    },
    {
      "bitrate": "248000",
      "label": "Laag",
      "resolution": "360p",
      "platform": "npo"
    }
  ],
  "visualRadio": null,
  "episodeNumber": null,
  "seriesId": null,
  "net": null,
  "genres": "",
  "ster": {
    "uri": "https://adconfig.ster.nl/adurl/$$identifier$$?ncc=$$ncc$$&cust_params=1%3D1%26programma_titel%3D%26afleverings_titel%3Dnpo1%26genre%3D%26subgenre%3D%26video_duur%3D0%26prid%3DLI_NL1_4188102%26srid%3D%26net%3D%26omroep%3D%26os%3D$$os$$%26osversion%3D$$osversion$$%26player%3D$$player$$%26playerversion%3D$$playerversion$$%26site%3D$$site$$%26ai%3D$$ai$$%26referrer_url%3D$$referrer_url$$%26description_url%3D$$description_url$$",
    "customParameters": {
      "prid": "LI_NL1_4188102",
      "srid": null
    },
    "placeholderValues": {
      "$$netwerk_id$$": "9233",
      "$$genre$$": null,
      "$$subgenre$$": "",
      "$$video_duur$$": 0,
      "$$net$$": null,
      "$$omroep$$": "",
      "$$programma_titel$$": "",
      "$$programmanaam$$": "",
      "$$stationid$$": "npo",
      "$$afleverings_titel$$": "npo1"
    }
  },
  "recommender": "ts-base",
  "startAt": null,
  "parentId": null,
  "channel": null
}

https://start-player.npo.nl/js/app.js:
[...]
var n = {
        "com.apple.fps.1_0": "hls",
        "com.widevine.alpha": "dash-widevine",
        "com.microsoft.playready": "dash-playready",
        silverlight: "smooth"
    },
[...]

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'let $a:=//npo-player/@media-id return x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$a})/json/json(concat("https://start-player.npo.nl/video/",$a,"/streams?profile=hls&quality=npo&tokenId=",token))'
{
  "stream": {
    "src": "https://pedgewarer28a.video.kpnstreaming.nl/session/7c2dbe1c-4735-11e9-8e3b-1458d0420170/ywkf3i/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/playlist.m3u8?token=9dd8d1315b7d124fb4584a64922f5c29_1552749465_1552749465",
    "type": "application/vnd.apple.mpegurl",
    "protection": {
      "keySystem": "com.apple.fps.1_0",
      "certificateUrl": "https://s3-eu-west-1.amazonaws.com/24i-npo-stream/fairplay.cer",
      "licenseUrl": "https://npo-drm-gateway.samgcloud.nepworldwide.nl/authentication?custom_data=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJucG8iLCJpYXQiOjE1NTI2NjMwNTUsImRybV90eXBlIjoiZmFpcnBsYXkiLCJsaWNlbnNlX3Byb2ZpbGUiOiJ3ZWIiLCJjbGllbnRfaXAiOiI4MC4xMDEuNDkuNSJ9.MrJkJRhFG4lww9Nz7BOJ3NiVb7DyoprVGT4qyMkaFNw"
    }
  },
  "catchupAvailable": true
}

$ xidel -s "https://www.npostart.nl/live/npo-1" -f 'let $a:=//npo-player/@media-id return x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$a})/json/json(concat("https://start-player.npo.nl/video/",$a,"/streams?profile=hls&quality=npo&tokenId=",token))/stream/src' -e '$raw'
[...]
#EXT-X-SESSION-KEY:METHOD=SAMPLE-AES,URI="skd://60f29d98-6526-e8e6-02cd-1a6cc037f599",KEYFORMAT="com.apple.streamingkeydelivery",KEYFORMATVERSIONS="1"
[...]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

$ xidel -s --module=xivid.xq "https://www.npostart.nl/live/npo-1" -e 'let $a:=//npo-player/@media-id return x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$a})/json/json(concat("https://start-player.npo.nl/video/",$a,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",token))/stream/[xivid:m3u8-to-json(src)]'
[
  {
    "format": "hls-0",
    "container": "m3u8[manifest]",
    "url": "https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/playlist.m3u8?token=ee2a3e8377aa5c6670c36cecbaa4d0c8_1552751413_1552751413"
  },
  {
    "format": "hls-1",
    "container": "m3u8[aac]",
    "resolution": null,
    "bitrate": "128kbps",
    "url": "https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000.m3u8"
  },
  [...]
  {
    "format": "hls-5",
    "container": "m3u8[h264+aac]",
    "resolution": "1024x576",
    "bitrate": "1800|128kbps",
    "url": "https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

$ ffmpeg -hide_banner -i "https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8"
[https @ 057cf540] Opening 'https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8' for reading
[hls,applehttp @ 051494c0] SAMPLE-AES encryption is not supported yet
[hls,applehttp @ 051494c0] Failed to open segment 194083138 of playlist 0
[hls,applehttp @ 051494c0] SAMPLE-AES encryption is not supported yet
[hls,applehttp @ 051494c0] Failed to open segment 194083139 of playlist 0
[hls,applehttp @ 051494c0] SAMPLE-AES encryption is not supported yet
[hls,applehttp @ 051494c0] Failed to open segment 194083140 of playlist 0
[...]
[hls,applehttp @ 051494c0] Error when loading first segment 'https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000-194083139.ts'

(https://github.com/e2iplayer/hlsdl/releases)
$ hlsdl "https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8" -v
> START media_playlist_get_links
> END media_playlist_get_links
HLS Stream is SAMPLE-AES encrypted.
Media Playlist parsed successfully.
{"d_t":"live"}
DownloUpdate thread started
ading part 194092232
Error: Getting key-file [https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8/../skd://60f29d98-6526-e8e6-02cd-1a6cc037f599] failed http_code[502].
{"t_d":32,"d_d":7,"d_s":1896544}
Downloading part 194092233
Error: Getting key-file [https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8/../skd://60f29d98-6526-e8e6-02cd-1a6cc037f599] failed http_code[502].
{"t_d":32,"d_d":15,"d_s":3760564}
Downloading part 194092234
Error: Getting key-file [https://pedgewarea28b.video.kpnstreaming.nl/session/054a4216-473a-11e9-b728-1458d0426038/p8ijhp/hls/live/nponep/live/npo/u/npo/drm/hls_fairplay/npo-1/0/0/0/npo-1.isml/npo-1-audio_nld=128000-video=1800000.m3u8/../skd://60f29d98-6526-e8e6-02cd-1a6cc037f599] failed http_code[502].
[...]

------------------------------------------------------------------------------------------------

https://www.npostart.nl/live/npo-1 (oude API)

$ xidel -s "http://ida.omroep.nl/app.php/auth" -e '$json'
{
  "token": "6qm1ivpj8q4vm6c4s4fs4cb7i2"
}

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))'
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Live",
        "contentType": "live",
        "url": "https://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=dfd2fbbc1487ca2af5fb88419e178759&token=3e47c7ec3116134d97460ef058cac2ab&type=jsonp&protection=url",
        "format": "hls"
      }
    ]
  ]
}

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))/json(replace(.//url,"jsonp","json"))'
https://smoote2a.omroep.nl/urishieldv2/l2fm69153f3570e8b83a005c8ce825000000.fee9019baad2e00387eb856a885cd3c8/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://www.npostart.nl/live/npo-1-extra

$ xidel -s "https://www.npostart.nl/live/npo-1-extra" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))/json(replace(.//url,"jsonp","json"))'
Error:
err:FODC0002: Internet/HTTP Error: 404
when talking to: https://livestreams.omroep.nl/live/npo/thematv/101tv/101tv.isml/101tv.m3u8?hash=cdfe301d72cedc0452845b56c413f99c&token=a6a9cc4f8699d6f410749a9fe984a984&type=json&protection=url

$ xidel -s "https://www.npostart.nl/live/npo-1-extra" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))/x:request({"url":replace(.//url,"jsonp","json"),"error-handling":"4xx=accept"})'
{
  "url": "https://livestreams.omroep.nl/live/npo/thematv/101tv/101tv.isml/101tv.m3u8?hash=0b20e3bd652dd5b1c856d20e8db432a1&token=fd1013ba8bdcfa3ab1a8d2c864472745&type=json&protection=url",
  "type": "text/html; charset=UTF-8",
  "headers": [
    "HTTP/1.1 404 Not Found",
    "Date: Sat, 16 Mar 2019 13:19:14 GMT",
    "Content-Type: text/html; charset=UTF-8",
    "Transfer-Encoding: chunked",
    "Vary: Accept-Encoding",
    "Server: nginx",
    "Vary: Accept-Encoding",
    "X-stream-message: flow_valid_livestream: 0: 'Livestream not found in cache or configured as not-available'",
    "Via: 1.1 google",
    ""
  ],
  "raw": "",
  "doc": null
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))/x:request({"url":replace(.//url,"jsonp","json"),"error-handling":"4xx=accept"})[json]'
{
  "url": "https://livestreams.omroep.nl/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8?hash=7b77c52239cc1a95354ce79e4e639993&token=8e1c0abf06439fd6ce84f7305fd0d972&type=json&protection=url",
  "type": "application/json",
  "headers": [
    "HTTP/1.1 200 OK",
    "Date: Sat, 16 Mar 2019 23:58:11 GMT",
    "Content-Type: application/json",
    "Transfer-Encoding: chunked",
    "Vary: Accept-Encoding",
    "Server: nginx",
    "Vary: Accept-Encoding",
    "X-stream-message: flow_cluster_instance: 0: 'Success. Used the default NPO cluster'",
    "Via: 1.1 google",
    ""
  ],
  "raw": "\"https:\\/\\/smoote2h.omroep.nl\\/urishieldv2\\/l2fm7efa778b39f993a2005c8d8d93000000.058fc1c4f40aaffb538624957b900806\\/live\\/npo\\/tvlive\\/npo1\\/npo1.isml\\/npo1.m3u8\"",
  "json": "https://smoote2h.omroep.nl/urishieldv2/l2fm7efa778b39f993a2005c8d8d93000000.058fc1c4f40aaffb538624957b900806/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8"
}

$ xidel -s --module=xivid.xq "https://www.npostart.nl/live/npo-1" -e '{"name":replace(//title," - Live tv",": Livestream"),"date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))/x:request({"url":replace(.//url,"jsonp","json"),"error-handling":"4xx=accept"})[json]/xivid:m3u8-to-json(json)}'
{
  "name": "NPO 1: Livestream",
  "date": "16-03-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://smoote2d.omroep.nl/urishieldv2/l2fm3a9a3af15007ec5f005c8d0822000000.a5e79cf6973549e2d3d7ea1527f32029/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "128kbps",
      "url": "https://smoote2d.omroep.nl/urishieldv2/l2fm3a9a3af15007ec5f005c8d0822000000.a5e79cf6973549e2d3d7ea1527f32029/live/npo/tvlive/npo1/npo1.isml/npo1-audio=128000.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "500|128kbps",
      "url": "https://smoote2d.omroep.nl/urishieldv2/l2fm3a9a3af15007ec5f005c8d0822000000.a5e79cf6973549e2d3d7ea1527f32029/live/npo/tvlive/npo1/npo1.isml/npo1-audio=128000-video=500000.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "848x480",
      "bitrate": "1000|128kbps",
      "url": "https://smoote2d.omroep.nl/urishieldv2/l2fm3a9a3af15007ec5f005c8d0822000000.a5e79cf6973549e2d3d7ea1527f32029/live/npo/tvlive/npo1/npo1.isml/npo1-audio=128000-video=1000000.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1800|128kbps",
      "url": "https://smoote2d.omroep.nl/urishieldv2/l2fm3a9a3af15007ec5f005c8d0822000000.a5e79cf6973549e2d3d7ea1527f32029/live/npo/tvlive/npo1/npo1.isml/npo1-audio=128000-video=1800000.m3u8"
    }
  ]
}

$ xidel -s "https://www.npostart.nl/live/npo-1-extra" -e '[...]'
{
  "name": "NPO 1 extra: Livestream",
  "date": "16-03-2019",
  "formats": null
}

Update 08-04-2019: Werkt inmiddels niet meer.

$ xidel -s "https://www.npostart.nl/live/npo-1" -e 'json(concat("http://ida.omroep.nl/app.php/",//npo-player/@media-id,"?token=",json("http://ida.omroep.nl/app.php/auth")/token))'
Error:
err:FODC0002: Internet/HTTP Error: 500
when talking to: http://ida.omroep.nl/app.php/LI_NL1_4188102?token=3r9d72h0opmhc1invqm9a58hl0
[...]

================================================================================================

[npo] (oude API, per 28-02-2019)

https://www.npostart.nl/nos-journaal/15-03-2019/POW_04059374

$ xidel -s -e 'json(concat("http://ida.omroep.nl/app.php/POW_04059374?token=",json("http://ida.omroep.nl/app.php/auth")/token))'
{
  "limited": false,
  "site": null,
  "items": [
    [
      {
        "label": "Adaptive",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/adaptive/a40fc245d68bbd6ade6fee8b87006187/5c8d0c0b/POW_04059374/1?extension=m3u8&type=jsonp&callback=?",
        "format": "hls"
      },
      {
        "label": "Hoog",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_std/2f7433794cbff513f772501b34b71b3b/5c8d0c0b/POW_04059374/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Normaal",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_bb/ef0a10051d3de9560e78ecccd83bb38c/5c8d0c0b/POW_04059374/1?type=jsonp&callback=?",
        "format": "mp4"
      },
      {
        "label": "Laag",
        "contentType": "odi",
        "url": "https://odis.omroep.nl/video/ida/h264_sb/dd0bbb0bfa1194b20513f311e34c84f9/5c8d0c0b/POW_04059374/1?type=jsonp&callback=?",
        "format": "mp4"
      }
    ]
  ]
}

$ xidel -s -e 'json(concat("http://ida.omroep.nl/app.php/POW_04059374?token=",json("http://ida.omroep.nl/app.php/auth")/token))//url ! json(replace(.,"jsonp","json"))/url'
https://content.omroep.nl/streams/doeg/vodnotavailable.m4v?odiredirecturl=/video/ida/adaptive/2b39f51e5a4d9e865fe7c95340ffd0af/5c8d0c98/POW_04059374/1?extension=m3u8&type=json&callback=?
https://content.omroep.nl/streams/doeg/vodnotavailable.m4v?odiredirecturl=/video/ida/h264_std/6d301b8d73b7e8ef4eab42845f536eff/5c8d0c98/POW_04059374/1?type=json&callback=?
https://content.omroep.nl/streams/doeg/vodnotavailable.m4v?odiredirecturl=/video/ida/h264_bb/6ce7a8fe765d62925943cd3ba8d0dcc2/5c8d0c98/POW_04059374/1?type=json&callback=?
https://content.omroep.nl/streams/doeg/vodnotavailable.m4v?odiredirecturl=/video/ida/h264_sb/25e8a3d0cd41c7e396b368b0dcd3d424/5c8d0c98/POW_04059374/1?type=json&callback=?

================================================================================================

[npo] (huidige API)

https://www.npostart.nl/nos-journaal/28-02-2017/POW_03375558 (laatste NOS Journaal 20:00 zonder DRM)

$ xidel -s -e 'let $prid:="POW_03375558",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json return $a'
{
  "token": "eyJ0eXA[...]fFLtQQU",
  "embedUrl": "https://start-player.npo.nl/embed/eyJ0eXA[...]fFLtQQU",
  "embedCode": "<script async>if (typeof(NPOFrame) === \"function\") { NPOFrame('player-POW_03375558',  'https://start-player.npo.nl/embed/eyJ0eXA[...]fFLtQQU', 'POW_03375558'); } else { var el = document.createElement('script'); el.src = 'https://start-player.npo.nl/js/embed.min.js'; el.onload = function(){NPOFrame('player-POW_03375558',  'https://start-player.npo.nl/embed/eyJ0eXA[...]fFLtQQU', 'POW_03375558');};document.getElementById('player-POW_03375558').appendChild(el);}</script>"
}

$ xidel -s -e 'let $prid:="POW_03375558",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]) return $b'
{
  "id": "POW_03375558",
  "type": "broadcast",
  "title": "NOS Journaal",
  "subtitles": [
    {
      "label": "Nederlands",
      "default": false,
      "language": "nl",
      "src": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_03375558/nl_NL/CAPTION.vtt"
    }
  ],
  "episodeTitle": "NOS Journaal",
  "franchiseTitle": "NOS Journaal 20.00 uur",
  "description": "Met het laatste nieuws, gebeurtenissen van nationaal en internationaal belang en de weersverwachting voor de avond en komende dagen.",
  "duration": 1537,
  "age_rating": null,
  "still_image_url": "https://images.poms.omroep.nl/image/s1280/c1280x720/870757.jpg",
  "orig_image_url": "https://images.poms.omroep.nl/image/870757.jpg",
  "post_play_url": "https://images.poms.omroep.nl/image/s223/c223x125/870757.jpg",
  "share_text": "Bekijk NOS Journaal op https://www.npostart.nl/POW_03375558",
  "share_url": "https://www.npostart.nl/POW_03375558",
  "broadcasters": ["NOS"],
  "broadcastDate": "2017-02-28T19:00:00Z",
  "nextAsset": [...],
  "qualityOptions": [
    {
      "bitrate": "0",
      "label": "Hoogste",
      "resolution": "1080p",
      "platform": "npo"
    },
    {
      "bitrate": "643000",
      "label": "Hoog",
      "resolution": "720p",
      "platform": "npo"
    },
    {
      "bitrate": "491000",
      "label": "Medium",
      "resolution": "576p",
      "platform": "npo"
    },
    {
      "bitrate": "248000",
      "label": "Laag",
      "resolution": "360p",
      "platform": "npo"
    }
  ],
  "visualRadio": null,
  "episodeNumber": 42,
  "seriesId": "NOSjnl2000",
  "net": null,
  "genres": "informatief,nieuws/actualiteiten",
  "ster": {
    "uri": "https://adconfig.ster.nl/adurl/[...]",
    "customParameters": {
      "prid": "POW_03375558",
      "srid": "NOSjnl2000"
    },
    "placeholderValues": {
      "$$netwerk_id$$": "9233",
      "$$genre$$": "informatief",
      "$$subgenre$$": "nieuws/actualiteiten",
      "$$video_duur$$": 1537,
      "$$net$$": null,
      "$$omroep$$": "nos",
      "$$programma_titel$$": "nosjournaal2000uur",
      "$$programmanaam$$": "nosjournaal2000uur",
      "$$stationid$$": "npo",
      "$$afleverings_titel$$": "nosjournaal"
    }
  },
  "recommender": "ts-base",
  "startAt": null,
  "parentId": null,
  "channel": "NED1"
}

$ xidel -s -e 'let $prid:="POW_03375558",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token)) return $c'
{
  "stream": {
    "src": "https://pedgewarea28a.video.kpnstreaming.nl/session/61318042-a74f-11e9-a539-9cb654975bc0/u7df45/hls/vod/nponep/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/playlist.m3u8?token=4825852375b33792a341d5d141b665ae_1563315898_1563315898",
    "type": "application/vnd.apple.mpegurl"
  },
  "catchupAvailable": false,
  "selectedQuality": "npo",
  "debug": {
    "skipCatalog": false,
    "skipAds": false,
    "selectedQuality": "npo",
    "profile": "hls",
    "stream": "https://pedgewarea28a.video.kpnstreaming.nl/session/61318042-a74f-11e9-a539-9cb654975bc0/u7df45/hls/vod/nponep/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/playlist.m3u8?token=4825852375b33792a341d5d141b665ae_1563315898_1563315898",
    "streamType": "hls_unencrypted"
  }
}

$ xidel -s --module=xivid.xq -e 'let $prid:="POW_03375558",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream/src return {"name":$b/concat(franchiseTitle,if (contains(franchiseTitle,title)) then () else ": "||title),"date":format-date(dateTime($b/broadcastDate),"[D01]-[M01]-[Y]"),"duration":format-time($b/duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":$b/(subtitles)()/src}[url],"formats":xivid:m3u8-to-json($c)}'
{
  "name": "NOS Journaal 20.00 uur",
  "date": "28-02-2017",
  "duration": "00:25:37",
  "subtitle": {
    "type": "webvtt",
    "url": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_03375558/nl_NL/CAPTION.vtt"
  },
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/playlist.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "64kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=64000.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "128kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=128000.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "480x270",
      "bitrate": "203|64kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=64000-video=203000.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "506|128kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=128000-video=506000.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "768x432",
      "bitrate": "707|128kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=128000-video=707000.m3u8"
    },
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1109|128kbps",
      "url": "https://nl-ams-p11-am3.cdn.streamgate.nl/eyJ0eXA[...]gq6Kpkc/vod/npo/usp/npo/hls_unencrypted/POW_03375558/POW_03375558_v4.ism/POW_03375558_v4-audio=128000-video=1109000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.npostart.nl/nos-journaal/15-07-2019/POW_04059460 (video met DRM)

$ xidel -s -e 'let $prid:="POW_04059460",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token)) return $c'
{
  "stream": {
    "src": "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]zYAx6JM/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/playlist.m3u8",
    "type": "application/vnd.apple.mpegurl",
    "protection": {
      "keySystem": "com.apple.fps.1_0",
      "certificateUrl": "https://s3-eu-west-1.amazonaws.com/24i-npo-stream/fairplay.cer",
      "licenseUrl": "https://npo-drm-gateway.samgcloud.nepworldwide.nl/authentication?custom_data=eyJ0eXA[...]_eEOSDA"
    }
  },
  "catchupAvailable": false,
  "selectedQuality": "npo",
  "debug": {
    "skipCatalog": false,
    "skipAds": false,
    "selectedQuality": "npo",
    "profile": "hls",
    "stream": "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]zYAx6JM/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/playlist.m3u8",
    "streamType": "hls_fairplay"
  }
}

Controleer in het "stream"-object op de aanwezigheid van het "protection"-object om beveiligde/versleutelde video's er uit te filteren:
-e "[...]$c:=[...]/stream[not(protection)]/src
                         ^~~~~~~~~~~~~~~~~

$ xidel -s --module=xivid.xq -e 'let $prid:="POW_04059460",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream[not(protection)]/src return {"name":$b/concat(franchiseTitle,if (contains(franchiseTitle,title)) then () else ": "||title),"date":format-date(dateTime($b/broadcastDate),"[D01]-[M01]-[Y]"),"duration":format-time($b/duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":$b/(subtitles)()/src}[url],"formats":xivid:m3u8-to-json($c)}'
{
  "name": "NOS Journaal 20.00 uur",
  "date": "15-07-2019",
  "duration": "00:25:03",
  "subtitle": {
    "type": "webvtt",
    "url": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_04059460/nl_NL/CAPTION.vtt"
  },
  "formats": null
}
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

Video met DRM, maar gewoon omdat het kan. Playlist vereist andere ontleding namelijk.

$ xidel -s --xquery 'let $prid:="POW_04059460",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream/src return unparsed-text($c)'
#EXTM3U
#EXT-X-VERSION:4
## Created with Unified Streaming Platform(version=1.7.18) - generated by HMG

# AUDIO groups
#EXT-X-MEDIA:TYPE=AUDIO,GROUP-ID="audio-aacl-128",LANGUAGE="en",NAME="English",DEFAULT=YES,AUTOSELECT=YES,URI="a1/a1.m3u8"

# variants
#EXT-X-STREAM-INF:BANDWIDTH=1526000,AVERAGE-BANDWIDTH=1398000,CODECS="avc1.42C01E,mp4a.40.2",RESOLUTION=768x432,AUDIO="audio-aacl-128",CLOSED-CAPTIONS=NONE
v4/v4.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=707000,AVERAGE-BANDWIDTH=658000,CODECS="avc1.4D401F,mp4a.40.2",RESOLUTION=480x270,AUDIO="audio-aacl-128",CLOSED-CAPTIONS=NONE
v5/v5.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=882000,AVERAGE-BANDWIDTH=815000,CODECS="avc1.42C01E,mp4a.40.2",RESOLUTION=480x270,AUDIO="audio-aacl-128",CLOSED-CAPTIONS=NONE
v6/v6.m3u8
#EXT-X-STREAM-INF:BANDWIDTH=446000,AVERAGE-BANDWIDTH=412000,CODECS="avc1.42C01E,mp4a.40.2",RESOLUTION=320x180,AUDIO="audio-aacl-128",CLOSED-CAPTIONS=NONE
v7/v7.m3u8

# keyframes
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=439000,AVERAGE-BANDWIDTH=197000,CODECS="avc1.42C01E",RESOLUTION=768x432,URI="v4/iframe_index.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=227000,AVERAGE-BANDWIDTH=102000,CODECS="avc1.4D401F",RESOLUTION=480x270,URI="v5/iframe_index.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=312000,AVERAGE-BANDWIDTH=106000,CODECS="avc1.42C01E",RESOLUTION=480x270,URI="v6/iframe_index.m3u8"
#EXT-X-I-FRAME-STREAM-INF:BANDWIDTH=134000,AVERAGE-BANDWIDTH=48000,CODECS="avc1.42C01E",RESOLUTION=320x180,URI="v7/iframe_index.m3u8"

$ xidel -s --xquery 'let $prid:="POW_04059460",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream/src return {"name":$b/concat(franchiseTitle,if (contains(franchiseTitle,title)) then () else ": "||title),"date":format-date(dateTime($b/broadcastDate),"[D01]-[M01]-[Y]"),"duration":format-time($b/duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":$b/(subtitles)()/src}[url],"formats":[{"format":"hls-0","container":"m3u8[manifest]","url":$c},for $x at $i in tokenize(tail(tokenize(substring-before(unparsed-text($c),"# keyframes"),"#EXT-X-MEDIA")),"#EXT-X-STREAM-INF") order by extract($x,"BANDWIDTH=(\d+)",1) count $i return {"format":"hls-"||$i,"container":if (contains($x,"avc1")) then "m3u8[h264+aac]" else "m3u8[aac]","resolution":extract($x,"RESOLUTION=([\dx]+)",1)[.],"bitrate":let $a:=extract($x,"(?:.+?BANDWIDTH=(\d+)\d{3})?.+aacl-(\d+)",(1,2)) return join(($a[1][.]-$a[2],$a[2]),"|")||"kbps","url":resolve-uri(extract($x,"(\w+/\w+\.m3u8)",1),$c)}]}'
{
  "name": "NOS Journaal 20.00 uur",
  "date": "15-07-2019",
  "duration": "00:25:03",
  "subtitle": {
    "type": "webvtt",
    "url": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_04059460/nl_NL/CAPTION.vtt"
  },
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]ghAnzU4/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/playlist.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "128kbps",
      "url": "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]ghAnzU4/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/a1/a1.m3u8"
    },
    [...]
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "768x432",
      "bitrate": "1398|128kbps",
      "url": "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]ghAnzU4/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/v4/v4.m3u8"
    }
  ]
}

$ ffmpeg -hide_banner -i "https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]ghAnzU4/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/v4/v4.m3u8"
[hls @ 053897c0] Skip ('#EXT-X-VERSION:5')
[hls @ 053897c0] Skip ('## Created with Unified Streaming Platform(version=1.7.18)')
[hls @ 053897c0] Skip ('#EXT-X-INDEPENDENT-SEGMENTS')
[hls @ 053897c0] Skip ('#USP-X-MEDIA:BANDWIDTH=1394000,AVERAGE-BANDWIDTH=1267000,TYPE=VIDEO,GROUP-ID="video-avc1-1214",LANGUAGE="en",NAME="English",AUTOSELECT=YES,CODECS="avc1.42C01E",RESOLUTION=768x432')
[hls @ 053897c0] SAMPLE-AES encryption is not supported yet
[hls @ 053897c0] Failed to open segment 0 of playlist 0
[hls @ 053897c0] SAMPLE-AES encryption is not supported yet
[hls @ 053897c0] Failed to open segment 1 of playlist 0
[hls @ 053897c0] SAMPLE-AES encryption is not supported yet
[hls @ 053897c0] Failed to open segment 2 of playlist 0
[...]
[hls @ 053897c0] Failed to open segment 187 of playlist 0
[hls @ 053897c0] Error when loading first segment 'https://nl-ams-p22-am3.cdn.streamgate.nl/eyJ0eXA[...]ghAnzU4/vod/npo/fps/TEST/npo/hls/POW_04059460_v1563215505/v4/v4.ts'

In de praktijk wordt SAMPLE-AES alleen voor DRM gebruikt, dus de FFmpeg community zal dit nooit toevoegen.

------------------------------------------------------------------------------------------------

https://www.npostart.nl/stop-verkeerslicht-voor-telefoonverslaafde/14-02-2017/POMS_NOS_7332477 (videofragment)

$ xidel -s -e 'let $prid:="POMS_NOS_7332477",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]) return $b'
{
  "id": "POMS_NOS_7332477",
  "type": "fragment",
  "title": "STOP! Verkeerslicht voor telefoonverslaafde",
  "subtitles": [],
  "episodeTitle": "",
  "franchiseTitle": "NOS Journaal",
  "description": "Een verkeerslicht in de stoep, om zo voetgangers die in gedachten verzonken op hun smartphone zitten te kijken extra te waarschuwen.",
  "duration": 65,
  "age_rating": null,
  "still_image_url": "https://images.poms.omroep.nl/image/s1280/c1280x720/865203.jpg",
  "orig_image_url": "https://images.poms.omroep.nl/image/865203.jpg",
  "post_play_url": "https://images.poms.omroep.nl/image/s223/c223x125/865203.jpg",
  "share_text": "Bekijk STOP! Verkeerslicht voor telefoonverslaafde op https://www.npostart.nl/POMS_NOS_7332477",
  "share_url": "https://www.npostart.nl/POMS_NOS_7332477",
  "broadcasters": ["NOS"],
  "broadcastDate": "2017-02-14T13:07:21Z",
  "nextAsset": null,
  "qualityOptions": [
    {
      "bitrate": "0",
      "label": "Hoogste",
      "resolution": "1080p",
      "platform": "npo"
    },
    {
      "bitrate": "643000",
      "label": "Hoog",
      "resolution": "720p",
      "platform": "npo"
    },
    {
      "bitrate": "491000",
      "label": "Medium",
      "resolution": "576p",
      "platform": "npo"
    },
    {
      "bitrate": "248000",
      "label": "Laag",
      "resolution": "360p",
      "platform": "npo"
    }
  ],
  "visualRadio": null,
  "episodeNumber": null,
  "seriesId": "NOSJournaal",
  "net": null,
  "genres": "informatief,nieuws/actualiteiten",
  "ster": {
    "uri": "https://adconfig.ster.nl/adurl/[...]",
    "customParameters": {
      "prid": "POMS_NOS_7332477",
      "srid": "NOSJournaal"
    },
    "placeholderValues": {
      "$$netwerk_id$$": "9233",
      "$$genre$$": "informatief",
      "$$subgenre$$": "nieuws/actualiteiten",
      "$$video_duur$$": 65,
      "$$net$$": null,
      "$$omroep$$": "nos",
      "$$programma_titel$$": "nosjournaal",
      "$$programmanaam$$": "nosjournaal",
      "$$stationid$$": "npo",
      "$$afleverings_titel$$": "stopverkeerslichtvoortelefoonverslaafde"
    }
  },
  "recommender": "ts-base",
  "startAt": 542,
  "parentId": "POW_03373320",
  "channel": "NED1"
}

$ xidel -s --module=xivid.xq -e 'let $prid:="POMS_NOS_7332477",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream[not(protection)]/src return {"name":$b/concat(franchiseTitle,if (contains(franchiseTitle,title)) then () else ": "||title),"date":format-date(dateTime($b/broadcastDate),"[D01]-[M01]-[Y]"),"duration":format-time($b/duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"start":if ($b/startAt) then format-time($b/startAt * duration("PT1S"),"[H01]:[m01]:[s01]") else (),"end":if ($b/startAt) then format-time($b/(duration + startAt) * duration("PT1S"),"[H01]:[m01]:[s01]") else (),"subtitle":{"type":"webvtt","url":if ($b/parentId) then x:request({"url":concat("https://rs.poms.omroep.nl/v1/api/subtitles/",$b/parentId,"/nl_NL/CAPTION.vtt")})[contains(headers[1],"200")]/url else $b/(subtitles)()/src}[url],"formats":xivid:m3u8-to-json($c)}'
{
  "name": "NOS Journaal: STOP! Verkeerslicht voor telefoonverslaafde",
  "date": "14-02-2017",
  "duration": "00:01:05",
  "start": "00:09:02",
  "end": "00:10:07",
  "subtitle": {
    "type": "webvtt",
    "url": "https://rs.poms.omroep.nl/v1/api/subtitles/POW_03373320/nl_NL/CAPTION.vtt"
  },
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://nl-ams-p11-am5.cdn.streamgate.nl/eyJ0eXA[...]LcvOmX0/vod/npo/usp/npo/hls_unencrypted/POW_03373320/POW_03373320_v4.ism/playlist.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "64kbps",
      "url": "https://nl-ams-p11-am5.cdn.streamgate.nl/eyJ0eXA[...]LcvOmX0/vod/npo/usp/npo/hls_unencrypted/POW_03373320/POW_03373320_v4.ism/POW_03373320_v4-audio=64000.m3u8"
    },
    [...],
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1027|128kbps",
      "url": "https://nl-ams-p11-am5.cdn.streamgate.nl/eyJ0eXA[...]LcvOmX0/vod/npo/usp/npo/hls_unencrypted/POW_03373320/POW_03373320_v4.ism/POW_03373320_v4-audio=128000-video=1027000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.npostart.nl/flikken-maastricht/01-03-2019/AT_2105037

$ xidel -s -e 'let $prid:="AT_2105037",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]) return unparsed-text($a/embedUrl)'
<!DOCTYPE html>
<html>
<head>
    <title>Flikken Maastricht</title>
    <link href="/styles/video-js.css" rel="stylesheet">
    <link href="/styles/main.css" rel="stylesheet">
</head>

<body>
<div class="npo-player-overlay" id="npo-player-exclusive" style="background-image: url('https://images.poms.omroep.nl/image/s1280/c1280x720/1195343.jpg');" >
    <div class="npo-player-overlay-bg"></div>
    <div class="npo-player-overlay-message">
        <p>Dit programma is alleen te zien met een NPO Start Plus account (41).</p>

                <p></p>
    </div>
</div>
</body>
</html>

Geen JSON en dus geen enkele video-informatie (van deze DRM video). De hoofdpagina heeft die wel.

$ xidel -s --module=xivid.xq -e 'let $prid:="AT_2105037",$a:=x:request({"header":"X-Requested-With: XMLHttpRequest","url":"https://www.npostart.nl/api/token"})/json/x:request({"post":"_token="||token,"url":"https://www.npostart.nl/player/"||$prid})/json,$b:=json(doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]),$c:=json(concat("https://start-player.npo.nl/video/",$prid,"/streams?profile=hls&amp;quality=npo&amp;tokenId=",$a/token))/stream[not(protection)]/src return {|if ($b) then {"name":$b/concat(franchiseTitle,if (contains(franchiseTitle,title)) then () else ": "||title),"date":format-date(dateTime($b/broadcastDate),"[D01]-[M01]-[Y]"),"duration":format-time($b/duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"start":if ($b/startAt) then format-time($b/startAt * duration("PT1S"),"[H01]:[m01]:[s01]") else (),"end":if ($b/startAt) then format-time($b/(duration + startAt) * duration("PT1S"),"[H01]:[m01]:[s01]") else (),"subtitle":{"type":"webvtt","url":if ($b/parentId) then x:request({"url":concat("https://rs.poms.omroep.nl/v1/api/subtitles/",$b/parentId,"/nl_NL/CAPTION.vtt")})[contains(headers[1],"200")]/url else $b/(subtitles)()/src}[url]} else doc("https://www.npostart.nl/"||$prid)/{"name":.//div[@class="npo-header-episode-content"]/concat(h1,": ",.//h2),"date":.//npo-player/extract(@current-url,"(\d+-\d+-\d+)",1),"duration":format-time(.//@duration * duration("PT1S"),"[H01]:[m01]:[s01]")},{"formats":xivid:m3u8-to-json($c)}|}'
{
  "name": "Flikken Maastricht: Virtus et justitia",
  "date": "01-03-2019",
  "duration": "00:47:27",
  "formats": null
}

------------------------------------------------------------------------------------------------

-e '
  let $prid:="AT_2105037",
      $a:=x:request({
        "header":"X-Requested-With: XMLHttpRequest",
        "url":"https://www.npostart.nl/api/token"
      })/json/x:request({
        "post":"_token="||token,
        "url":"https://www.npostart.nl/player/"||$prid
      })/json,
      $b:=json(
        doc($a/embedUrl)//script/extract(.,"var video =(.+);",1)[.]
      ),
      $c:=json(
        concat(
          "https://start-player.npo.nl/video/",
          $prid,
          "/streams?profile=hls&amp;quality=npo&amp;tokenId=",
          $a/token
        )
      )/stream[not(protection)]/src
  return {|
    if ($b) then {
      "name":$b/concat(
        franchiseTitle,
        if (contains(franchiseTitle,title)) then () else ": "||title
      ),
      "date":format-date(
        dateTime($b/broadcastDate),
        "[D01]-[M01]-[Y]"
      ),
      "duration":format-time(
        $b/duration * duration("PT1S"),
        "[H01]:[m01]:[s01]"
      ),
      "start":if ($b/startAt) then
        format-time($b/startAt * duration("PT1S"),"[H01]:[m01]:[s01]")
      else
        (),
      "end":if ($b/startAt) then
        format-time($b/(duration + startAt) * duration("PT1S"),"[H01]:[m01]:[s01]")
      else
        (),
      "subtitle":{
        "type":"webvtt",
        "url":if ($b/parentId) then
          x:request({
            "url":concat(
              "https://rs.poms.omroep.nl/v1/api/subtitles/",
              $b/parentId,
              "/nl_NL/CAPTION.vtt"
            )
          })[contains(headers[1],"200")]/url
        else
          $b/(subtitles)()/src
      }[url]
    } else
      doc("https://www.npostart.nl/"||$prid)/{
        "name":.//div[@class="npo-header-episode-content"]/concat(h1,": ",.//h2),
        "date":.//npo-player/extract(@current-url,"(\d+-\d+-\d+)",1),
        "duration":format-time(
          .//@duration * duration("PT1S"),
          "[H01]:[m01]:[s01]"
        )
      },
    {
      "formats":xivid:m3u8-to-json($c)
    }
  |}
'

================================================================================================

[rtl]

https://www.rtl.nl/video/d4e31e66-e403-33d5-8f44-a3886e42be51/ (RTL Nieuws van 18-11-2017 met expiredate 19-11-2018 05:48:44, zie BatchGemist notes)

$ xidel -s "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=d4e31e66-e403-33d5-8f44-a3886e42be51/fmt=adaptive/" -e '$json'
{
  "meta": {
    [...]
    "nr_of_videos_total": 0,
    "nr_of_videos_onpage": 0,
    [...]
  },
  [...]
}

https://www.rtl.nl/video/cefbd40f-34a0-3f94-b3d8-1705119c79f4/ (RTL Nieuws van 18-05-2019)

$ xidel -s "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=cefbd40f-34a0-3f94-b3d8-1705119c79f4/fmt=adaptive/" -e '$json[meta/nr_of_videos_total > 0]/(material)()/(original_date,duration)'
1.5582006E9
00:19:06.040

$ xidel -s --module=xivid.xq "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=cefbd40f-34a0-3f94-b3d8-1705119c79f4/fmt=adaptive/" -e '$json[meta/nr_of_videos_total > 0]/{"name":concat(.//station,": ",abstracts/name," - ",if (.//classname="uitzending") then episodes/name else .//title),"date":format-date((material)()/original_date * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),"[D01]-[M01]-[Y]"),"duration":format-time(time((material)()/duration) + duration("PT0.5S"),"[H01]:[m01]:[s01]"),"expdate":format-dateTime((.//ddr_timeframes)()[model="AVOD"]/stop * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),"[D01]-[M01]-[Y] [H01]:[m01]:[s01]"),"formats":xivid:m3u8-to-json(.//videohost||.//videopath)}'
{
  "name": "RTL4: RTL Nieuws - 19:30 uur",
  "date": "18-05-2019",
  "duration": "00:19:06",
  "expdate": "18-05-2020 06:52:29",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "125kbps",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "4117|125kbps",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ssm/cefbd40f-34a0-3f94-b3d8-1705119c79f4.ism/cefbd40f-34a0-3f94-b3d8-1705119c79f4-audio=125437-video=4117000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.rtlnieuws.nl/nieuws/laatste-videos-nieuws/video/4694701/game-thrones-dubbelganger-droomt-van-het-witte-doek

$ xidel -s "https://www.rtlnieuws.nl/nieuws/laatste-videos-nieuws/video/4694701/game-thrones-dubbelganger-droomt-van-het-witte-doek" -e '//@data-uuid'
ed3d420a-4741-4ea9-afdf-8dc8271ff9c9

$ xidel -s --module=xivid.xq "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=ed3d420a-4741-4ea9-afdf-8dc8271ff9c9/fmt=adaptive/" -e '[...]'
{
  "name": "RTL4: RTL Nieuws - Game of Thrones-dubbelganger droomt van het witte doek",
  "date": "29-04-2019",
  "duration": "00:01:33",
  "expdate": null,
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/415972/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.ssm/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "125kbps",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.ssm/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.ism/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9-audio_eng=125422.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "3733|125kbps",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/415972/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.ssm/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9.ism/ed3d420a-4741-4ea9-afdf-8dc8271ff9c9-audio_eng=125422-video=3733000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

Bash:

$ xidel -s --module=xivid.xq "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=ed3d420a-4741-4ea9-afdf-8dc8271ff9c9/fmt=adaptive/" -e '
  $json[meta/nr_of_videos_total > 0]/{
    "name":concat(
      .//station,
      ": ",
      abstracts/name,
      " - ",
      if (.//classname="uitzending") then episodes/name else .//title
    ),
    "date":format-date(
      (material)()/original_date * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),
      "[D01]-[M01]-[Y]"
    ),
    "duration":format-time(
      time((material)()/duration) + duration("PT0.5S"),
      "[H01]:[m01]:[s01]"
    ),
    "expdate":format-dateTime(
      (.//ddr_timeframes)()[model="AVOD"]/stop * duration("PT1S") +
      (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),
      "[D01]-[M01]-[Y] [H01]:[m01]:[s01]"
    ),
    "formats":xivid:m3u8-to-json(.//videohost||.//videopath)
  }
'

------------------------------------------------------------------------------------------------

Batch:

FOR /F "skip=4 tokens=3" %A IN ('REG QUERY HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v ActiveTimeBias') DO (
  FOR /F "delims=" %B IN ('xidel -s --module=xivid.xq -e "tz:=xivid:shex-to-dec('%A') * duration('-PT1M')" --output-format=cmd') DO %B
)
xidel -s --module=xivid.xq "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=ed3d420a-4741-4ea9-afdf-8dc8271ff9c9/fmt=adaptive/" -e "
  $json[meta/nr_of_videos_total > 0]/{
    'name':concat(
      .//station,
      ': ',
      abstracts/name,
      ' - ',
      if (.//classname='uitzending') then episodes/name else .//title
    ),
    'date':format-date(
      (material)()/original_date * duration('PT1S') + duration('%tz%') + dateTime('1970-01-01T00:00:00'),
      '[D01]-[M01]-[Y]'
    ),
    'duration':format-time(
      time((material)()/duration) + duration('PT0.5S'),
      '[H01]:[m01]:[s01]'
    ),
    'expdate':format-dateTime(
      (.//ddr_timeframes)()[model='AVOD']/stop * duration('PT1S') + duration('%tz%') + dateTime('1970-01-01T00:00:00'),
      '[D01]-[M01]-[Y] [H01]:[m01]:[s01]'
    ),
    'formats':xivid:m3u8-to-json(.//videohost||.//videopath)
  }
"

================================================================================================

[kijk]

https://www.kijk.nl/ --> https://consent.talpanetwork.com/?TN_REFERAL_URL=https://www.kijk.nl/&TN_REFERAL_ORIGIN= (cookie wall)

Antwoordheader in PaleMoon:

Host: www.kijk.nl
User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:60.9) Gecko/20100101 Goanna/4.1 Firefox/60.9 PaleMoon/28.2.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: nl,en-US;q=0.7,en;q=0.3
Accept-Encoding: gzip, deflate, br
Referer: https://consent.talpanetwork.com/?TN_REFERAL_URL=https:%2F%2Fwww.kijk.nl%2F&TN_REFERAL_ORIGIN=
Cookie: CONSENTMGR=ts:1546358787966|consent:true|c1:0; OPTOUTMULTI=0:0%7Cc5:0%7Cc1:0%7Cc4:0%7Cc3:0%7Cc2:0; TN_UUID=edae8abd-659b-477a-8dfe-caf4d718fcd7; 706b604c-184a-4235-899c-a744921ce65ceuconsent=BOZs6AnOZs6AnADABANLB_-AAAAjCAcAAiABUAC4AIAAZABEgCaAJ4AWwAxABuAD8AIAARgApQBXADvAIQARaAjgCOgEuAJ2AVkAuoBgQDiAHugP0A_YCCg; 706b604c-184a-4235-899c-a744921ce65ccconsent=BOZs6AnOZs6AnADABANLAEAAAAAE54EfETAAQgAAHAA; utag_main=v_id:01680a2a9c200013725d1ee67abe02068001400d0086e$_sn:1$_ss:1$_st:1546360591204$ses_id:1546358791204%3Bexp-session$_pn:1%3Bexp-session$dc_group:79$dc_visit:1$dc_event:1%3Bexp-session; gig_canary=false; gig_canary_ver=2155-1-25772625; AMCV_A1DF40865A97CDF00A495C28%40AdobeOrg=1999109931%7CMCMID%7C60597001633179420918454649860814799344%7CMCAID%7CNONE; gig_hasGmid=login; 706b604c-184a-4235-899c-a744921ce65ceuconsent=BOZs6AnOZs6AnADABANLB_-AAAAjB7_______9______9uz_Gv_v_f__33e8__9v_l_7_-___u_-33d4-_1vf99yfm1-7ftr3tp_87ues2_Xur__59__3z3_Nog; 706b604c-184a-4235-899c-a744921ce65ccconsent=BOZs6AnOZs6AnADABANLAEAAAAAE6ACgACAH0AQABOA; 706b604c-184a-4235-899c-a744921ce65cfaktorId=e024bb11-1299-48e3-bde1-107f1e68860c; s_cc=true; s_sq=%5B%5BB%5D%5D; lastConsentChange=1546358793852
Connection: keep-alive
If-None-Match: W/"1f0e3-fT3OIiIk44flJJLFU9CqLmMwCfA"
Cache-Control: max-age=0

$ xidel -s -H "Cookie: CONSENTMGR=ts:1546358787966|consent:true|c1:0; OPTOUTMULTI=0:0%7Cc5:0%7Cc1:0%7Cc4:0%7Cc3:0%7Cc2:0; TN_UUID=edae8abd-659b-477a-8dfe-caf4d718fcd7; 706b604c-184a-4235-899c-a744921ce65ceuconsent=BOZs6AnOZs6AnADABANLB_-AAAAjCAcAAiABUAC4AIAAZABEgCaAJ4AWwAxABuAD8AIAARgApQBXADvAIQARaAjgCOgEuAJ2AVkAuoBgQDiAHugP0A_YCCg; 706b604c-184a-4235-899c-a744921ce65ccconsent=BOZs6AnOZs6AnADABANLAEAAAAAE54EfETAAQgAAHAA; utag_main=v_id:01680a2a9c200013725d1ee67abe02068001400d0086e$_sn:1$_ss:1$_st:1546360591204$ses_id:1546358791204%3Bexp-session$_pn:1%3Bexp-session$dc_group:79$dc_visit:1$dc_event:1%3Bexp-session; gig_canary=false; gig_canary_ver=2155-1-25772625; AMCV_A1DF40865A97CDF00A495C28%40AdobeOrg=1999109931%7CMCMID%7C60597001633179420918454649860814799344%7CMCAID%7CNONE; gig_hasGmid=login; 706b604c-184a-4235-899c-a744921ce65ceuconsent=BOZs6AnOZs6AnADABANLB_-AAAAjB7_______9______9uz_Gv_v_f__33e8__9v_l_7_-___u_-33d4-_1vf99yfm1-7ftr3tp_87ues2_Xur__59__3z3_Nog; 706b604c-184a-4235-899c-a744921ce65ccconsent=BOZs6AnOZs6AnADABANLAEAAAAAE6ACgACAH0AQABOA; 706b604c-184a-4235-899c-a744921ce65cfaktorId=e024bb11-1299-48e3-bde1-107f1e68860c; s_cc=true; s_sq=%5B%5BB%5D%5D; lastConsentChange=1546358793852" "https://www.kijk.nl" -e '$raw'

Op deze manier kun je toch kijk.nl scrapen. Misschien is er een kortere/makkelijkere manier.
Gelukkig hoeft dit voor https://embed.kijk.nl/video/[prid] niet.

------------------------------------------------------------------------------------------------

PRID extractie:

$ cat <<EOF | while read a; do xidel -s -e 'extract("'$a'","(?:video|videos)/(\w+)",1)'; done
https://www.kijk.nl/sbs6/hartvannederland/videos/VR83fgb6opk/hart-van-nederland-late-editie
http://www.kijk.nl/video/VR83fgb6opk
EOF

VR83fgb6opk
VR83fgb6opk

------------------------------------------------------------------------------------------------

https://www.kijk.nl/sbs6/hartvannederland/videos/GgO61doGeqZ/hart-van-nederland-vroeg (15-01-2019)

$ xidel -s "https://embed.kijk.nl/video/GgO61doGeqZ" -e 'outer-html(//video)'
<video data-video-id="5989729116001" data-account="585049245001" data-player="B168VjQ3W" data-embed="default" data-application-id="" class="video-js" controls="" width="100%" height="100%" id="player" preload="none"></video>

Hier wordt blijkbaar nog van Brightcove gebruik gemaakt.

$ xidel -s "https://embed.kijk.nl/video/GgO61doGeqZ" --xquery 'x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json'
{
  "description": "Hart van Nederland - Vroeg",
  "poster_sources": [
    {
      "src": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/stills/sbs6_hartvannederlandvroeg_S2019E11_190115200121985121-still.jpg"
    }
  ],
  "tags": ["hartvannederlandvroeg", "sbs6", "vod"],
  "cue_points": [],
  "custom_fields": {
    "sbs_videotype": "vod",
    "sbs_adpolicy": "long",
    "sbs_episode": "S2019E11",
    "sbs_program": "hartvannederland",
    "nlz_cst_id": "GgO61doGeqZ",
    "sko_t": "1900",
    "sko_stid": "63",
    "sko_prid": "611490483",
    "sko_pr": "hart_van_nederland__vroeg",
    "sko_ty": "tv.ep",
    "sko_dt": "20190115",
    "sbs_station": "sbs6"
  },
  "account_id": "585049245001",
  "sources": [
    {
      "avg_bitrate": 2.085E6,
      "width": 868,
      "duration": 1.3086E6,
      "size": 3.23033213E8,
      "stream_name": "mp4:ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200036985121-bg-1885.mp4",
      "codec": "H264",
      "asset_id": "5989728026001",
      "container": "MP4",
      "height": 488,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 866000,
      "width": 512,
      "duration": 1.3086E6,
      "size": 1.21766761E8,
      "stream_name": "mp4:ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200026985121-bg-650.mp4",
      "codec": "H264",
      "asset_id": "5989728027001",
      "container": "MP4",
      "height": 288,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 1.116E6,
      "width": 640,
      "duration": 1.3086E6,
      "size": 1.62308598E8,
      "stream_name": "mp4:ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200028985121-bg-900.mp4",
      "codec": "H264",
      "asset_id": "5989728344001",
      "container": "MP4",
      "height": 360,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": null,
      "width": null,
      "src": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/sbs6_hartvannederlandvroeg_S2019E11_190115201516985121-hls-main.m3u8",
      "size": 0,
      "height": null,
      "duration": -1,
      "container": "M2TS",
      "codec": "H264",
      "asset_id": "5989730179001"
    },
    {
      "avg_bitrate": 1.465E6,
      "width": 768,
      "duration": 1.3086E6,
      "size": 2.11828455E8,
      "stream_name": "mp4:ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200029985121-bg-1200.mp4",
      "codec": "H264",
      "asset_id": "5989730283001",
      "container": "MP4",
      "height": 432,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    },
    {
      "avg_bitrate": 450000,
      "width": 320,
      "duration": 1.3086E6,
      "size": 7.2607446E7,
      "stream_name": "mp4:ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200022985121-bg-350.mp4",
      "codec": "H264",
      "asset_id": "5989730565001",
      "container": "MP4",
      "height": 180,
      "app_name": "rtmp://pssbsfs.fplive.net/pssbsfs"
    }
  ],
  "name": "Hart van Nederland - Vroeg",
  "reference_id": "sbs6_hartvannederlandvroeg_S2019E11_190115201543",
  "long_description": "'Waar praat Nederland vandaag over?' Toegankelijk nieuwsprogramma dat het gesprek van de dag op verrassende wijze in beeld brengt.",
  "duration": 1.3086E6,
  "economics": "AD_SUPPORTED",
  "published_at": "2019-01-15T19:15:50.278Z",
  "text_tracks": [],
  "updated_at": "2019-01-15T19:15:54.765Z",
  "thumbnail": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/stills/sbs6_hartvannederlandvroeg_S2019E11_190115200125985121-thumb.jpg",
  "poster": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/stills/sbs6_hartvannederlandvroeg_S2019E11_190115200121985121-still.jpg",
  "offline_enabled": false,
  "link": null,
  "id": "5989729116001",
  "ad_keys": null,
  "thumbnail_sources": [
    {
      "src": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/stills/sbs6_hartvannederlandvroeg_S2019E11_190115200125985121-thumb.jpg"
    }
  ],
  "created_at": "2019-01-15T19:15:50.265Z"
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

Geen expiration date hier boven. Hier wel:

$ xidel -s "http://api.kijk.nl/v1/default/entitlement/GgO61doGeqZ" -e '$json/playerInfo'
{
  "sbsvpakey": "GgO61doGeqZ",
  "hostingkey": "5989729116001",
  "license": {
    "licenseId": "YnJpZ2h0Y292ZS5GVk9ELjAuNTk4OTcyOTExNjAwMQ==",
    "licensetype": "FVOD",
    "promotions": [],
    "ishd": false,
    "startdate": {
      "date": "2019-01-15 19:30:46.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "enddate": {
      "date": "2020-01-15 19:30:46.000000",
      "timezone_type": 3,
      "timezone": "Europe/Amsterdam"
    },
    "price": 0,
    "hascontent": true,
    "preroll": true,
    "hostingkey": "5989729116001",
    "hostingservice": "brightcove",
    "AvailableOutletDevices": [
      [...]
    ]
  },
  "embed_video_url": "//embed.kijk.nl/?video=GgO61doGeqZ",
  "embed_api_url": "http://embed.kijk.nl/api/video/GgO61doGeqZ?id=kijkapp",
  "hasDRM": false
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

$ xidel -s --module=xivid.xq "https://embed.kijk.nl/video/GgO61doGeqZ" --xquery 'x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json/{"name":concat(upper-case(custom_fields/sbs_station),": ",name,if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()),"date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),"expdate":replace(json("http://api.kijk.nl/v1/default/entitlement/GgO61doGeqZ")//enddate/date,"(\d+)-(\d+)-(\d+) ([\d:]+).*","$3-$2-$1 $4"),"formats":[for $x at $i in (sources)()[stream_name] order by $x/size count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"bitrate":round(avg_bitrate div 1000)||"kbps","url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))},xivid:m3u8-to-json((sources)()[size = 0]/src)]}'
{
  "name": "SBS6: Hart van Nederland - Vroeg S2019E11",
  "date": "15-01-2019",
  "duration": "00:21:49",
  "expdate": "15-01-2020 19:30:46",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "320x180",
      "bitrate": "450kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200022985121-bg-350.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "512x288",
      "bitrate": "866kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200026985121-bg-650.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1116kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200028985121-bg-900.mp4"
    },
    {
      "format": "pg-4",
      "container": "mp4[h264+aac]",
      "resolution": "768x432",
      "bitrate": "1465kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200029985121-bg-1200.mp4"
    },
    {
      "format": "pg-5",
      "container": "mp4[h264+aac]",
      "resolution": "868x488",
      "bitrate": "2085k",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/mp4/sbs6_hartvannederlandvroeg_S2019E11_190115200036985121-bg-1885.mp4"
    },
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/sbs6_hartvannederlandvroeg_S2019E11_190115201516985121-hls-main.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "320x180",
      "bitrate": "611kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/r1/sbs6_hartvannederlandvroeg_S2019E11_190115200141985121-hls-350.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "512x288",
      "bitrate": "929kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/r2/sbs6_hartvannederlandvroeg_S2019E11_190115200150985121-hls-650.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1289kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/r3/sbs6_hartvannederlandvroeg_S2019E11_190115200159985121-hls-900.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "768x432",
      "bitrate": "1643kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/r4/sbs6_hartvannederlandvroeg_S2019E11_190115200210985121-hls-1200.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "868x488",
      "bitrate": "2179kbps",
      "url": "https://vod-bc-prod-1.talpatvcdn.nl/ra/01/98512197192f61fad62fba8d11db7a0c243dff/hls/r8/sbs6_hartvannederlandvroeg_S2019E11_190115200212985121-hls-1885.m3u8"
    }
  ]
}

Inmiddels, na een paar dagen, zijn ook deze video's over gezet naar "theplatform" api. Waarschijnlijk gebruikt Kijk Brightcove nog als backup.

------------------------------------------------------------------------------------------------


https://www.kijk.nl/sbs6/hartvannederland/videos/wyK2GhcnFje/hart-van-nederland-vroeg (16-01-2019)

$ xidel -s "https://embed.kijk.nl/video/wyK2GhcnFje" --xquery 'json(//script/extract(.,"playerConfig = (.+);",1)[.])'
{
  "playlist": [
    {
      "sources": [
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/fKaRT0ndbesA/file.mpd?feed=prod-getMediaObject&metafile=false",
          "type": "dash"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/nxnA_bHJGpLK/file.m3u8?feed=prod-getMediaObject&metafile=false",
          "type": "m3u8"
        }
      ],
      "image": "https://img.kijk.nl/media/cache/computer_nonretina_series_image/imgsrc06/images/redactioneel/1081186-LS---20190117100148--39432a5aae5a45a59f87f1de912c84dd.jpg?lu=73647e9a8561c9ec7625b167c3e43bec",
      "mediaid": "wyK2GhcnFje",
      "title": "Hart van Nederland - Vroeg ",
      "description": "Aflevering 12, Seizoen 2019",
      "displaytitle": true,
      "tracks": [],
      "fwassetid": "wyK2GhcnFje",
      "TAQ": {
        "dataLayer": {
          "media_datecreated": 1547661600,
          "media_datemodified": 1547661600,
          "media_datepublished": 1547663352,
          "media_duration": "1272",
          "media_genre": "Nieuws",
          "media_id": "wyK2GhcnFje",
          "media_name": "Hart van Nederland - Vroeg ",
          "media_program_episodenumber": "12",
          "media_program_name": "Hart van Nederland - Vroeg",
          "media_program_season": "2019",
          "media_videotype": "vod",
          "player_channel": "embedded_3p",
          "player_channelid": "embedded_3p",
          "player_embedurl": "http://www.kijk.nl/video/wyK2GhcnFje",
          "player_id": "embedded_3p",
          "player_name": "jwplayer",
          "player_source": "embedded_3p",
          "player_version": "8.2.4"
        },
        "customLayer": {
          "c_media_dateexpires": 1579199352,
          "c_media_duration_type": "long",
          "c_media_genre_code": "nieuws/actualiteiten",
          "c_media_ispartof": "Hart van Nederland - Vroeg",
          "c_media_live": 0,
          "c_media_outlet": "embedded_3p",
          "c_media_partner": "embedded3p",
          "c_media_playbacktype": "vod",
          "c_media_station": "sbs6",
          "c_sko_cl": 1272,
          "c_sko_dt": "20190116",
          "c_sko_gen": 11100,
          "c_sko_pr": "hart_van_nederland_-_vroeg_editie",
          "c_sko_prid": "611490547",
          "c_sko_stid": 63,
          "c_sko_t": "1900",
          "c_sko_ty": "tv.ep"
        }
      }
    }
  ],
  "width": "100%",
  "height": "100%",
  "stretching": "uniform",
  "autostart": "true",
  "skin": {
    "name": "kijk",
    "timeslider": {
      "progress": "#f48800"
    }
  },
  "advertising": {
    "admessage": "",
    "client": "freewheel",
    "cuetext": "Advertentie",
    "vpaidcontrols": true,
    "freewheel": {
      "networkid": "506166",
      "serverid": "https://7b935.v.fwmrm.net/ad/g/1",
      "profileid": "506166:sanoma_sbs_ovp_js_live",
      "sectionid": "sbs_embedded3p_desktop",
      "adManagerURL": "https://mssl.fwmrm.net/p/sanoma_sbs_live/AdManager.js",
      "custom": {
        "cd_type": "long",
        "vdur": "1272",
        "embed_domain": "embed.kijk.nl"
      }
    },
    "schedule": {
      "adbreak": {
        "offset": "pre",
        "tag": "placeholder_preroll"
      }
    }
  },
  "sharing": {
    "heading": "Deel Video",
    "sites": [
      {
        "label": "Facebook",
        "icon": "/talpa-jw-skin/icons/facebook.svg",
        "src": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=facebook&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2FwyK2GhcnFje&title=Hart van Nederland - Vroeg &ct=0&tt=0&"
      },
      {
        "label": "Twitter",
        "icon": "/talpa-jw-skin/icons/twitter.svg",
        "src": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=twitter&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2FwyK2GhcnFje&title=Hart van Nederland - Vroeg &ct=0&tt=0&"
      }
    ]
  },
  "cast": [],
  "related": [],
  "videoType": "vod",
  "adBlockerCheck": true,
  "allowPlayerApi": false
}

$ xidel -s --module=xivid.xq "https://embed.kijk.nl/video/wyK2GhcnFje" --xquery 'if (//video) then x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json/{"name":concat(upper-case(custom_fields/sbs_station),": ",name,if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()),"date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),"expdate":replace(json("http://api.kijk.nl/v1/default/entitlement/wyK2GhcnFje")//enddate/date,"(\d+)-(\d+)-(\d+) ([\d:]+).*","$3-$2-$1 $4"),"formats":[for $x at $i in (sources)()[stream_name] order by $x/size count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"bitrate":round(avg_bitrate div 1000)||"kbps","url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))},xivid:m3u8-to-json((sources)()[size = 0]/src)]} else json(//script/extract(.,"playerConfig = (.+);",1)[.])/(playlist)()/{"name":TAQ/customLayer/concat(upper-case(c_media_station),": ",c_media_ispartof),"date":replace(TAQ/customLayer/c_sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":TAQ/customLayer/c_sko_cl * duration("PT1S") + time("00:00:00"),"expdate":format-dateTime(TAQ/customLayer/c_media_dateexpires * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),"[D01]-[M01]-[Y] [H01]:[m01]:[s01]"),"formats":xivid:m3u8-to-json((sources)()[type="m3u8"]/file)}'
{
  "name": "SBS6: Hart van Nederland - Vroeg",
  "date": "16-01-2019",
  "duration": "00:21:12",
  "expdate": "16-01-2020 19:29:12",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]"
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/1547666742988.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "320x180",
      "bitrate": "395|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000-video=395000.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "512x288",
      "bitrate": "743|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000-video=743000.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "996|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000-video=996000.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "768x432",
      "bitrate": "1313|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000-video=1313000.m3u8"
    },
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "868x488",
      "bitrate": "2032|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/wyK2GhcnFje/6fc90666-61fd-4e10-a474-5a046800f49a/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index.ism/Hart_van_Nederland_Vroeg_Season_2019_Episode_12-index-audio_eng=94000-video=2032000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.kijk.nl/sbs6/wegmisbruikers/videos/yWLXx6VtFuG/wegmisbruikers

$ xidel -s "https://embed.kijk.nl/video/yWLXx6VtFuG" --xquery 'json(//script/extract(.,"playerConfig = (.+);",1)[.])'
{
  "playlist": [
    {
      "sources": [
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/6jW4kiLWw7Bz/file.m3u8?feed=prod-getMediaObject&metafile=false",
          "type": "m3u8"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/gR9CONHWSQHC/file.mpd?feed=prod-getMediaObject&metafile=false",
          "type": "dash"
        }
      ],
      "image": "https://img.kijk.nl/media/cache/computer_nonretina_series_image/imgsrc06/images/redactioneel/1079050-LS---20181214140739--c227486ec6235b395f7a96b978158499.jpg?lu=9d59d19573f5c680d7c96b87afff850d",
      "mediaid": "yWLXx6VtFuG",
      "title": "Wegmisbruikers",
      "description": "Aflevering 4, Seizoen 24",
      "displaytitle": true,
      "tracks": [
        {
          "file": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-thumbnails.vtt",
          "type": "webvtt",
          "kind": "thumbnails"
        },
        {
          "file": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/591af2de-73bc-4ec9-a2e4-5237954f1c2a/Wegmisbruikers_Season_24_Episode_4-webvtt-sd.vtt",
          "type": "webvtt",
          "kind": "captions",
          "label": " Doven en Slechthorenden"
        },
        {
          "file": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/591af2de-73bc-4ec9-a2e4-5237954f1c2a/Wegmisbruikers_Season_24_Episode_4-webvtt-nl.vtt",
          "type": "webvtt",
          "kind": "captions",
          "label": " Nederlands"
        }
      ],
      "fwassetid": "yWLXx6VtFuG",
      "TAQ": {
        "dataLayer": {
          "media_datecreated": 1544815800,
          "media_datemodified": 1544815800,
          "media_datepublished": 1544819058,
          "media_duration": "2403",
          "media_genre": "Scripted Reality",
          "media_id": "yWLXx6VtFuG",
          "media_name": "Wegmisbruikers",
          "media_program_episodenumber": "4",
          "media_program_name": "Wegmisbruikers",
          "media_program_season": "24",
          "media_videotype": "vod",
          "player_channel": "embedded_3p",
          "player_channelid": "embedded_3p",
          "player_embedurl": "http://www.kijk.nl/video/yWLXx6VtFuG",
          "player_id": "embedded_3p",
          "player_name": "jwplayer",
          "player_source": "embedded_3p",
          "player_version": "8.2.4"
        },
        "customLayer": {
          "c_media_dateexpires": 1576355058,
          "c_media_duration_type": "long",
          "c_media_genre_code": "Overige",
          "c_media_ispartof": "Wegmisbruikers",
          "c_media_live": 0,
          "c_media_outlet": "embedded_3p",
          "c_media_partner": "embedded3p",
          "c_media_playbacktype": "vod",
          "c_media_station": "sbs6",
          "c_sko_cl": 2403,
          "c_sko_dt": "20181214",
          "c_sko_gen": 21190,
          "c_sko_pr": "wegmisbruikers",
          "c_sko_prid": "547724877",
          "c_sko_stid": 63,
          "c_sko_t": "2027",
          "c_sko_ty": "tv.ep"
        }
      }
    }
  ],
  "width": "100%",
  "height": "100%",
  "stretching": "uniform",
  "autostart": "true",
  "skin": {
    "name": "kijk",
    "timeslider": {
      "progress": "#f48800"
    }
  },
  "advertising": {
    "admessage": "",
    "client": "freewheel",
    "cuetext": "Advertentie",
    "vpaidcontrols": true,
    "freewheel": {
      "networkid": "506166",
      "serverid": "https://7b935.v.fwmrm.net/ad/g/1",
      "profileid": "506166:sanoma_sbs_ovp_js_live",
      "sectionid": "sbs_embedded3p_desktop",
      "adManagerURL": "https://mssl.fwmrm.net/p/sanoma_sbs_live/AdManager.js",
      "custom": {
        "cd_type": "long",
        "vdur": "2403",
        "embed_domain": "embed.kijk.nl"
      }
    },
    "schedule": {
      "adbreak": {
        "offset": "pre",
        "tag": "placeholder_preroll"
      }
    }
  },
  "sharing": {
    "heading": "Deel Video",
    "sites": [
      {
        "label": "Facebook",
        "icon": "/talpa-jw-skin/icons/facebook.svg",
        "src": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=facebook&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2FyWLXx6VtFuG&title=Wegmisbruikers&ct=0&tt=0&"
      },
      {
        "label": "Twitter",
        "icon": "/talpa-jw-skin/icons/twitter.svg",
        "src": "http://www.addthis.com/bookmark.php?v=300&winname=addthis&pub=sbsinteractievemedia&source=tbx-300&lng=en-US&s=twitter&url=http%3A%2F%2Fwww.kijk.nl%2Fvideo%2FyWLXx6VtFuG&title=Wegmisbruikers&ct=0&tt=0&"
      }
    ]
  },
  "cast": [],
  "related": [],
  "videoType": "vod",
  "adBlockerCheck": true,
  "allowPlayerApi": false
}

$ xidel -s --module=xivid.xq "https://embed.kijk.nl/video/yWLXx6VtFuG" --xquery 'if (//video) then x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json/{"name":concat(upper-case(custom_fields/sbs_station),": ",name,if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()),"date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),"expdate":replace(json("http://api.kijk.nl/v1/default/entitlement/yWLXx6VtFuG")//enddate/date,"(\d+)-(\d+)-(\d+) ([\d:]+).*","$3-$2-$1 $4"),"formats":[for $x at $i in (sources)()[stream_name] order by $x/size count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"bitrate":round(avg_bitrate div 1000)||"kbps","url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))},xivid:m3u8-to-json((sources)()[size = 0]/src)]} else json(//script/extract(.,"playerConfig = (.+);",1)[.])/(playlist)()/{"name":TAQ/concat(upper-case(customLayer/c_media_station),": ",customLayer/c_media_ispartof,if (dataLayer/media_program_season != 0 and dataLayer/media_program_episodenumber <= 99) then concat(" S",dataLayer/media_program_season ! (if (. < 10) then "0"||. else .),"E",dataLayer/media_program_episodenumber ! (if (. < 10) then "0"||. else .)) else ()),"date":replace(TAQ/customLayer/c_sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":TAQ/customLayer/c_sko_cl * duration("PT1S") + time("00:00:00"),"expdate":format-dateTime(TAQ/customLayer/c_media_dateexpires * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),"[D01]-[M01]-[Y] [H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":(tracks)()[label=" Nederlands"]/file}[url],"formats":xivid:m3u8-to-json((sources)()[type="m3u8"]/file)}'
{
  "name": "SBS6: Wegmisbruikers S24E04",
  "date": "14-12-2018",
  "duration": "00:40:03",
  "expdate": "14-12-2019 21:24:18",
  "subtitle": {
    "type": "webvtt",
    "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/591af2de-73bc-4ec9-a2e4-5237954f1c2a/Wegmisbruikers_Season_24_Episode_4-webvtt-nl.vtt"
  },
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/1544789330448.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "637x252",
      "bitrate": "365|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=365058.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "910x360",
      "bitrate": "730|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=730083.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1092x432",
      "bitrate": "1500|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=1500117.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "1820x720",
      "bitrate": "3000|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=3000297.m3u8"
    },
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "2730x1080",
      "bitrate": "4500|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=4500168.m3u8"
    },
    {
      "format": "hls-7",
      "container": "m3u8[h264+aac]",
      "resolution": "2730x1080",
      "bitrate": "6000|160kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/yWLXx6VtFuG/b3c27c55-80bf-4c16-80dc-e3e057a4d092/Wegmisbruikers_Season_24_Episode_4-index.ism/Wegmisbruikers_Season_24_Episode_4-index-audio=160000-video=6000467.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

http://www.kijk.nl/net5/pekingexpress/videos/w7ZW52xLgL5/aflevering-1

$ xidel -s "https://embed.kijk.nl/video/w7ZW52xLgL5" --xquery 'json(//script/extract(.,"playerConfig = (.+);",1)[.])'
{
  "playlist": [
    {
      "sources": [
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/jMeLJuBkEPrN/file.m3u8?feed=prod-getMediaObject&metafile=false",
          "type": "m3u8"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/O3MALYiXrEvo/file.mpd?feed=prod-getMediaObject&metafile=false",
          "type": "dash"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/DrlDOZ5p_34C/file.m3u8?feed=prod-getMediaObject&metafile=false",
          "type": "m3u8"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/7VPyrVZ_p2_F/file.mpd?feed=prod-getMediaObject&metafile=false",
          "type": "dash"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/kvXDJgpLCCNY/file.mpd?feed=prod-getMediaObject&metafile=false",
          "type": "dash"
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/SaZ_Wcowy8f5/file.m3u8?feed=prod-getMediaObject&metafile=false",
          "type": "m3u8"
        }
      ],
      [...]
    }
  ],
  [...]
}

De 3 m3u8 playlists zijn allemaal hetzelfde. Daarom kiezen we gewoon de 1e --> (sources)()[type="m3u8"][1]/file.
Update 24-02-2019: De hls-manifest blijkt (tijdelijk?) niet beschikbaar te zijn. Error-handling er maar weer bij dus.

$ xidel -s --module=xivid.xq "https://embed.kijk.nl/video/w7ZW52xLgL5" --xquery 'if (//video) then x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json/{"name":concat(upper-case(custom_fields/sbs_station),": ",name,if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()),"date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),"expdate":replace(json("http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5")//enddate/date,"(\d+)-(\d+)-(\d+) ([\d:]+).*","$3-$2-$1 $4"),"formats":[for $x at $i in (sources)()[stream_name] order by $x/size count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"bitrate":round(avg_bitrate div 1000)||"kbps","url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))},xivid:m3u8-to-json((sources)()[size = 0]/src)]} else json(//script/extract(.,"playerConfig = (.+);",1)[.])/(playlist)()/{"name":TAQ/concat(upper-case(customLayer/c_media_station),": ",customLayer/c_media_ispartof,if (dataLayer/media_program_season != 0 and dataLayer/media_program_episodenumber <= 99) then concat(" S",dataLayer/media_program_season ! (if (. < 10) then "0"||. else .),"E",dataLayer/media_program_episodenumber ! (if (. < 10) then "0"||. else .)) else ()),"date":replace(TAQ/customLayer/c_sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":TAQ/customLayer/c_sko_cl * duration("PT1S") + time("00:00:00"),"expdate":format-dateTime(TAQ/customLayer/c_media_dateexpires * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),"[D01]-[M01]-[Y] [H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":(tracks)()[label=" Nederlands"]/file}[url],"formats":xivid:m3u8-to-json((sources)()[type="m3u8"][1]/file)}'
{
  "name": "NET5: Peking Express S01E01",
  "date": "03-04-2017",
  "duration": "01:03:59",
  "expdate": "31-03-2020 04:55:00",
  "subtitle": null,
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/1535976944566.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "320x180",
      "bitrate": "350|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000-video=350000.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "512x288",
      "bitrate": "655|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000-video=655000.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "912|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000-video=912000.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "768x432",
      "bitrate": "1214|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000-video=1214000.m3u8"
    },
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "868x488",
      "bitrate": "1898|94kbps",
      "url": "https://vod-tpc-prod-1.talpatvcdn.nl/SBS/w7ZW52xLgL5/9dc418ae-e80d-4c2a-b474-f856dd79840a/Peking_Express_Season_1_Episode_1-index.ism/Peking_Express_Season_1_Episode_1-index-audio=94000-video=1898000.m3u8"
    }
  ]
}

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

$ xidel -s "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e '$json/playerInfo'
{
  [...],
  "embed_api_url": "http://embed.kijk.nl/api/video/w7ZW52xLgL5?id=kijkapp",
  "hasDRM": false
}

$ xidel -s "http://api.kijk.nl/v1/default/entitlement/w7ZW52xLgL5" -e '$json/playerInfo/json(embed_api_url)'
{
  "vpakey": "w7ZW52xLgL5",
  "videoId": null,
  "mediaId": null,
  "assetId": null,
  "appleTvMediaId": null,
  "roll": "https://embed.kijk.nl/api/roll/",
  "unroll": "https://embed.kijk.nl/api/unroll/",
  "playlist": "https://embed.kijk.nl/api/playlist/.m3u8",
  [...]
}

Dit suggereert dat de Ericsson videostreams niet meer beschikbaar zijn, maar als we de url handmatig samenstellen (zie BatchGemist notes), waarbij de user_token √©n de app_token blijkbaar niet per se nodig zijn, dan werken ze nog gewoon!

$ xidel -s "https://embed.kijk.nl/api/roll/w7ZW52xLgL5_dbzyr6?base_url=https%3A//emp-prod-acc-we.ebsd.ericsson.net/sbsgroup" -e '$json'
{
  "live": "false",
  "duration": "3840200",
  "markers": [
    {
      "start_offset": "0",
      "duration": "2270840",
      "type": "AD_VAST",
      "data": {}
    },
    {
      "start_offset": "2272000",
      "duration": "1568160",
      "type": "AD_VAST",
      "data": {}
    }
  ],
  "streams": [
    {
      "name": "1080p",
      "bitrate": 7000000,
      "resolution": "1920x1080",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_9/index.m3u8"
    },
    {
      "name": "720p",
      "bitrate": 4500000,
      "resolution": "1280x720",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_7/index.m3u8"
    },
    {
      "name": "576p",
      "bitrate": 2468000,
      "resolution": "1024x576",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_6/index.m3u8"
    },
    {
      "name": "480p",
      "bitrate": 1500000,
      "resolution": "768x432",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_5/index.m3u8"
    },
    {
      "name": "360p",
      "bitrate": 900000,
      "resolution": "640x360",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_4/index.m3u8"
    },
    {
      "name": "240p",
      "bitrate": 500000,
      "resolution": "512x288",
      "url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/vod_sbs_hd_mux_unenc_2_4_3/index.m3u8"
    }
  ],
  "playlist_url": "https://embed.kijk.nl/api/playlist/w7ZW52xLgL5_dbzyr6.m3u8",
  "media_url": "https://vod-es-gf-prod-2.sbscdn.nl/prod/4/605539/"
}

Update: De api-url werkt inmiddels ook niet meer, MAAR de individuele video-urls hier boven vreemd genoeg nog wel.

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

https://www.kijk.nl/sbs6/steenrijkstraatarm/videos/UitidpB9Yx5/steenrijk-straatarm

$ xidel -s "https://embed.kijk.nl/video/UitidpB9Yx5" -e 'json(//script/extract(.,"playerConfig = (.+);",1)[.])'
{
  "playlist": [
    {
      "sources": [
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/TzEji1yiQs0E/file.m3u8?feed=prod-getMediaObject&metafile=false&token=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU",
          "type": "m3u8",
          "drm": {
            "fairplay": {
              "releasePid": "TzEji1yiQs0E",
              "certificateUrl": "https://vod-tpc-prod-1.talpatvcdn.nl/fairplay.cer",
              "processSpcUrl": "https://fairplay.entitlement.theplatform.eu/fpls/web/FairPlay?form=json&schema=1.0&token=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU&account=http%3A%2F%2Faccess.auth.theplatform.com%2Fdata%2FAccount%2F2702725319&releasePid=TzEji1yiQs0E"
            }
          }
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/TyxGZdUvCzwg/file.mpd?feed=prod-getMediaObject&metafile=false&token=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU",
          "type": "dash",
          "drm": {
            "playready": {
              "releasePid": "TyxGZdUvCzwg",
              "url": "https://green.playready.entitlement.theplatform.eu/playready/rightsmanager.asmx?form=json&schema=1.0&auth=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU&account=http%3A%2F%2Faccess.auth.theplatform.com%2Fdata%2FAccount%2F2702725319&releasePid=TyxGZdUvCzwg"
            }
          }
        },
        {
          "file": "https://link.theplatform.eu/s/-9DGhC/TkNGUgBksp7W/file.mpd?feed=prod-getMediaObject&metafile=false&token=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU",
          "type": "dash",
          "drm": {
            "widevine": {
              "releasePid": "TkNGUgBksp7W",
              "url": "https://widevine.entitlement.theplatform.eu/wv/web/ModularDrm?form=json&schema=1.0&token=5tqJrjfYAKMAGxQ-2NbMcYBWoEAeMFDU&account=http%3A%2F%2Faccess.auth.theplatform.com%2Fdata%2FAccount%2F2702725319&releasePid=TkNGUgBksp7W"
            }
          }
        }
      ],
      [...]
    }
  ],
  [...]
}

DRM √©n SAMPLE-AES encryptie. FFmpeg ondersteunt dit nog niet, maar omdat het vanwege DRM sowieso niet gaat werken filteren we deze er uit met [not(drm)].

$ xidel -s --module=xivid.xq "https://embed.kijk.nl/video/UitidpB9Yx5" --xquery 'if (//video) then x:request({"headers":"Accept: application/json;pk="||extract(unparsed-text(//script[contains(@src,//@data-account)]/@src),"policyKey:&quot;(.+?)&quot;",1),"url":concat("https://edge.api.brightcove.com/playback/v1/accounts/",//@data-account,"/videos/",//@data-video-id)})/json/{"name":concat(upper-case(custom_fields/sbs_station),": ",name,if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()),"date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),"expdate":replace(json("http://api.kijk.nl/v1/default/entitlement/UitidpB9Yx5")//enddate/date,"(\d+)-(\d+)-(\d+) ([\d:]+).*","$3-$2-$1 $4"),"formats":[for $x at $i in (sources)()[stream_name] order by $x/size count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"bitrate":round(avg_bitrate div 1000)||"kbps","url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))},xivid:m3u8-to-json((sources)()[size = 0]/src)]} else json(//script/extract(.,"playerConfig = (.+);",1)[.])/(playlist)()/{"name":TAQ/concat(upper-case(customLayer/c_media_station),": ",customLayer/c_media_ispartof,if (dataLayer/media_program_season != 0 and dataLayer/media_program_episodenumber <= 99) then concat(" S",dataLayer/media_program_season ! (if (. < 10) then "0"||. else .),"E",dataLayer/media_program_episodenumber ! (if (. < 10) then "0"||. else .)) else ()),"date":replace(TAQ/customLayer/c_sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),"duration":TAQ/customLayer/c_sko_cl * duration("PT1S") + time("00:00:00"),"expdate":format-dateTime(TAQ/customLayer/c_media_dateexpires * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),"[D01]-[M01]-[Y] [H01]:[m01]:[s01]"),"subtitle":{"type":"webvtt","url":(tracks)()[label=" Nederlands"]/file}[url],"formats":xivid:m3u8-to-json((sources)()[not(drm) and type="m3u8"][1]/file)}'
{
  "name": "SBS6: Steenrijk, straatarm S03E03",
  "date": "09-01-2019",
  "duration": "00:41:35",
  "expdate": "09-01-2024 21:28:03",
  "subtitle": null,
  "formats": null
}

------------------------------------------------------------------------------------------------

--xquery '
  if (//video) then
    x:request({
      "headers":"Accept: application/json;pk="||extract(
        unparsed-text(//script[contains(@src,//@data-account)]/@src),
        "policyKey:&quot;(.+?)&quot;",
        1
      ),
      "url":concat(
        "https://edge.api.brightcove.com/playback/v1/accounts/",
        //@data-account,
        "/videos/",
        //@data-video-id
      )
    })/json/{
      "name":concat(
        upper-case(custom_fields/sbs_station),
        ": ",
        name,
        if (custom_fields/sbs_episode) then " "||custom_fields/sbs_episode else ()
      ),
      "date":replace(custom_fields/sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),
      "duration":round(duration div 1000) * duration("PT1S") + time("00:00:00"),
      "expdate":replace(
        json("http://api.kijk.nl/v1/default/entitlement/'$1'")//enddate/date,
        "(\d+)-(\d+)-(\d+) ([\d:]+).*",
        "$3-$2-$1 $4"
      ),
      "formats":[
        for $x at $i in (sources)()[stream_name]
        order by $x/size
        count $i
        return
        $x/{
          "format":"pg-"||$i,
          "container":"mp4[h264+aac]",
          "resolution":concat(width,"x",height),
          "bitrate":round(avg_bitrate div 1000)||"kbps",
          "url":replace(stream_name,"mp4:",extract($a,"(.+?nl/)",1))
        },
        xivid:m3u8-to-json((sources)()[size = 0]/src)
      ]
    }
  else
    json(
      //script/extract(.,"playerConfig = (.+);",1)[.]
    )/(playlist)()/{
      "name":TAQ/concat(
        upper-case(customLayer/c_media_station),
        ": ",
        customLayer/c_media_ispartof,
        if (dataLayer/media_program_season != 0 and dataLayer/media_program_episodenumber <= 99) then
          concat(
            " S",
            dataLayer/media_program_season ! (if (. < 10) then "0"||. else .),
            "E",
            dataLayer/media_program_episodenumber ! (if (. < 10) then "0"||. else .)
          )
        else
          ()
      ),
      "date":replace(TAQ/customLayer/c_sko_dt,"(\d{4})(\d{2})(\d{2})","$3-$2-$1"),
      "duration":TAQ/customLayer/c_sko_cl * duration("PT1S") + time("00:00:00"),
      "expdate":format-dateTime(
        TAQ/customLayer/c_media_dateexpires * duration("PT1S") +
        (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + dateTime("1970-01-01T00:00:00"),
        "[D01]-[M01]-[Y] [H01]:[m01]:[s01]"
      ),
      "subtitle":{
        "type":"webvtt",
        "url":(tracks)()[label=" Nederlands"]/file
      }[url],
      "formats":xivid:m3u8-to-json((sources)()[not(drm) and type="m3u8"][1]/file)
    }
'

================================================================================================

[tvblik,uitzendinggemist]

$ cat <<EOF | while read a; do xidel -s "$a" -e '//div[@id="embed-player"]/(@data-episode,.//@href)'; done
https://tvblik.nl/journaal/nos-851
https://tvblik.nl/rtl-nieuws/laat-997
https://tvblik.nl/hart-van-nederland/15-januari-2019
EOF
//www.npostart.nl/embed/nos-journaal/15-01-2019/POW_04060130
http://www.rtlxl.nl/#!/_rtl-nieuws-132237/02b2833d-48dd-3a08-b6cd-8dbadcf8fba4?utm_medium=refferal&utm_source=tvblik
//embed.kijk.nl/?width=640&height=360&video=GgO61doGeqZ&autoplay=1

$ cat <<EOF | while read a; do xidel -s "$a" -e '//a[@rel="nofollow"]/@onclick,//iframe[@class="sbsEmbed"]/@src'; done
https://www.uitzendinggemist.net/aflevering/461995/Nos_Journaal.html
https://www.uitzendinggemist.net/aflevering/462016/Rtl_Nieuws_1930_Uur.html
https://www.uitzendinggemist.net/aflevering/462122/Hart_Van_Nederland.html
EOF
window.open('http://www.npo.nl/aa-aa/01-01-2015/POW_04059331','winname',"directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0,scrollbars=yes,resizable=no,width=800,height=600");
window.open('http://www.rtlxl.nl/#!/zzzz/9483a466-6424-3dff-99fd-2d558a950e3e','winname',"directories=0,titlebar=0,toolbar=0,location=0,status=0,menubar=0,scrollbars=yes,resizable=no,width=1024,height=600");
https://embed.kijk.nl/?width=720&height=410&video=GgO61doGeqZ

$ cat <<EOF | while read a; do xidel -s "$a" -e 'join(extract((//div[@id="embed-player"]/(@data-episode,.//@href),//a[@rel="nofollow"]/@onclick,//iframe[@class="sbsEmbed"]/@src),"(npo|rtl|kijk).+(?:/|video=)([\w-]+)",(1,2)))'; done
https://tvblik.nl/journaal/nos-851
https://tvblik.nl/rtl-nieuws/laat-997
https://tvblik.nl/hart-van-nederland/15-januari-2019
https://www.uitzendinggemist.net/aflevering/461995/Nos_Journaal.html
https://www.uitzendinggemist.net/aflevering/462016/Rtl_Nieuws_1930_Uur.html
https://www.uitzendinggemist.net/aflevering/462122/Hart_Van_Nederland.html
EOF
npo POW_04060130
rtl 02b2833d-48dd-3a08-b6cd-8dbadcf8fba4
kijk rEFjefrsn1A
npo POW_04059331
rtl 9483a466-6424-3dff-99fd-2d558a950e3e
kijk GgO61doGeqZ

------------------------------------------------------------------------------------------------

-e '
  join(
    extract(
      (
        //div[@id="embed-player"]/(@data-episode,.//@href),
        //a[@rel="nofollow"]/@onclick,
        //iframe[@class="sbsEmbed"]/@src
      ),
      "(npo|rtl|kijk).+(?:/|video=)([\w-]+)",
      (1,2)
    )
  )
'

================================================================================================

[youtube]

https://www.youtube.com/watch?v=nG_LtCRRZ20 (normaal toegankelijke video)

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" -e '(//meta[@property="og:title"]/@content,//meta[@itemprop="datePublished"]/@content,//meta[@itemprop="duration"]/@content)'
Delta Impuls 2 - Delta Impuls 3 (regionale 1e klasse tafeltennis, 18-01-2019)
2019-02-01
PT18M13S

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" -e '{"name"://meta[@property="og:title"]/@content,"date":format-date(date(//meta[@itemprop="datePublished"]/@content),"[D01]-[M01]-[Y]"),"duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00")}'
{
  "name": "Delta Impuls 2 - Delta Impuls 3 (regionale 1e klasse tafeltennis, 18-01-2019)",
  "date": "01-02-2019",
  "duration": "00:18:13"
}

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return (tokenize($a/url_encoded_fmt_stream_map,","),tokenize($a/fmt_list,","))'
itag=22&quality=hd720&type=video%2Fmp4%3B+codecs%3D%22avc1.64001F%2C+mp4a.40.2%22&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]
itag=43&quality=medium&type=video%2Fwebm%3B+codecs%3D%22vp8.0%2C+vorbis%22&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]
itag=18&quality=medium&type=video%2Fmp4%3B+codecs%3D%22avc1.42001E%2C+mp4a.40.2%22&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]
22/1280x720
43/640x360
18/640x360

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=tokenize($a/url_encoded_fmt_stream_map,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return ($b,tokenize($a/fmt_list,",") ! substring-after(.,"/"))'
{
  "itag": "22",
  "quality": "hd720",
  "type": "video/mp4; codecs=\"avc1.64001F, mp4a.40.2\"",
  "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=22[...]"
}
{
  "itag": "43",
  "quality": "medium",
  "type": "video/webm; codecs=\"vp8.0, vorbis\"",
  "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=43[...]"
}
{
  "itag": "18",
  "quality": "medium",
  "type": "video/mp4; codecs=\"avc1.42001E, mp4a.40.2\"",
  "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=18[...]"
}
1280x720
640x360
640x360

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=tokenize($a/url_encoded_fmt_stream_map,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return [for $x at $i in reverse($b) return {"format":"pg-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",(1 to 3)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else $a[2],"+",if ($a[3]="mp4a") then "aac" else $a[3],"]"),"resolution":reverse(tokenize($a/fmt_list,",") ! substring-after(.,"/"))[$i],"url":$x/url}]'
[
  {
    "format": "pg-1",
    "container": "mp4[h264+aac]",
    "resolution": "640x360",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=18[...]"
  },
  {
    "format": "pg-2",
    "container": "webm[vp8+vorbis]",
    "resolution": "640x360",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=43[...]"
  },
  {
    "format": "pg-3",
    "container": "mp4[h264+aac]",
    "resolution": "1280x720",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=22[...]"
  }
]

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return $a/json(player_response)/streamingData/dashManifestUrl'
https://manifest.googlevideo.com/api/manifest/dash/[...]

Zonder "disable_polymer" (doc(dashManifestUrl||"/disable_polymer/true")) waren de DASH streams tot voor kort niet te openen met FFmpeg, of MPC-HC (zie https://github.com/rg3/youtube-dl/issues/14083). Dat lijkt nu niet meer het geval te zijn.
Bij lang niet alle Youtube video's is een dashmanifest aanwezig. Daarom geef ik de voorkeur aan het ontleden van de "adaptive_fmts" query-string in de "ytplayer.config"-json (hier onder). Toch is hier voor de volledigheid de query voor het ontleden van de dashmanifest.
Sorteer op de aanwezigheid van @width, zodat de audio-only streams bovenaan komen, √©n vervolgens op @bandwidth.

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return [for $x at $i in doc($a/json(player_response)/streamingData/dashManifestUrl)//Representation order by $x/boolean(@width),$x/@bandwidth count $i return {"format":"dash-"||$i,"container":concat(substring-after($x/../@mimeType,"/"),"[",extract($x/@codecs,"(^[\w]+)",1) ! (if (.="mp4a") then "aac" else if (.="avc1") then "h264" else .),"]"),"resolution":$x/@width ! concat(.,"x",$x/@height,"@",$x/@frameRate,"fps"),"samplerate":$x/@audioSamplingRate ! concat(. div 1000,"kHz"),"bitrate":round($x/@bandwidth div 1000)||"kbps","url":$x/BaseUrl}]'
[
  {
    "format": "dash-1",
    "container": "mp4[aac]",
    "resolution": null,
    "samplerate": "22.05kHz",
    "bitrate": "51kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback/id/9c6fcbb42451676d/itag/139/[...]"
  },
  {
    "format": "dash-2",
    "container": "mp4[aac]",
    "resolution": null,
    "samplerate": "44.1kHz",
    "bitrate": "131kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback/id/9c6fcbb42451676d/itag/140/[...]"
  },
  [...]
  {
    "format": "dash-14",
    "container": "mp4[h264]",
    "resolution": "1280x720@50fps",
    "samplerate": null,
    "bitrate": "2866kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback/id/9c6fcbb42451676d/itag/298/[...]"
  }
]
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return tokenize($a/adaptive_fmts,",")'
fps=25&itag=136&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]&index=0-0&stream_type=3&xtags=&projection_type=1&type=video%2Fmp4%3B+codecs%3D%22avc1.4d4016%22&clen=0&quality_label=720p&init=0-0&lmt=1548978905736975&size=1280x720&bitrate=2310000
fps=25&itag=247&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]&index=0-0&stream_type=3&xtags=&projection_type=1&type=video%2Fwebm%3B+codecs%3D%22vp9%22&clen=0&quality_label=720p&init=0-0&lmt=1548978905736975&size=1280x720&bitrate=1505280
fps=50&itag=298&url=https%3A%2F%2Fr4---sn-mn4vg5aa-5hns.googlevideo.com%2Fvideoplayback%3F[...]&index=764-3363&xtags=&projection_type=1&type=video%2Fmp4%3B+codecs%3D%22avc1.4d4020%22&clen=214600383&quality_label=720p50&init=0-763&lmt=1548978905736975&size=1280x720&bitrate=2866450
[...]

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=tokenize($a/adaptive_fmts,",")) ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return $b'
{
  "fps": "25",
  "itag": "136",
  "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=136[...]",
  "index": "0-0",
  "stream_type": "3",
  "xtags": "",
  "projection_type": "1",
  "type": "video/mp4; codecs=\"avc1.4d4016\"",
  "clen": "0",
  "quality_label": "720p",
  "init": "0-0",
  "lmt": "1548978905736975",
  "size": "1280x720",
  "bitrate": "2310000"
}
[...]

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=tokenize($a/adaptive_fmts,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return [for $x at $i in $b order by $x/boolean(size),$x/bitrate count $i return {"format":"dash-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)(?:\.|&quot;)",(1,2)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else if ($a[2]="mp4a") then "aac" else $a[2],"]"),"resolution":$x/size ! concat(.,"@",$x/fps,"fps"),"samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),"bitrate":round($x/bitrate div 1000)||"kbps","url":$x/url}]'
[
  {
    "format": "dash-1",
    "container": "mp4[aac]",
    "resolution": null,
    "samplerate": "44.1kHz",
    "bitrate": "131kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=140[...]"
  },
  {
    "format": "dash-2",
    "container": "webm[vp9]",
    "resolution": "256x144@25fps",
    "samplerate": null,
    "bitrate": "95kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=278[...]"
  },
  {
    "format": "dash-3",
    "container": "mp4[h264]",
    "resolution": "256x144@25fps",
    "samplerate": null,
    "bitrate": "108kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=160[...]"
  },
  {
    "format": "dash-4",
    "container": "webm[vp9]",
    "resolution": "426x240@25fps",
    "samplerate": null,
    "bitrate": "221kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=242[...]"
  },
  {
    "format": "dash-5",
    "container": "mp4[h264]",
    "resolution": "426x240@25fps",
    "samplerate": null,
    "bitrate": "242kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=133[...]"
  },
  {
    "format": "dash-6",
    "container": "webm[vp9]",
    "resolution": "640x360@25fps",
    "samplerate": null,
    "bitrate": "406kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=243[...]"
  },
  {
    "format": "dash-7",
    "container": "mp4[h264]",
    "resolution": "640x360@25fps",
    "samplerate": null,
    "bitrate": "613kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=134[...]"
  },
  {
    "format": "dash-8",
    "container": "webm[vp9]",
    "resolution": "854x480@25fps",
    "samplerate": null,
    "bitrate": "753kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=244[...]"
  },
  {
    "format": "dash-9",
    "container": "mp4[h264]",
    "resolution": "854x480@25fps",
    "samplerate": null,
    "bitrate": "1155kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=135[...]"
  },
  {
    "format": "dash-10",
    "container": "webm[vp9]",
    "resolution": "1280x720@25fps",
    "samplerate": null,
    "bitrate": "1505kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=247[...]"
  },
  {
    "format": "dash-11",
    "container": "mp4[h264]",
    "resolution": "1280x720@25fps",
    "samplerate": null,
    "bitrate": "2310kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=136[...]"
  },
  {
    "format": "dash-12",
    "container": "webm[vp9]",
    "resolution": "1280x720@50fps",
    "samplerate": null,
    "bitrate": "2646kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=302[...]"
  },
  {
    "format": "dash-13",
    "container": "mp4[h264]",
    "resolution": "1280x720@50fps",
    "samplerate": null,
    "bitrate": "2866kbps",
    "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=298[...]"
  }
]

$ xidel -s "https://www.youtube.com/watch?v=nG_LtCRRZ20" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=$a/(url_encoded_fmt_stream_map,adaptive_fmts) ! tokenize(.,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return {"name"://meta[@property="og:title"]/@content,"date":format-date(date(//meta[@itemprop="datePublished"]/@content),"[D01]-[M01]-[Y]"),"duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00"),"formats":[for $x at $i in reverse($b[quality]) return {"format":"pg-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",(1 to 3)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else $a[2],"+",if ($a[3]="mp4a") then "aac" else $a[3],"]"),"resolution":reverse(tokenize($a/fmt_list,",") ! substring-after(.,"/"))[$i],"url":$x/url},for $x at $i in $b[index] order by $x/boolean(size),$x/bitrate count $i return {"format":"dash-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)(?:\.|&quot;)",(1,2)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else if ($a[2]="mp4a") then "aac" else $a[2],"]"),"resolution":$x/size ! concat(.,"@",$x/fps,"fps"),"samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),"bitrate":round($x/bitrate div 1000)||"kbps","url":$x/url}]}'
{
  "name": "Delta Impuls 2 - Delta Impuls 3 (regionale 1e klasse tafeltennis, 18-01-2019)",
  "date": "01-02-2019",
  "duration": "00:18:13",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=18[...]"
    },
    [...]
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=22[...]"
    },
    {
      "format": "dash-1",
      "container": "mp4[aac]",
      "resolution": null,
      "samplerate": "44.1kHz",
      "bitrate": "131kbps",
      "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=140[...]"
    },
    [...]
    {
      "format": "dash-13",
      "container": "mp4[h264]",
      "resolution": "1280x720@50fps",
      "samplerate": null,
      "bitrate": "2866kbps",
      "url": "https://r4---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=298[...]"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.youtube.com/watch?v=2U5mf_fEKiU (leeftijds beperkte video) (https://github.com/rg3/youtube-dl/issues/17604#issuecomment-422367440)

$ xidel -s "https://www.youtube.com/watch?v=2U5mf_fEKiU" -e 'outer-html(//meta[@property="og:restrictions:age"])'
<meta property="og:restrictions:age" content="18+">

$ xidel -s "https://www.youtube.com/watch?v=2U5mf_fEKiU" -e 'concat("https://www.youtube.com/get_video_info?video_id=",//meta[@itemprop="videoId"]/@content,"&eurl=",uri-encode("https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content),"&sts=",json(doc("https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content)//script/extract(.,"setConfig\((.+?)\)",1,"*")[3])//sts)'
https://www.youtube.com/get_video_info?video_id=2U5mf_fEKiU&eurl=https%3A%2F%2Fyoutube.googleapis.com%2Fv%2F2U5mf_fEKiU&sts=17940

Wat deze url teruggeeft is een volledige url-encoded "ytplayer.config"-json in query-string formaat (application/x-www-form-urlencoded). Om daar eerst weer de json van te maken:

$ xidel -s "https://www.youtube.com/watch?v=2U5mf_fEKiU" --xquery 'let $a:=concat("https://www.youtube.com/get_video_info?video_id=",//meta[@itemprop="videoId"]/@content,"&amp;eurl=",uri-encode("https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content),"&amp;sts=",json(doc("https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content)//script/extract(.,"setConfig\((.+?)\)",1,"*")[3])//sts) return {|for $x in tokenize(unparsed-text($a),"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|}'

$ xidel -s "https://www.youtube.com/watch?v=2U5mf_fEKiU" --xquery 'let $a:=if (//meta[@property="og:restrictions:age"]) then {|for $x in tokenize(unparsed-text(concat("https://www.youtube.com/get_video_info?video_id=",//meta[@itemprop="videoId"]/@content,"&amp;eurl=",uri-encode("https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content),"&amp;sts=",json(doc("https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content)//script/extract(.,"setConfig\((.+?)\)",1,"*")[3])//sts)),"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} else json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=$a/(url_encoded_fmt_stream_map,adaptive_fmts) ! tokenize(.,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return {"name"://meta[@property="og:title"]/@content,"date":format-date(date(//meta[@itemprop="datePublished"]/@content),"[D01]-[M01]-[Y]"),"duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00"),"formats":[for $x at $i in reverse($b[quality]) return {"format":"pg-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",(1 to 3)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else $a[2],"+",if ($a[3]="mp4a") then "aac" else $a[3],"]"),"resolution":reverse(tokenize($a/fmt_list,",") ! substring-after(.,"/"))[$i],"url":$x/url},for $x at $i in $b[index] order by $x/boolean(size),$x/bitrate count $i return {"format":"dash-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)(?:\.|&quot;)",(1,2)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else if ($a[2]="mp4a") then "aac" else $a[2],"]"),"resolution":$x/size ! concat(.,"@",$x/fps,"fps"),"samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),"bitrate":round($x/bitrate div 1000)||"kbps","url":$x/url}]}'
{
  "name": "Allow embedding, Age restriction",
  "date": "18-09-2018",
  "duration": "00:00:21",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "url": "https://r1---sn-mn4vg5aa-5hnl.googlevideo.com/videoplayback?itag=18[...]"
    },
    [...]
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "url": "https://r1---sn-mn4vg5aa-5hnl.googlevideo.com/videoplayback?itag=22[...]"
    },
    {
      "format": "dash-1",
      "container": "mp4[aac]",
      "resolution": null,
      "samplerate": "44.1kHz",
      "bitrate": "130kbps",
      "url": "https://r1---sn-mn4vg5aa-5hnl.googlevideo.com/videoplayback?itag=140[...]"
    },
    [...]
    {
      "format": "dash-17",
      "container": "mp4[h264]",
      "resolution": "1920x1080@60fps",
      "samplerate": null,
      "bitrate": "5809kbps",
      "url": "https://r1---sn-mn4vg5aa-5hnl.googlevideo.com/videoplayback?itag=299[...]"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.youtube.com/watch?v=MdC976o12a4 (live videostream)

$ xidel -s "https://www.youtube.com/watch?v=MdC976o12a4" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return if ($a/livestream="1") then $a/json(player_response)/streamingData/hlsManifestUrl else ()'
https://manifest.googlevideo.com/api/manifest/hls_variant/[...]/index.m3u8

$ xidel -s --module=xivid.xq "https://www.youtube.com/watch?v=MdC976o12a4" --xquery 'let $a:=if (//meta[@property="og:restrictions:age"]) then {|for $x in tokenize(unparsed-text(concat("https://www.youtube.com/get_video_info?video_id=",//meta[@itemprop="videoId"]/@content,"&amp;eurl=",uri-encode("https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content),"&amp;sts=",json(doc("https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content)//script/extract(.,"setConfig\((.+?)\)",1,"*")[3])//sts)),"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} else json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=$a/(url_encoded_fmt_stream_map,adaptive_fmts) ! tokenize(.,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return if ($a/livestream="1") then {"name"://meta[@property="og:title"]/@content,"date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/json(player_response)/streamingData/hlsManifestUrl)} else {"name"://meta[@property="og:title"]/@content,"date":format-date(date(//meta[@itemprop="datePublished"]/@content),"[D01]-[M01]-[Y]"),"duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00"),"formats":[for $x at $i in reverse($b[quality]) return {"format":"pg-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",(1 to 3)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else $a[2],"+",if ($a[3]="mp4a") then "aac" else $a[3],"]"),"resolution":reverse(tokenize($a/fmt_list,",") ! substring-after(.,"/"))[$i],"url":$x/url},for $x at $i in $b[index] order by $x/boolean(size),$x/bitrate count $i return {"format":"dash-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)(?:\.|&quot;)",(1,2)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else if ($a[2]="mp4a") then "aac" else $a[2],"]"),"resolution":$x/size ! concat(.,"@",$x/fps,"fps"),"samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),"bitrate":round($x/bitrate div 1000)||"kbps","url":$x/url}]}'
{
  "name": "2019 ITTF Slovenia Open | Day 5 Morning",
  "date": "12-05-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_variant/[...]/itag/0/[...]/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "256x144@30fps",
      "bitrate": "197kbps",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_playlist/[...]/itag/91/[...]/index.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "426x240@30fps",
      "bitrate": "338kbps",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_playlist/[...]/itag/92/[...]/index.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360@30fps",
      "bitrate": "830kbps",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_playlist/[...]/itag/93/[...]/index.m3u8"
    },
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "854x480@30fps",
      "bitrate": "1381kbps",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_playlist/[...]/itag/94/[...]/index.m3u8"
    },
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720@30fps",
      "bitrate": "2594kbps",
      "url": "https://manifest.googlevideo.com/api/manifest/hls_playlist/[...]/itag/95/[...]/index.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.youtube.com/watch?v=GuoxLggqI_g (video met ondertiteling)

$ xidel -s "https://www.youtube.com/watch?v=GuoxLggqI_g" --xquery 'let $a:=json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args return $a/(json(player_response)//captionTracks)()[languageCode="nl"]'
{
  "baseUrl": "https://www.youtube.com/api/timedtext?[...]&lang=nl",
  "name": {
    "simpleText": "Nederlands"
  },
  "vssId": ".nl",
  "languageCode": "nl",
  "isTranslatable": true
}

$ xidel -s --module=xivid.xq "https://www.youtube.com/watch?v=GuoxLggqI_g" --xquery 'let $a:=if (//meta[@property="og:restrictions:age"]) then {|for $x in tokenize(unparsed-text(concat("https://www.youtube.com/get_video_info?video_id=",//meta[@itemprop="videoId"]/@content,"&amp;eurl=",uri-encode("https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content),"&amp;sts=",json(doc("https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content)//script/extract(.,"setConfig\((.+?)\)",1,"*")[3])//sts)),"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} else json(//script/extract(.,"ytplayer.config = (.+?\});",1)[.])/args,$b:=$a/(url_encoded_fmt_stream_map,adaptive_fmts) ! tokenize(.,",") ! {|for $x in tokenize(.,"&amp;") let $a:=tokenize($x,"=") return {$a[1]:uri-decode($a[2])}|} return if ($a/livestream="1") then {"name"://meta[@property="og:title"]/@content,"date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/json(player_response)/streamingData/hlsManifestUrl)} else {"name"://meta[@property="og:title"]/@content,"date":format-date(date(//meta[@itemprop="datePublished"]/@content),"[D01]-[M01]-[Y]"),"duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00"),"subtitle":{"type":"ttml","url":$a/(json(player_response)//captionTracks)()[languageCode="nl"]/baseUrl}[url],"formats":[for $x at $i in reverse($b[quality]) return {"format":"pg-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",(1 to 3)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else $a[2],"+",if ($a[3]="mp4a") then "aac" else $a[3],"]"),"resolution":reverse(tokenize($a/fmt_list,",") ! substring-after(.,"/"))[$i],"url":$x/url},for $x at $i in $b[index] order by $x/boolean(size),$x/bitrate count $i return {"format":"dash-"||$i,"container":let $a:=extract($x/type,"/(.+);.+&quot;(\w+)(?:\.|&quot;)",(1,2)) return concat(if ($a[1]="3gpp") then "3gp" else $a[1],"[",if ($a[2]="avc1") then "h264" else if ($a[2]="mp4a") then "aac" else $a[2],"]"),"resolution":$x/size ! concat(.,"@",$x/fps,"fps"),"samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),"bitrate":round($x/bitrate div 1000)||"kbps","url":$x/url}]}'
{
  "name": "The Uncertainty Has Settled (Full film)",
  "date": "07-11-2018",
  "duration": "01:28:26",
  "subtitle": {
    "type": "ttml",
    "url": "https://www.youtube.com/api/timedtext?[...]&lang=nl"
  },
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "452kbps",
      "url": "https://r2---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=18[...]"
    },
    [...]
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "825kbps",
      "url": "https://r2---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=22[...]"
    },
    {
      "format": "dash-1",
      "container": "webm[opus]",
      "resolution": null,
      "samplerate": "48kHz",
      "bitrate": "91kbps",
      "url": "https://r2---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=249[...]"
    },
    [...]
    {
      "format": "dash-17",
      "container": "mp4[h264]",
      "resolution": "1920x1080@25fps",
      "samplerate": null,
      "bitrate": "4826kbps",
      "url": "https://r2---sn-mn4vg5aa-5hns.googlevideo.com/videoplayback?itag=137[...]"
    }
  ]
}

------------------------------------------------------------------------------------------------

$ ./bashgemist.sh -i https://www.youtube.com/watch?v=GuoxLggqI_g
Naam:          The Uncertainty Has Settled (Full film)
Datum:         07-11-2018
Tijdsduur:     01:28:26
Ondertiteling: ttml
Formaten:      formaat  container         resolutie        frequentie  bitrate
               pg-1     mp4[h264+aac]     640x360
               pg-2     webm[vp8+vorbis]  640x360
               pg-3     mp4[h264+aac]     1280x720
               dash-1   webm[opus]                         48kHz       91kbps
               dash-2   webm[opus]                         48kHz       109kbps
               dash-3   mp4[aac]                           44.1kHz     135kbps
               dash-4   webm[vorbis]                       44.1kHz     145kbps
               dash-5   webm[opus]                         48kHz       176kbps
               dash-6   webm[vp9]         256x144@25fps                102kbps
               dash-7   mp4[h264]         256x144@25fps                115kbps
               dash-8   webm[vp9]         426x240@25fps                233kbps
               dash-9   mp4[h264]         426x240@25fps                337kbps
               dash-10  webm[vp9]         640x360@25fps                431kbps
               dash-11  mp4[h264]         640x360@25fps                740kbps
               dash-12  webm[vp9]         854x480@25fps                776kbps
               dash-13  mp4[h264]         854x480@25fps                1357kbps
               dash-14  webm[vp9]         1280x720@25fps               1619kbps
               dash-15  mp4[h264]         1280x720@25fps               2402kbps
               dash-16  webm[vp9]         1920x1080@25fps              2882kbps
               dash-17  mp4[h264]         1920x1080@25fps              4826kbps  (best)

------------------------------------------------------------------------------------------------

--xquery '
  let $a:=if (//meta[@property="og:restrictions:age"]) then
        {|
          for $x in tokenize(
            unparsed-text(
              concat(
                "https://www.youtube.com/get_video_info?video_id=",
                //meta[@itemprop="videoId"]/@content,
                "&amp;eurl=",
                uri-encode(
                  "https://youtube.googleapis.com/v/"||//meta[@itemprop="videoId"]/@content
                ),
                "&amp;sts=",
                json(
                  doc(
                    "https://www.youtube.com/embed/"||//meta[@itemprop="videoId"]/@content
                  )//script/extract(.,"setConfig\((.+?)\)",1,"*")[3]
                )//sts
              )
            ),
            "&amp;"
          )
          let $a:=tokenize($x,"=")
          return {
            $a[1]:uri-decode($a[2])
          }
        |}
      else
        json(
          //script/extract(.,"ytplayer.config = (.+?\});",1)[.]
        )/args,
      $b:=$a/(
        url_encoded_fmt_stream_map,
        adaptive_fmts
      ) ! tokenize(.,",") ! {|
        for $x in tokenize(.,"&amp;")
        let $a:=tokenize($x,"=")
        return {
          $a[1]:uri-decode($a[2])
        }
      |}
  return
  if ($a/livestream="1") then {
    "name"://meta[@property="og:title"]/@content,
    "date":format-date(current-date(),"[D01]-[M01]-[Y]"),
    "formats":xivid:m3u8-to-json($a/json(player_response)/streamingData/hlsManifestUrl)
  } else {
    "name"://meta[@property="og:title"]/@content,
    "date":format-date(
      date(//meta[@itemprop="datePublished"]/@content),
      "[D01]-[M01]-[Y]"
    ),
    "duration":duration(//meta[@itemprop="duration"]/@content) + time("00:00:00"),
    "subtitle":{
      "type":"ttml",
      "url":$a/(json(player_response)//captionTracks)()[languageCode="nl"]/baseUrl
    }[url],
    "formats":[
      for $x at $i in reverse($b[quality]) return {
        "format":"pg-"||$i,
        "container":let $a:=extract(
          $x/type,
          "/(.+);.+&quot;(\w+)\..+ (\w+)(?:\.|&quot;)",
          (1 to 3)
        ) return
        concat(
          if ($a[1]="3gpp") then "3gp" else $a[1],
          "[",
          if ($a[2]="avc1") then "h264" else $a[2],
          "+",
          if ($a[3]="mp4a") then "aac" else $a[3],
          "]"
        ),
        "resolution":reverse(
          tokenize($a/fmt_list,",") ! substring-after(.,"/")
        )[$i],
        "url":$x/url
      },
      for $x at $i in $b[index]
      order by $x/boolean(size),$x/bitrate
      count $i
      return {
        "format":"dash-"||$i,
        "container":let $a:=extract(
          $x/type,
          "/(.+);.+&quot;(\w+)(?:\.|&quot;)",
          (1,2)
        ) return
        concat(
          if ($a[1]="3gpp") then "3gp" else $a[1],
          "[",
          if ($a[2]="avc1") then "h264"
          else if ($a[2]="mp4a") then "aac" else $a[2],
          "]"
        ),
        "resolution":$x/size ! concat(.,"@",$x/fps,"fps"),
        "samplerate":$x/audio_sample_rate ! concat(. div 1000,"kHz"),
        "bitrate":round($x/bitrate div 1000)||"kbps",
        "url":$x/url
      }
    ]
  }
'

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

https://www.youtube.com/watch?v=GuoxLggqI_g (TTML naar SRT)

https://www.youtube.com/api/timedtext?caps=asr&hl=nl&expire=1554061864&asr_langs=en%2Cpt%2Cja%2Cnl%2Cko%2Cde%2Cfr%2Cit%2Cru%2Ces&key=yttt1&v=GuoxLggqI_g&sparams=asr_langs%2Ccaps%2Cv%2Cexpire&signature=C31F8CB502DDDD71B899B7E7DBBF686343242D80.DE18CA58A9CDB7BA6342A8E098C3BB98CFF69D14&lang=nl:
----------------------------------------------------------------
<?xml version="1.0" encoding="utf-8" ?><transcript><text start="49.76" dur="4.28">Ik geloof dat ik voor een paar
dagen de stad moet ontvluchten.</text><text start="56.36" dur="1.84">Het heeft niets met
[...]
niets over in de mainstream media?</text><text start="5114.4" dur="3.88">Je vraag is je antwoord!</text><text start="5182.68" dur="1.72">Daar sta ik dan...</text><text start="5184.56" dur="3.2">‚Ä¶net zo slim als toen ik begon.</text></transcript>
----------------------------------------------------------------

$ xidel -s "<TTML-url>" -e '//text[contains(.,"&")][1]'
&#39;s avonds ben ik ook erg
aan mijn bed toe.

$ xidel -s "<TTML-url>" -e '//text[contains(.,"&")][1] ! parse-xml(.)'
's avonds ben ik ook erg
aan mijn bed toe.

$ xidel -s "<TTML-url>" --xquery '
  for $x at $i in //text
  return (
    $i,
    concat(
      format-time(
        $x/@start * duration("PT1S"),
        "[H01]:[m01]:[s01],[f001]"
      ),
      " --> ",
      format-time(
        $x/(@start + @dur) * duration("PT1S"),
        "[H01]:[m01]:[s01],[f001]"
      )
    ),
    parse-xml($x),
    ""
  )
'
1
00:00:49,760 --> 00:00:54,040
Ik geloof dat ik voor een paar
dagen de stad moet ontvluchten.

2
00:00:56,360 --> 00:00:58,200
Het heeft niets met
geld of tijd te maken.

[...]

896
01:26:24,560 --> 01:26:27,760
‚Ä¶net zo slim als toen ik begon.

================================================================================================

[vimeo]

https://vimeo.com/195782736

$ xidel -s "https://vimeo.com/195782736" -e 'json(//script/extract(.,"clip_page_config = (.+);",1)[.])'
{
  "clip": {
    "id": 195782736,
    "title": "Sony Cyber-shot RX100 V sample movie: Daylight handheld / 4k / 24p",
    "description": "<p class=\"first\">Sample movie filmed with a Sony Cyber-shot RX100 V in 4k / 24p using the Standard Creative Style and with Picture Profiles Off. This video is part of my RX100 V review at Camera Labs. You can find my review at:</p>\n<p><a href=\"http://www.cameralabs.com/reviews/Sony_Cyber-shot_RX100_V/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cameralabs.com/reviews/Sony_Cyber-shot_RX100_V/</a></p>\n<p>Feel free to download the original file for evaluation on your own computer, but please don&#039;t upload it to another website without permission from <a href=\"http://www.cameralabs.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cameralabs.com/</a>  Thanks!</p>",
    "uploaded_on": "2016-12-15 07:10:44",
    "uploaded_on_relative": "2 years ago",
    "uploaded_on_full": "Thursday, December 15, 2016 at 7:10 AM EST",
    "is_spatial": false,
    "is_hdr": false,
    "privacy": {
      "is_public": true,
      "type": "anybody",
      "description": "Public"
    },
    "duration": {
      "raw": 19,
      "formatted": "00:19"
    },
    "is_liked": false,
    "is_unavailable": false,
    "likes_url": "/195782736/likes",
    "is_live": false,
    "unlisted_hash": null
  },
  [...]
  "player": {
    "config_url": "https://player.vimeo.com/video/195782736/config?autopause=1&byline=0&collections=1&context=Vimeo%5CController%5CClipController.main&default_to_hd=1&outro=nothing&portrait=0&share=1&title=0&watch_trailer=0&s=367ed06735a602d6e3e5c20f0713f42c4a46ecbf_1564856655",
    "player_url": "player.vimeo.com",
    "dimensions": {
      "height": 540,
      "width": 960
    },
    "poster": {
      "url": "https://i.vimeocdn.com/video/608090569.jpg?mw=2000&mh=1080&q=70"
    }
  },
  [...]
}

$ xidel -s "https://vimeo.com/195782736" -e 'json(//script/extract(.,"clip_page_config = (.+);",1)[.])/player/json(config_url)'
{
  "cdn_url": "https://f.vimeocdn.com",
  "vimeo_api_url": "api.vimeo.com",
  "request": {
    "files": {
      "dash": {
        "separate_av": true,
        "streams": [
          {
            "profile": 119,
            "quality": "1080p",
            "id": 656588355,
            "fps": 23
          },
          [...]
          {
            "profile": 174,
            "quality": "720p",
            "id": 656588395,
            "fps": 23
          }
        ],
        "cdns": {
          "akfire_interconnect_quic": {
            "url": "https://137skyfiregce-vimeo.akamaized.net/exp=1564760602~acl=%2F195782736%2F%2A~hmac=ab204b26e281653916a435156a98ceafe3e40d05b144e42867e57e38fab34177/195782736/sep/video/656588398,656588401,656588395,656588393,656588355,656588334/master.json?base64_init=1",
            "origin": "gcs"
          },
          "fastly_skyfire": {
            "url": "https://skyfire.vimeocdn.com/1564760602-0x27d00b2e48ee30536284cb9f76fd59643e77f5ae/195782736/sep/video/656588398,656588401,656588395,656588393,656588355,656588334/master.json?base64_init=1",
            "origin": "gcs"
          }
        },
        "default_cdn": "fastly_skyfire"
      },
      "hls": {
        "separate_av": false,
        "default_cdn": "fastly_skyfire",
        "cdns": {
          "akfire_interconnect_quic": {
            "url": "https://137skyfiregce-vimeo.akamaized.net/exp=1564760602~acl=%2F195782736%2F%2A~hmac=ab204b26e281653916a435156a98ceafe3e40d05b144e42867e57e38fab34177/195782736/video/656588398,656588401,656588395,656588393,656588355,656588334/master.m3u8",
            "origin": "gcs"
          },
          "fastly_skyfire": {
            "url": "https://skyfire.vimeocdn.com/1564760602-0x27d00b2e48ee30536284cb9f76fd59643e77f5ae/195782736/video/656588398,656588401,656588395,656588393,656588355,656588334/master.m3u8",
            "origin": "gcs"
          }
        }
      },
      "progressive": [
        {
          "profile": 170,
          "width": 2560,
          "mime": "video/mp4",
          "fps": 23,
          "url": "https://gcs-vimeo.akamaized.net/exp=1564760602~acl=%2A%2F656588401.mp4%2A~hmac=1fe49184540fbb4774b99e21a01af79049471011467213644a895d5eb19b293c/vimeo-prod-skyfire-std-us/01/4156/7/195782736/656588401.mp4",
          "cdn": "akamai_interconnect",
          "quality": "1440p",
          "id": 656588401,
          "origin": "gcs",
          "height": 1440
        },
        [...]
        {
          "profile": 165,
          "width": 960,
          "mime": "video/mp4",
          "fps": 23,
          "url": "https://gcs-vimeo.akamaized.net/exp=1564760602~acl=%2A%2F656588334.mp4%2A~hmac=f0e4bf3f128a2bed654e37027b30fb29a0066e36918d49f207f9719f2215174c/vimeo-prod-skyfire-std-us/01/4156/7/195782736/656588334.mp4",
          "cdn": "akamai_interconnect",
          "quality": "540p",
          "id": 656588334,
          "origin": "gcs",
          "height": 540
        }
      ]
    },
    [...]
    }
  },
  [...]
}

$ xidel -s --module=xivid.xq "https://vimeo.com/195782736" -e 'json(//script/extract(.,"clip_page_config = (.+);",1)[.])/{"name":clip/title,"date":replace(clip/uploaded_on,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"duration":clip/duration/raw * duration("PT1S") + time("00:00:00"),"formats":player/json(config_url)//files/(for $x at $i in (progressive)() order by $x/width count $i return $x/{"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat(width,"x",height,"@",fps,"fps"),"url":url},xivid:m3u8-to-json((hls//url)[1]))}'
{
  "name": "Sony Cyber-shot RX100 V sample movie: Daylight handheld / 4k / 24p",
  "date": "15-12-2016",
  "duration": "00:00:19",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360@23fps",
      "url": "https://gcs-vimeo.akamaized.net/exp=1564760854~acl=%2A%2F656588398.mp4%2A~hmac=1caf16b81674ac295cd421a91b8729374b7b9cf283bf15cc15bf8f85763076e1/vimeo-prod-skyfire-std-us/01/4156/7/195782736/656588398.mp4"
    },
    [...]
    {
      "format": "hls-6",
      "container": "m3u8[h264+aac]",
      "resolution": "3840x2160@23.976fps",
      "bitrate": "22273kbps",
      "url": "https://137skyfiregce-vimeo.akamaized.net/exp=1564760854~acl=%2F195782736%2F%2A~hmac=19a32934b6a2f5474b50c73ba1e33ef8d00bede1296e6d4256972bf4af35247b/195782736/video/656588393/playlist.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

--xquery '
  json(
    //script/extract(.,"clip_page_config = (.+);",1)[.]
  )/{
    "name":clip/title,
    "date":replace(
      clip/uploaded_on,
      "(\d+)-(\d+)-(\d+).+",
      "$3-$2-$1"
    ),
    "duration":clip/duration/raw * duration("PT1S") + time("00:00:00"),
    "formats":player/json(config_url)//files/(
      for $x at $i in (progressive)()
      order by $x/width
      count $i
      return
      $x/{
        "format":"pg-"||$i,
        "container":"mp4[h264+aac]",
        "resolution":concat(width,"x",height,"@",fps,"fps"),
        "url":url
      },
      xivid:m3u8-to-json((hls//url)[1])
    )
  }
'

================================================================================================

[nos]

https://nos.nl/video/2263747-dit-is-waarom-het-internet-zich-zo-druk-maakt-over-artikel-13.html

$ xidel -s --module=xivid.xq "https://nos.nl/video/2263747-dit-is-waarom-het-internet-zich-zo-druk-maakt-over-artikel-13.html" -e '{"name":"NOS: "||//h1[ends-with(@class,"__title")],"date":replace(//@datetime,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"formats":xivid:m3u8-to-json(//video//@src)}'
{
  "name": "NOS: Dit is waarom het internet zich zo druk maakt over artikel 13",
  "date": "16-12-2018",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://adaptive-e50c4b.npostreaming.nl/urishieldv2/l27m3bda2873496a69e8005c68a995000000.180e86c3ad607424229d5601884be61e/o/nos/content/video/2018/12/15/230871-d7a0f430ffd58a6afd83c0983ee7a4e1/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.ism/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "402|128kbps",
      "url": "https://adaptive-e50c4b.npostreaming.nl/urishieldv2/l27m3bda2873496a69e8005c68a995000000.180e86c3ad607424229d5601884be61e/o/nos/content/video/2018/12/15/230871-d7a0f430ffd58a6afd83c0983ee7a4e1/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.ism/230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=402000.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "1795|128kbps",
      "url": "https://adaptive-e50c4b.npostreaming.nl/urishieldv2/l27m3bda2873496a69e8005c68a995000000.180e86c3ad607424229d5601884be61e/o/nos/content/video/2018/12/15/230871-d7a0f430ffd58a6afd83c0983ee7a4e1/230871-d7a0f430ffd58a6afd83c0983ee7a4e1.ism/230871-d7a0f430ffd58a6afd83c0983ee7a4e1-audio_eng=128000-video_eng=1795000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://nos.nl/livestream/npo-politiek.html

$ xidel -s --module=xivid.xq "https://nos.nl/livestream/npo-politiek.html" -e '{"name":concat("NOS: ",//h1[ends-with(@class,"__title")],if (//video/@data-type="livestream") then " Livestream" else ()),"date":if (//video/@data-type="livestream") then format-date(current-date(),"[D01]-[M01]-[Y]") else replace(//@datetime,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"formats":xivid:m3u8-to-json(//video/(.//@src,@data-stream))}'
{
  "name": "NOS: NPO Politiek Livestream",
  "date": "17-02-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://smoote2a.omroep.nl/urishieldv2/l2fm5a9ad3376a60dddd005c68afb9000000.3834dd60014701e58b841c9362ed84cc/live/npo/thematv/politiek24/politiek24.isml/politiek24.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "128kbps",
      "url": "https://smoote2a.omroep.nl/urishieldv2/l2fm5a9ad3376a60dddd005c68afb9000000.3834dd60014701e58b841c9362ed84cc/live/npo/thematv/politiek24/politiek24.isml/politiek24-audio_nld=128000.m3u8"
    },
    [...]
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1400|128kbps",
      "url": "https://smoote2a.omroep.nl/urishieldv2/l2fm5a9ad3376a60dddd005c68afb9000000.3834dd60014701e58b841c9362ed84cc/live/npo/thematv/politiek24/politiek24.isml/politiek24-audio_nld=128000-video=1400000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

-e '
  {
    "name":concat(
      "NOS: ",
      //h1[ends-with(@class,"__title")],
      if (//video/@data-type="livestream") then " Livestream" else ()
    ),
    "date":if (//video/@data-type="livestream") then
      format-date(current-date(),"[D01]-[M01]-[Y]")
    else
      replace(//@datetime,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),
    "formats":xivid:m3u8-to-json(//video/(.//@src,@data-stream))
  }
'

================================================================================================

[dumpert]

http://www.dumpert.nl/mediabase/6678198/4301bfad/goud._dafne_schippers_wint_200m_bejing_.html

$ xidel -s -H "Cookie: nsfw=1;cpc=10" "http://www.dumpert.nl/mediabase/6678198/4301bfad/goud._dafne_schippers_wint_200m_bejing_.html" -e 'outer-html(//div[starts-with(@class,"theoplayer-container")])'
<div class="theoplayer-container video-js theoplayer-skin" id="video1" data-files="eyJmbHYiOiJodHRwczpcL1wvbWVkaWEuZHVtcGVydC5ubFwvZmx2XC80MzAxYmZhZF9zY2hpcHBlcnMubXA0Lm1wNC5mbHYiLCJ0YWJsZXQiOiJodHRwczpcL1wvbWVkaWEuZHVtcGVydC5ubFwvdGFibGV0XC80MzAxYmZhZF9zY2hpcHBlcnMubXA0Lm1wNC5tcDQiLCJtb2JpbGUiOiJodHRwczpcL1wvbWVkaWEuZHVtcGVydC5ubFwvbW9iaWxlXC80MzAxYmZhZF9zY2hpcHBlcnMubXA0Lm1wNC5tcDQiLCI3MjBwIjoiaHR0cHM6XC9cL21lZGlhLmR1bXBlcnQubmxcLzcyMHBcLzQzMDFiZmFkX3NjaGlwcGVycy5tcDQubXA0Lm1wNCIsInN0aWxsIjoiaHR0cHM6XC9cL21lZGlhLmR1bXBlcnQubmxcL3N0aWxsc1wvNjY3ODE5OF80MzAxYmZhZC5qcGcifQ=="></div>

$ xidel -s -H "Cookie: nsfw=1;cpc=10" "http://www.dumpert.nl/mediabase/6678198/4301bfad/goud._dafne_schippers_wint_200m_bejing_.html" -e 'json(binary-to-string(base64Binary(//@data-files)))'
{
  "flv": "https://media.dumpert.nl/flv/4301bfad_schippers.mp4.mp4.flv",
  "tablet": "https://media.dumpert.nl/tablet/4301bfad_schippers.mp4.mp4.mp4",
  "mobile": "https://media.dumpert.nl/mobile/4301bfad_schippers.mp4.mp4.mp4",
  "720p": "https://media.dumpert.nl/720p/4301bfad_schippers.mp4.mp4.mp4",
  "still": "https://media.dumpert.nl/stills/6678198_4301bfad.jpg"
}

$ xidel -s --module=xivid.xq -H "Cookie: nsfw=1;cpc=10" "http://www.dumpert.nl/mediabase/6678198/4301bfad/goud._dafne_schippers_wint_200m_bejing_.html" --xquery '{"name":"Dumpert: "||//div[@class="dump-desc"]/normalize-space(h1),"date":xivid:txt-to-date(//p[@class="dump-pub"]),"formats":let $a:=json(binary-to-string(base64Binary(//@data-files))) for $x at $i in ("flv","mobile","tablet","720p") ! $a(.) return {"format":"pg-"||$i,"container":extract($x,".+\.(.+)",1)||"[h264+aac]","url":$x}}'
{
  "name": "Dumpert: GOUD. Dafne Schippers wint 200m Bejing!",
  "date": "28-08-2015",
  "formats": [
    {
      "format": "pg-1",
      "container": "flv[h264+aac]",
      "url": "https://media.dumpert.nl/flv/4301bfad_schippers.mp4.mp4.flv"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "url": "https://media.dumpert.nl/mobile/4301bfad_schippers.mp4.mp4.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "url": "https://media.dumpert.nl/tablet/4301bfad_schippers.mp4.mp4.mp4"
    },
    {
      "format": "pg-4",
      "container": "mp4[h264+aac]",
      "url": "https://media.dumpert.nl/720p/4301bfad_schippers.mp4.mp4.mp4"
    }
  ]
}

https://www.dumpert.nl/embed/6678198/4301bfad/

Gebruik altijd de non-embedded url als bron.

$ xidel -s --module=xivid.xq -H "Cookie: nsfw=1;cpc=10" "https://www.dumpert.nl/embed/6678198/4301bfad/" --xquery '(if (//body[@id="embed"]) then doc(//meta[@property="og:url"]/@content) else .)/{"name":"Dumpert: "||//div[@class="dump-desc"]/normalize-space(h1),"date":xivid:txt-to-date(//p[@class="dump-pub"]),"formats":let $a:=json(binary-to-string(base64Binary(//@data-files))) for $x at $i in ("flv","mobile","tablet","720p") ! $a(.) return {"format":"pg-"||$i,"container":extract($x,".+\.(.+)",1)||"[h264+aac]","url":$x}}'

https://www.dumpert.nl/mediabase/7627779/f41e160c/keiglad_hier_dfjw_mee_met_de_zoutstrooiers.html (embedded youtube video)

$ xidel -s --module=xivid.xq -H "Cookie: nsfw=1;cpc=10" "https://www.dumpert.nl/mediabase/7627779/f41e160c/keiglad_hier_dfjw_mee_met_de_zoutstrooiers.html" --xquery '(if (//body[@id="embed"]) then doc(//meta[@property="og:url"]/@content) else .)/(if (//iframe) then replace(//iframe/@src,".+/(.+)\?.+","https://youtu.be/$1") else {"name":"Dumpert: "||//div[@class="dump-desc"]/normalize-space(h1),"date":xivid:txt-to-date(//p[@class="dump-pub"]),"formats":let $a:=json(binary-to-string(base64Binary(//@data-files))) for $x at $i in ("flv","mobile","tablet","720p") ! $a(.) return {"format":"pg-"||$i,"container":extract($x,".+\.(.+)",1)||"[h264+aac]","url":$x}})'
https://youtu.be/CZ_9DCl6O4M

------------------------------------------------------------------------------------------------

--xquery '
  (
    if (//body[@id="embed"]) then doc(//meta[@property="og:url"]/@content) else .
  )/(
    if (//iframe) then
      replace(//iframe/@src,".+/(.+)\?.+","https://youtu.be/$1")
    else {
      "name":"Dumpert: "||//div[@class="dump-desc"]/normalize-space(h1),
      "date":xivid:txt-to-date(//p[@class="dump-pub"]),
      "formats":let $a:=json(
        binary-to-string(base64Binary(//@data-files))
      )
      for $x at $i in ("flv","mobile","tablet","720p") ! $a(.)
      return {
        "format":"pg-"||$i,
        "container":extract($x,".+\.(.+)",1)||"[h264+aac]",
        "url":$x
      }
    }
  )
'

================================================================================================

[omrop frysl√¢n]

https://www.omropfryslan.nl/live/omrop-fryslan-tv

$ xidel -s "https://www.omropfryslan.nl/live/omrop-fryslan-tv" -e '//meta[@itemprop="embedURL"]/extract(@content,".+(http.+xml)",1)'
https://omropfryslan.bbvms.com/mediaclip/2970835.xml

$ xidel -s --module=xivid.xq "https://www.omropfryslan.nl/live/omrop-fryslan-tv" -e '{"name"://meta[@itemprop="name"]/@content||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(doc(//meta[@itemprop="embedURL"]/extract(@content,".+(http.+xml)",1))//asset/@src)}'
{
  "name": "Omrop Frysl√¢n TV: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "426x240@25fps",
      "bitrate": "528kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/400/prog_index.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "854x480@25fps",
      "bitrate": "1328kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/1200/prog_index.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720@25fps",
      "bitrate": "2128kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/live/omropfryslan/stream04/2000/prog_index.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.omropfryslan.nl/utstjoering/fryslan-hjoed-fan-21-maart-2019-1700

$ xidel -s "https://www.omropfryslan.nl/utstjoering/fryslan-hjoed-fan-21-maart-2019-1700" -e '//meta[@itemprop="embedURL"]/extract(@content,"defaultMediaAssetPath=(.+?)&.+clipXmlUrl=(.+?)&",(1,2))'
https://d3pvma9xb2775h.cloudfront.net
https://omropfryslan.bbvms.com/mediaclip/3277401.xml

$ xidel -s "https://www.omropfryslan.nl/utstjoering/fryslan-hjoed-fan-21-maart-2019-1700" --xquery '{"name":"Omrop Frysl√¢n: "||normalize-space(//h1),"date":replace(//meta[@itemprop="dateModified"]/@content,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"duration":duration("P"||//meta[@itemprop="duration"]/@content) + time("00:00:00"),"formats":(let $a:=//meta[@itemprop="embedURL"]/extract(@content,"defaultMediaAssetPath=(.+?)&amp;.+clipXmlUrl=(.+?)&amp;",(1,2)) for $x at $i in doc($a[2])//asset order by $x/@bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/@width,"x",$x/@height),"bitrate":$x/@bandwidth||"kbps","url":resolve-uri($x/@src,$a[1])})}'
{
  "name": "Omrop Frysl√¢n: Frysl√¢n Hjoed fan 21 maart 2019 17:00",
  "date": "21-03-2019",
  "duration": "00:28:24",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "480x272",
      "bitrate": "525kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/omropfryslan/video/2019/03/21/Asset_iPOD_FRYSLANHJOED_2019-03-21.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "720x400",
      "bitrate": "1126kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/omropfryslan/video/2019/03/21/Asset_SD_FRYSLANHJOED_2019-03-21.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "6142kbps",
      "url": "https://d3pvma9xb2775h.cloudfront.net/omropfryslan/video/2019/03/21/Asset_HD_FRYSLANHJOED_2019-03-21.mp4"
    }
  ]
}

------------------------------------------------------------------------------------------------

E√©n query voor beide videostreams:

$ xidel -s --module=xivid.xq "https://www.omropfryslan.nl/utstjoering/fryslan-hjoed-fan-21-maart-2019-1700" --xquery 'let $a:=//meta[@itemprop="embedURL"]/extract(@content,"defaultMediaAssetPath=(.+?)&amp;.+clipXmlUrl=(.+?)&amp;",(1,2)),$b:=doc($a[2]) return if ($b//@sourcetype="live") then {"name"://meta[@itemprop="name"]/@content||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($b//asset/@src)} else {"name":"Omrop Frysl√¢n: "||normalize-space(//h1),"date":replace(//meta[@itemprop="dateModified"]/@content,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"duration":duration("P"||//meta[@itemprop="duration"]/@content) + time("00:00:00"),"formats":(for $x at $i in $b//asset order by $x/@bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/@width,"x",$x/@height),"bitrate":$x/@bandwidth||"kbps","url":resolve-uri($x/@src,$a[1])})}'

------------------------------------------------------------------------------------------------

--xquery '
  let $a:=//meta[@itemprop="embedURL"]/extract(
        @content,
        "defaultMediaAssetPath=(.+?)&amp;.+clipXmlUrl=(.+?)&amp;",
        (1,2)
      ),
      $b:=doc($a[2])
  return
  if ($b//@sourcetype="live") then {
    "name"://meta[@itemprop="name"]/@content||": Livestream",
    "date":format-date(current-date(),"[D01]-[M01]-[Y]"),
    "formats":xivid:m3u8-to-json($b//asset/@src)
  } else {
    "name":"Omrop Frysl√¢n: "||normalize-space(//h1),
    "date":replace(
      //meta[@itemprop="dateModified"]/@content,
      "(\d+)-(\d+)-(\d+).+",
      "$3-$2-$1"
    ),
    "duration":duration(
      "P"||//meta[@itemprop="duration"]/@content
    ) + time("00:00:00"),
    "formats":(
      for $x at $i in $b//asset
      order by $x/@bandwidth
      count $i
      return {
        "format":"pg-"||$i,
        "container":"mp4[h264+aac]",
        "resolution":concat($x/@width,"x",$x/@height),
        "bitrate":$x/@bandwidth||"kbps",
        "url":resolve-uri($x/@src,$a[1])
      }
    )
  }
'

================================================================================================

[rtv noord, drenthe, oost, omroep gelderland, omroep west, rtv rijnmond, omroep zeeland, omroep brabant en l1]

https://www.rtvnoord.nl/televisie

$ xidel -s "https://www.rtvnoord.nl/televisie" -e '//@data-media-url'
/media/bluebillywigplayeroptions/static/Tv.json

$ xidel -s "https://www.rtvnoord.nl/televisie" -e 'let $a:=json(resolve-uri(//@data-media-url)) return $a/(clipData/(assets)()/src,publicationData/defaultMediaAssetPath)'
/live/rtvnoord/tv/index.m3u8
https://media.rtvnoord.nl

$ xidel -s --module=xivid.xq "https://www.rtvnoord.nl/televisie" -e 'let $a:=json(resolve-uri(//@data-media-url)),$b:=$a/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath) return {"name":$a/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($b)}'
{
  "name": "RTV Noord: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://media.rtvnoord.nl/live/rtvnoord/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "627kbps",
      "url": "https://media.rtvnoord.nl/live/rtvnoord/tv/6a46cbb2-57ee-4192-b55a-de7b4575b19b/index.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "6096kbps",
      "url": "https://media.rtvnoord.nl/live/rtvnoord/tv/3e8fe3c1-0868-49b0-b2f3-7dd6eb30651f/index.m3u8"
    }
  ]
}

https://www.rtvdrenthe.nl/tv

$ xidel -s --module=xivid.xq "https://www.rtvdrenthe.nl/tv" -e '[...]'
{
  "name": "RTV Drenthe: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://cdn.rtvdrenthe.nl/live/rtvdrenthe/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360@25fps",
      "bitrate": "1192kbps",
      "url": "https://cdn.rtvdrenthe.nl/live/rtvdrenthe/tv/360p/prog_index.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080@25fps",
      "bitrate": "5192kbps",
      "url": "https://cdn.rtvdrenthe.nl/live/rtvdrenthe/tv/1080p/prog_index.m3u8"
    }
  ]
}

https://www.rtvoost.nl/tv

$ xidel -s "https://www.rtvoost.nl/tv" -e 'let $a:=json(resolve-uri(//@data-media-url)) return $a/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath)'
https://streams.rtvoost.nl/video/tv/hls.m3u8

$ xidel -s --module=xivid.xq "https://www.rtvoost.nl/tv" -e 'let $a:=json(resolve-uri(//@data-media-url)) return {"name":$a/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath))}'
{
  "name": "RTV Oost: Livestream",
  "date": "14-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://mediacdn.rtvoost.nl/live/rtvoost/tv-oost/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "416x234",
      "bitrate": "613kbps",
      "url": "https://mediacdn.rtvoost.nl/live/rtvoost/tv-oost/e8a15a5f-a530-432e-a025-6dffc1426309/index.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1589kbps",
      "url": "https://mediacdn.rtvoost.nl/live/rtvoost/tv-oost/bc0f880f-dbe0-4de2-825d-ec01d960f7fc/index.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2566kbps",
      "url": "https://mediacdn.rtvoost.nl/live/rtvoost/tv-oost/46ce631a-6155-4fcc-ac24-2b2e252f4f94/index.m3u8"
    }
  ]
}

https://www.omroepgelderland.nl/tvx # Via Google gevonden. Kopje "Live TV" verwijst vreemd genoeg https://www.omroepgelderland.nl/tv.

$ xidel -s --module=xivid.xq "https://www.omroepgelderland.nl/tvx" -e '[...]'
{
  "name": "Omroep Gelderland: Livestream",
  "date": "28-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/304370bd56340c8246aab2abb5868726/sz/omroepgelderland/wowza4/live/livetv/playlist.m3u8?token=nw0E8DqmVNvMagzw-3fIQg&time=1556673255"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2633kbps",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/304370bd56340c8246aab2abb5868726/sz/omroepgelderland/wowza4/live/livetv/chunklist.m3u8"
    }
  ]
}

https://www.omroepwest.nl/tv

$ xidel -s "https://www.omroepwest.nl/tv" -e '//@data-media-url'
//omroepwest.bbvms.com/p/regiogrid/c/2054317.js

$ xidel -s "https://www.omroepwest.nl/tv" -e 'let $a:=//@data-media-url,$b:=json(if (ends-with($a,"json")) then resolve-uri($a) else extract(unparsed-text($a),"var opts = (.+);",1)) return $b/clipData/(assets)()'
{
  "mediatype": "MP4_MAIN",
  "id": "1347006347173657",
  "status": "active",
  "src": "//d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/playlist.m3u8",
  "length": "",
  "exactlength": "",
  "width": "671",
  "height": "377",
  "bandwidth": "800"
}
{
  "mediatype": "MP4_IPOD",
  "id": "1347007455980753",
  "status": "active",
  "src": "//d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_mobile/playlist.m3u8",
  "length": "",
  "exactlength": "",
  "width": "480",
  "height": "270",
  "bandwidth": "400"
}

$ xidel -s "https://www.omroepwest.nl/tv" -e 'let $a:=//@data-media-url,$b:=json(if (ends-with($a,"json")) then resolve-uri($a) else extract(unparsed-text($a),"var opts = (.+);",1)) return $b/(protocol,clipData/(assets)(1)/src)'
https://
//d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/playlist.m3u8

$ xidel -s "https://www.omroepwest.nl/tv" -e 'let $a:=x:request({"url"://@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return $a/clipData/(assets)(1)/(if (starts-with(src,"//")) then $a/protocol||substring-after(src,"//") else resolve-uri(src,$a/publicationData/defaultMediaAssetPath))'
https://d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/playlist.m3u8

$ xidel -s --module=xivid.xq "https://www.omroepwest.nl/tv" -e 'let $a:=x:request({"url"://@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":$a/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/clipData/(assets)(1)/(if (starts-with(src,"//")) then $a/protocol||substring-after(src,"//") else resolve-uri(src,$a/publicationData/defaultMediaAssetPath)))}'
{
  "name": "Omroep West: Livestream",
  "date": "22-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/playlist.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "712x400",
      "bitrate": "571kbps",
      "url": "https://d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/chunklist_b531072.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "712x400",
      "bitrate": "1451kbps",
      "url": "https://d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/chunklist_b1331072.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "4227kbps",
      "url": "https://d2dslh4sd7yvc1.cloudfront.net/live/omroepwest/ngrp:tv-feed_all/chunklist_b4227072.m3u8"
    }
  ]
}

https://www.rijnmond.nl/tv

$ xidel -s --module=xivid.xq "https://www.rijnmond.nl/tv" -e '[...]'
{
  "name": "RTV Rijnmond: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d3r4bk4fg0k2xi.cloudfront.net/rijnmondTv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "142kbps",
      "url": "https://d3r4bk4fg0k2xi.cloudfront.net/rijnmondTv/1563277487-au-index.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3817kbps",
      "url": "https://d3r4bk4fg0k2xi.cloudfront.net/rijnmondTv/1563277487-faster-1920-1080-3500000-index.m3u8"
    }
  ]
}

https://www.omroepzeeland.nl/livetv

$ xidel -s "https://www.omroepzeeland.nl/livetv" -e 'outer-html(//iframe)'
<iframe src="https://omroepzeeland.bbvms.com/p/regiogridautoplay/l/1491828714434033.html" style="width:100%;" frameborder="0" allowfullscreen="true"></iframe>

$ xidel -s "https://www.omroepzeeland.nl/livetv" -f '//iframe/@src' -e '//@src'
/p/regiogridautoplay/l/1491828714434033.js?dummy=

$ xidel -s --module=xivid.xq "https://www.omroepzeeland.nl/livetv" -e 'let $a:=x:request({"url":(//@data-media-url,resolve-uri(doc(//iframe/@src)//@src))})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":$a/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/clipData/(assets)(1)/(if (starts-with(src,"//")) then $a/protocol||substring-after(src,"//") else resolve-uri(src,$a/publicationData/defaultMediaAssetPath)))}'
{
  "name": "Omroep Zeeland: Livestream",
  "date": "04-05-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d3isaxd2t6q8zm.cloudfront.net/live/omroepzeeland/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "142kbps",
      "url": "https://d3isaxd2t6q8zm.cloudfront.net/live/omroepzeeland/tv/1550416322-au-index.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "5917kbps",
      "url": "https://d3isaxd2t6q8zm.cloudfront.net/live/omroepzeeland/tv/1550416322-fast-1920-1080-5500000-index.m3u8"
    }
  ]
}

https://www.omroepbrabant.nl/tv

$ xidel -s --module=xivid.xq "https://www.omroepbrabant.nl/tv" -e '[...]'
{
  "name": "Omroep Brabant: Livestream",
  "date": "05-05-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d3slqp9xhts6qb.cloudfront.net/live/omroepbrabant/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "142kbps",
      "url": "https://d3slqp9xhts6qb.cloudfront.net/live/omroepbrabant/tv/1556267641-au-index.m3u8"
    },
    [...]
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3030kbps",
      "url": "https://d3slqp9xhts6qb.cloudfront.net/live/omroepbrabant/tv/1556267641-fast-1920-1080-2750000-index.m3u8"
    }
  ]
}

https://l1.nl/live-l1-tv

$ xidel -s "https://l1.nl/live-l1-tv" -e '//div[@class="bbwLive-player"]//@src'
//l1.bbvms.com/p/video_autoplay/c/3247576.js

$ xidel -s --module=xivid.xq "https://l1.nl/live-l1-tv" -e 'let $a:=x:request({"url":(//@data-media-url,//div[@class="bbwLive-player"]//@src,resolve-uri(doc(//iframe/@src)//@src))})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":$a/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/clipData/(assets)(1)/(if (starts-with(src,"//")) then $a/protocol||substring-after(src,"//") else resolve-uri(src,$a/publicationData/defaultMediaAssetPath)))}'
{
  "name": "L1: Livestream",
  "date": "05-05-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d34pj260kw1xmk.cloudfront.net/live/l1/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "142kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/live/l1/tv/1553845279-au-index.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1192kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/live/l1/tv/1553845279-fast-640-360-1000000-index.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "3817kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/live/l1/tv/1553845279-fast-1280-720-3500000-index.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.rtvnoord.nl/tv/programma/10010/Noord-Vandaag/aflevering/22811

$ xidel -s "https://www.rtvnoord.nl/tv/programma/10010/Noord-Vandaag/aflevering/22811" -e 'let $a:=x:request({"url"://@data-media-url})/json return {"name":concat($a/publicationData/label,": ",//div[@class="media-details"]/h3),"date":format-date(dateTime($a/clipData/publisheddate),"[D01]-[M01]-[Y]"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$a/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath)}]}'
{
  "name": "RTV Noord: Noord Vandaag",
  "date": "29-03-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://media.rtvnoord.nl/video/2019/190329/190329_NVREC_XHQ.mp4"
    }
  ]
}

https://www.rtvdrenthe.nl/tv/programma/10/Drenthe-Nu/aflevering/42540

$ xidel -s "https://www.rtvdrenthe.nl/tv/programma/10/Drenthe-Nu/aflevering/42540" -e '[...]'
{
  "name": "RTV Drenthe: Drenthe Nu",
  "date": "31-03-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://av.rtvdrenthe.nl/media/drnl20190331-hhuitz.mp4"
    }
  ]
}

https://www.rtvdrenthe.nl/nieuws/145732/Ondernemen-in-Drenthe-Duurzaam-handwerken-bij-Wol-zo-eerlijk

$ xidel -s "https://www.rtvdrenthe.nl/nieuws/145732/Ondernemen-in-Drenthe-Duurzaam-handwerken-bij-Wol-zo-eerlijk" -e 'outer-html(//div[@class="video-title"])'
<div class="video-title">
                                Eerlijke wol uit Vries
                        </div>

$ xidel -s "https://www.rtvdrenthe.nl/nieuws/145732/Ondernemen-in-Drenthe-Duurzaam-handwerken-bij-Wol-zo-eerlijk" -e 'let $a:=x:request({"url"://@data-media-url})/json return {"name":concat($a/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,//div[@class="video-title"]))),"date":format-date(dateTime($a/clipData/publisheddate),"[D01]-[M01]-[Y]"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$a/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath)}]}'
{
  "name": "RTV Drenthe: Eerlijke wol uit Vries",
  "date": "31-03-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://av.rtvdrenthe.nl/media/nws20190331-ondernemen_in_drenthe_website_0002.mp4"
    }
  ]
}

https://www.rtvoost.nl/tv/programma/63/Overijssel-Vandaag/aflevering/503428

$ xidel -s "https://www.rtvoost.nl/tv/programma/63/Overijssel-Vandaag/aflevering/503428" -e '[...]'
{
  "name": "RTV Oost: Overijssel Vandaag",
  "date": "13-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://tvarchief.rtvoost.nl/hi/503428.mp4"
    }
  ]
}

https://www.omroepgelderland.nl/tv/programma/232488309/GLD-Nieuws/aflevering/39012

$ xidel -s "https://www.omroepgelderland.nl/tv/programma/232488309/GLD-Nieuws/aflevering/39012" -e '[...]'
{
  "name": "Omroep Gelderland: GLD Nieuws",
  "date": "28-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://d2od87akyl46nm.cloudfront.net/epg/prod/media/videos/JkevaDM7lXm.mp4"
    }
  ]
}

https://www.omroepgelderland.nl/nieuws/2407417/UPDATE-Dramatisch-einde-Koningsdagfeest-Doetinchem-auto-schept-feestvierders

$ xidel -s "https://www.omroepgelderland.nl/nieuws/2407417/UPDATE-Dramatisch-einde-Koningsdagfeest-Doetinchem-auto-schept-feestvierders" -e '//div[starts-with(@class,"inlinemedia")]/@data-accept'
<iframe src="/media/player/30018" style="width:100%;" frameborder="0" allowfullscreen="true"></iframe>

$ xidel -s "https://www.omroepgelderland.nl/nieuws/2407417/UPDATE-Dramatisch-einde-Koningsdagfeest-Doetinchem-auto-schept-feestvierders" -f 'parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src' -e 'outer-html(//div[@class="video-title"])'
<div class="video-title">
                                Feestvierders geschept Doetinchem
                        </div>

$ xidel -s "https://www.omroepgelderland.nl/nieuws/2407417/UPDATE-Dramatisch-einde-Koningsdagfeest-Doetinchem-auto-schept-feestvierders" -e 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":(.,$a)//@data-media-url})/json return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"]))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$b/resolve-uri(clipData/(assets)()/src,publicationData/defaultMediaAssetPath)}]}'
{
  "name": "Omroep Gelderland: Feestvierders geschept Doetinchem",
  "date": "28-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://d2od87akyl46nm.cloudfront.net/items/video/2019/04/Feestgangers_geschept_WEB.mp4"
    }
  ]
}

https://www.omroepwest.nl/tv/programma/170000115/TV-West-Nieuws/aflevering/170285899

$ xidel -s "https://www.omroepwest.nl/tv/programma/170000115/TV-West-Nieuws/aflevering/170285899" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":(.,$a)//@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"]))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/(assets)(1)/length * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/publicationData/defaultMediaAssetPath)}]}'
{
  "name": "Omroep West: TV West Nieuws",
  "date": "19-04-2019",
  "duration": "00:16:55",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "512x288",
      "bitrate": "300kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/19/170285899_300.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1000kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/19/170285899_1000.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2000kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/19/170285899_2000.mp4"
    }
  ]
}

https://www.omroepwest.nl/nieuws/3825225/Files-naar-Keukenhof-Het-is-het-allemaal-waard

$ xidel -s "https://www.omroepwest.nl/nieuws/3825225/Files-naar-Keukenhof-Het-is-het-allemaal-waard" --xquery '[...]'
{
  "name": "Omroep West: Keukenhof: 'Kies een andere dag voor een bezoek aan het park'",
  "date": "21-04-2019",
  "duration": "00:01:44",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "512x288",
      "bitrate": "300kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/21/3825182_300.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1024x576",
      "bitrate": "1000kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/21/3825182_1000.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2000kbps",
      "url": "https://d3r6frfb0ko02q.cloudfront.net/video/2019/04/21/3825182_2000.mp4"
    }
  ]
}

https://www.rijnmond.nl/tv/programma/27/Rijnmond-Nieuws/aflevering/16972

$ xidel -s "https://www.rijnmond.nl/tv/programma/27/Rijnmond-Nieuws/aflevering/16972" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":(.,$a)//@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"]))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/(assets)(1)/length * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//"))}]}'
{
  "name": "RTV Rijnmond: Rijnmond Nieuws",
  "date": "26-04-2019",
  "duration": "00:13:52",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "600kbps",
      "url": "https://dcur8bjarl5c2.cloudfront.net/2019/video/nwsvr260419_vlq.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3603kbps",
      "url": "https://dcur8bjarl5c2.cloudfront.net/rijnmond/media/2019/04/26/3300832.mp4"
    }
  ]
}

https://www.rijnmond.nl/nieuws/181081/Koningsdag-in-Maassluis-hoofd-schouder-knie-en-teen-als-opwarmer-van-de-aubade

$ xidel -s "https://www.rijnmond.nl/nieuws/181081/Koningsdag-in-Maassluis-hoofd-schouder-knie-en-teen-als-opwarmer-van-de-aubade" --xquery '[...]'
{
  "name": "RTV Rijnmond: Koningsdag in Maassluis: tompoezen, de aubade en de vrijmarkt",
  "date": "27-04-2019",
  "duration": "00:03:25",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "600kbps",
      "url": "https://dcur8bjarl5c2.cloudfront.net/2019/video/nmaassluis28_04_19_T_AA3E6C56FE0CFFA6C12583E90031D6DB_vlq.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3607kbps",
      "url": "https://dcur8bjarl5c2.cloudfront.net/upload/rijnmond/nmaassluis28_04_19_T_AA3E6C56FE0CFFA6C12583E90031D6DB.mp4"
    }
  ]
}

https://www.omroepzeeland.nl/tv/programma/370059803/Zeeland-Nu/aflevering/370182368

$ xidel -s "https://www.omroepzeeland.nl/tv/programma/370059803/Zeeland-Nu/aflevering/370182368" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":(.,$a)//@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"]))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/((assets)(1)/length,length)[.] * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//"))}]}'
{
  "name": "Omroep Zeeland: Zeeland Nu",
  "date": "02-05-2019",
  "duration": "00:13:35",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "480x272",
      "bitrate": "400kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_iPOD_370182368-Zeeland-Nu-02-05-2019-ZNB190502CT.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "720x400",
      "bitrate": "1000kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_SD_370182368-Zeeland-Nu-02-05-2019-ZNB190502CT.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2000kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_HD_370182368-Zeeland-Nu-02-05-2019-ZNB190502CT.mp4"
    }
  ]
}

https://www.omroepzeeland.nl/nieuws/112666/Ellende-met-buxusrupsen-Traantjes-drogen-en-opnieuw-beginnen

$ xidel -s "https://www.omroepzeeland.nl/nieuws/112666/Ellende-met-buxusrupsen-Traantjes-drogen-en-opnieuw-beginnen" --xquery '[...]'
{
  "name": "Omroep Zeeland: De buxusrups is weer terug",
  "date": "02-05-2019",
  "duration": "00:00:29",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "480x272",
      "bitrate": "400kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_iPOD_Buxusrups-ZNO190502HO.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "720x400",
      "bitrate": "1000kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_SD_Buxusrups-ZNO190502HO.mp4"
    },
    {
      "format": "pg-3",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2000kbps",
      "url": "https://d2axgm87evfsmi.cloudfront.net/omroepzeeland/media/2019/05/02/Asset_HD_Buxusrups-ZNO190502HO.mp4"
    }
  ]
}

https://www.omroepbrabant.nl/tv/programma/252/Brabant-Nieuws/aflevering/2932581

$ xidel -s "https://www.omroepbrabant.nl/tv/programma/252/Brabant-Nieuws/aflevering/2932581" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":(.,$a)//@data-media-url})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"]))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/((assets)(1)/length,length)[.][1] * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//"))}]}'
{
  "name": "Omroep Brabant: Brabant Nieuws",
  "date": "04-05-2019",
  "duration": "00:09:55",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "512x288",
      "bitrate": "500kbps",
      "url": "https://d1ctz4dshc0ubt.cloudfront.net/omroepbrabant/2019/video/2932581_ulq.mp4"
    },
    [...]
    {
      "format": "pg-6",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3500kbps",
      "url": "https://d1ctz4dshc0ubt.cloudfront.net/omroepbrabant/2019/video/2932581_ehq.mp4"
    }
  ]
}

https://www.omroepbrabant.nl/nieuws/2992614/Wat-zeggen-peilingen-echt-over-de-kansen-van-Duncan-Laurence-op-het-Eurovisie-Songfestival-VIDEO

$ xidel -s "https://www.omroepbrabant.nl/nieuws/2992614/Wat-zeggen-peilingen-echt-over-de-kansen-van-Duncan-Laurence-op-het-Eurovisie-Songfestival-VIDEO" --xquery '[...]'
{
  "name": "Omroep Brabant: Zo belangrijk zijn de peilingen van het Songfestival voor Duncan Laurence.",
  "date": "03-05-2019",
  "duration": "00:04:03",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "512x288",
      "bitrate": "500kbps",
      "url": "https://d1ctz4dshc0ubt.cloudfront.net/omroepbrabant/2019/video/2992318_ulq.mp4"
    },
    [...]
    {
      "format": "pg-6",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3500kbps",
      "url": "https://d1ctz4dshc0ubt.cloudfront.net/omroepbrabant/2019/video/2992318_ehq.mp4"
    }
  ]
}

https://l1.nl/l1mburg-centraal-4-mei-2019-149530

$ xidel -s "https://l1.nl/l1mburg-centraal-4-mei-2019-149530" -e 'outer-html(//div[@class="bbw bbwVideo"])'
<div class="bbw bbwVideo" data-id="3305749" data-playout="video" style="background-image:url('/img-cache/remote/bbw/3305749-1557041501.49e9508d.jpg');"> <div class="bbwVideo__inner icon-pointer-right"></div> </div>

$ xidel -s "https://l1.nl/l1mburg-centraal-4-mei-2019-149530" -e 'concat("https://l1.bbvms.com/p/video/c/",//div[@class="bbw bbwVideo"]/@data-id,".json")'
https://l1.bbvms.com/p/video/c/3305749.json

$ xidel -s "https://l1.nl/l1mburg-centraal-4-mei-2019-149530" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":((.,$a)//@data-media-url,//div[@class="bbw bbwVideo"]/concat("https://l1.bbvms.com/p/video/c/",@data-id,".json"))})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))) return {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"],replace(//div[@class="overlay"]/h1,"(.+) -.+","$1")))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/((assets)(1)/length,length)[.][1] * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//"))}]}'
{
  "name": "L1: L1mburg Centraal",
  "date": "05-05-2019",
  "duration": "00:24:18",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1000kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/video/20190504-192817-360p.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "3500kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/video/20190504-192817-720p.mp4"
    }
  ]
}

https://l1.nl/de-l1mbo-top-100-tip-van-rian-149539

$ xidel -s "https://l1.nl/de-l1mbo-top-100-tip-van-rian-149539/" --xquery '[...]'
{
  "name": "L1: De L1mbo Top 100 stemtip van Rian",
  "date": "05-05-2019",
  "duration": "00:00:32",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1000kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/video/20190505-115121-360p.mp4"
    },
    {
      "format": "pg-2",
      "container": "mp4[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "3500kbps",
      "url": "https://d34pj260kw1xmk.cloudfront.net/video/20190505-115121-720p.mp4"
    }
  ]
}

------------------------------------------------------------------------------------------------

E√©n query voor beide videostreams:

$ xidel -s --module=xivid.xq "https://l1.nl/de-l1mbo-top-100-tip-van-rian-149539" --xquery 'let $a:=doc(parse-html(//div[starts-with(@class,"inlinemedia")]/@data-accept)//@src),$b:=x:request({"url":((.,$a)//@data-media-url,//div[@class="bbwLive-player"]//@src,resolve-uri(doc(//iframe/@src)//@src),//div[@class="bbw bbwVideo"]/concat("https://l1.bbvms.com/p/video/c/",@data-id,".json"))})/(.[json]/json,.[doc]/json(extract(raw,"var opts = (.+);",1))),$c:=$b/clipData/(assets)(1)[ends-with(src,"m3u8")]/(if (starts-with(src,"//")) then $b/protocol||substring-after(src,"//") else resolve-uri(src,$b/publicationData/defaultMediaAssetPath)) return if ($c) then {"name":$b/publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($c)} else {"name":concat($b/publicationData/label,": ",normalize-space((//div[@class="media-details"]/h3,(.,$a)//div[@class="video-title"],replace(//div[@class="overlay"]/h1,"(.+) -.+","$1")))),"date":format-date(dateTime($b/clipData/publisheddate),"[D01]-[M01]-[Y]"),"duration":$b/clipData/((assets)(1)/length,length)[.][1] * duration("PT1S") + time("00:00:00"),"formats":[for $x at $i in $b/clipData/(assets)() order by $x/bandwidth count $i return {"format":"pg-"||$i,"container":"mp4[h264+aac]","resolution":concat($x/width,"x",$x/height),"bitrate":$x/bandwidth||"kbps","url":resolve-uri($x/src,$b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//"))}]}'

------------------------------------------------------------------------------------------------

--xquery '
  let $a:=doc(
        parse-html(
          //div[starts-with(@class,"inlinemedia")]/@data-accept
        )//@src
      ),
      $b:=x:request({
        "url":(
          (.,$a)//@data-media-url,
          //div[@class="bbwLive-player"]//@src,
          resolve-uri(doc(//iframe/@src)//@src),
          //div[@class="bbw bbwVideo"]/concat(
            "https://l1.bbvms.com/p/video/c/",
            @data-id,
            ".json"
          )
        )
      })/(
        .[json]/json,
        .[doc]/json(
          extract(raw,"var opts = (.+);",1)
        )
      ),
      $c:=$b/clipData/(assets)(1)[ends-with(src,"m3u8")]/(
        if (starts-with(src,"//")) then
          $b/protocol||substring-after(src,"//")
        else
          resolve-uri(src,$b/publicationData/defaultMediaAssetPath)
      )
  return
  if ($c) then {
    "name":$b/publicationData/label||": Livestream",
    "date":format-date(current-date(),"[D01]-[M01]-[Y]"),
    "formats":xivid:m3u8-to-json($c)
  } else {
    "name":concat(
      $b/publicationData/label,
      ": ",
      normalize-space(
        (
          //div[@class="media-details"]/h3,
          (.,$a)//div[@class="video-title"],
          replace(//div[@class="overlay"]/h1,"(.+) -.+","$1")
        )
      )
    ),
    "date":format-date(
      dateTime($b/clipData/publisheddate),
      "[D01]-[M01]-[Y]"
    ),
    "duration":$b/clipData/(
      (assets)(1)/length,
      length
    )[.][1] * duration("PT1S") + time("00:00:00"),
    "formats":[
      for $x at $i in $b/clipData/(assets)()
      order by $x/bandwidth
      count $i
      return {
        "format":"pg-"||$i,
        "container":"mp4[h264+aac]",
        "resolution":concat($x/width,"x",$x/height),
        "bitrate":$x/bandwidth||"kbps",
        "url":resolve-uri(
          $x/src,
          $b/protocol||substring-after($b/publicationData/defaultMediaAssetPath,"//")
        )
      }
    ]
  }
'

================================================================================================

[nh nieuws, at5]

https://www.nhnieuws.nl/tv

$ xidel -s --module=xivid.xq "https://www.nhnieuws.nl/tv" -e '{"name":"NH Nieuws: Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(json(//script/extract(.,"INIT_DATA__ = (.+)",1)[.])/videoStream)}'
{
  "name": "NH Nieuws: Livestream",
  "date": "06-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://ngx.cr2.streamzilla.xlcdn.com/session/fbbbade6227f9c819319e5f479bc7d71/sz/nhnieuws/wowza4/live/live.smil/playlist.m3u8?token=-ldEgDxG4CToIPkgGvWrMQ&time=1554595001"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "640x360",
      "bitrate": "1153kbps",
      "url": "https://ngx.cr2.streamzilla.xlcdn.com/session/fbbbade6227f9c819319e5f479bc7d71/sz/nhnieuws/wowza4/live/live.smil/chunklist_b1048576.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720",
      "bitrate": "2307kbps",
      "url": "https://ngx.cr2.streamzilla.xlcdn.com/session/fbbbade6227f9c819319e5f479bc7d71/sz/nhnieuws/wowza4/live/live.smil/chunklist_b2097152.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3487kbps",
      "url": "https://ngx.cr2.streamzilla.xlcdn.com/session/fbbbade6227f9c819319e5f479bc7d71/sz/nhnieuws/wowza4/live/live.smil/chunklist_b3170304.m3u8"
    }
  ]
}

https://www.at5.nl/tv

$ xidel -s --module=xivid.xq "https://www.at5.nl/tv" -e '{"name":substring-after(//title,"- ")||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(json(//script/extract(.,"INIT_DATA__ = (.+)",1)[.])/videoStream)}'
{
  "name": "AT5: Livestream",
  "date": "28-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/da0bb837c8a60cd2a854e5100324cc68/sz/atvijf/wowza4/live/live.smil/playlist.m3u8?token=UAx9rGaNEH2WCUT-Zc01Kw&time=1556494972"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "640x512",
      "bitrate": "1153kbps",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/da0bb837c8a60cd2a854e5100324cc68/sz/atvijf/wowza4/live/live.smil/chunklist_b1048576.m3u8"
    },
    {
      "format": "hls-2",
      "container": "m3u8[h264+aac]",
      "resolution": "768x608",
      "bitrate": "2307kbps",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/da0bb837c8a60cd2a854e5100324cc68/sz/atvijf/wowza4/live/live.smil/chunklist_b2097152.m3u8"
    },
    {
      "format": "hls-3",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1536",
      "bitrate": "3460kbps",
      "url": "https://ngx.cr6.streamzilla.xlcdn.com/session/da0bb837c8a60cd2a854e5100324cc68/sz/atvijf/wowza4/live/live.smil/chunklist_b3145728.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.nhnieuws.nl/nieuws/243542/koeien-aan-de-wandel-in-kortenhoef-touw-is-losgegaan-dan-gaan-ze-op-avontuur

$ xidel -s --module=xivid.xq "https://www.nhnieuws.nl/nieuws/243542/koeien-aan-de-wandel-in-kortenhoef-touw-is-losgegaan-dan-gaan-ze-op-avontuur" -e 'json(//script/extract(.,"INITIAL_PROPS__ = (.+)",1)[.])/{"name":(.//media)(1)/concat(source,": ",title),"date":format-date(.//updated * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json((.//media)()/videoUrl)}'
{
  "name": "NH Nieuws: Koeien aan de wandel in Kortenhoef",
  "date": "06-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://wos.cr1.streamzilla.xlcdn.com/session/0ccdf5595c46e2be29f3f00ad1856208/vod/_definst_/sz/nhnieuws/2019/04/06/5ca8b8ac665d65ca8b8ac66611.smil/playlist.m3u8?token=MY5sgN56qVH3sjrKyrx6GQ&time=1554596909"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "568x320",
      "bitrate": "649kbps",
      "url": "https://wos.cr1.streamzilla.xlcdn.com/session/0ccdf5595c46e2be29f3f00ad1856208/vod/_definst_/sz/nhnieuws/2019/04/06/5ca8b8ac665d65ca8b8ac66611.smil/chunklist_b589824.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "5907kbps",
      "url": "https://wos.cr1.streamzilla.xlcdn.com/session/0ccdf5595c46e2be29f3f00ad1856208/vod/_definst_/sz/nhnieuws/2019/04/06/5ca8b8ac665d65ca8b8ac66611.smil/chunklist_b5369856.m3u8"
    }
  ]
}

https://www.at5.nl/artikelen/e27519/zaterdag-27-april

$ xidel -s --module=xivid.xq "https://www.at5.nl/artikelen/e27519/zaterdag-27-april" -e 'json(//script/extract(.,"INITIAL_PROPS__ = (.+)",1)[.])/pageData/{"name":if ((media)(1)/title) then (media)(1)/concat(source,": ",title) else concat((media)(1)/source,": ",title),"date":format-date(updated * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json((media)()/videoUrl)}'
{
  "name": "AT5: Zaterdag 27 april",   # Niet ideaal, geen "Nieuws" in de 'title'. AT5 hun schuld. Hoort gewoon in de 'title'.
  "date": "27-04-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://wos.cr2.streamzilla.xlcdn.com/session/db4039541a7405529ebb15a26faea396/vod/_definst_/sz/atvijf/2019/04/27/5cc477789eb145cc477789eb50.smil/playlist.m3u8?token=CBzIq2r8A8Vo00YTx9C4Ow&time=1556496434"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "568x320",
      "bitrate": "649kbps",
      "url": "https://wos.cr2.streamzilla.xlcdn.com/session/db4039541a7405529ebb15a26faea396/vod/_definst_/sz/atvijf/2019/04/27/5cc477789eb145cc477789eb50.smil/chunklist_b589824.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "5923kbps",
      "url": "https://wos.cr2.streamzilla.xlcdn.com/session/db4039541a7405529ebb15a26faea396/vod/_definst_/sz/atvijf/2019/04/27/5cc477789eb145cc477789eb50.smil/chunklist_b5384192.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

E√©n query voor beide videostreams:

$ xidel -s --module=xivid.xq "https://www.at5.nl/artikelen/e27519/zaterdag-27-april" -e 'let $a:=json(//script/extract(.,"INITIAL_PROPS__ = (.+)",1)[.])/pageData return {"name":if ($a) then if ($a/(media)(1)/title) then $a/(media)(1)/concat(source,": ",title) else concat($a/(media)(1)/source,": ",$a/title) else substring-after(//title,"- ")||": Livestream","date":if ($a) then format-date($a/updated * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),"[D01]-[M01]-[Y]") else format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(if ($a) then $a/(media)()/videoUrl else json(//script/extract(.,"INIT_DATA__ = (.+)",1)[.])/videoStream)}'

------------------------------------------------------------------------------------------------

-e '
  let $a:=json(
    //script/extract(.,"INITIAL_PROPS__ = (.+)",1)[.]
  )/pageData
  return {
    "name":if ($a) then
      if ($a/(media)(1)/title) then
        $a/(media)(1)/concat(source,": ",title)
      else
        concat($a/(media)(1)/source,": ",$a/title)
    else
      substring-after(//title,"- ")||": Livestream",
    "date":if ($a) then
      format-date(
        $a/updated * duration("PT1S") + (time("00:00:00") - time("00:00:00'$(date +%:z)'")) + date("1970-01-01"),
        "[D01]-[M01]-[Y]"
      )
    else
      format-date(current-date(),"[D01]-[M01]-[Y]"),
    "formats":xivid:m3u8-to-json(
      if ($a) then
        $a/(media)()/videoUrl
      else
        json(
          //script/extract(.,"INIT_DATA__ = (.+)",1)[.]
        )/videoStream
    )
  }
'

================================================================================================

[omroep flevoland]

https://www.omroepflevoland.nl/

$ xidel -s --module=xivid.xq "https://www.omroepflevoland.nl/" -e '{"name":"Omroep Flevoland: Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(//div[ends-with(@class,"videoplayer")]/@data-file)}'
{
  "name": "Omroep Flevoland: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d5ms27yy6exnf.cloudfront.net/live/omroepflevoland/tv/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[h264+aac]",
      "resolution": "480x270@25fps",
      "bitrate": "528kbps",
      "url": "https://d5ms27yy6exnf.cloudfront.net/live/omroepflevoland/tv/400/prog_index.m3u8"
    },
    [...]
    {
      "format": "hls-4",
      "container": "m3u8[h264+aac]",
      "resolution": "1280x720@25fps",
      "bitrate": "2128kbps",
      "url": "https://d5ms27yy6exnf.cloudfront.net/live/omroepflevoland/tv/2000/prog_index.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.omroepflevoland.nl/gemist/video/dit-is-flevoland-5cb0a4aa9c08a

$ xidel -s "https://www.omroepflevoland.nl/gemist/video/dit-is-flevoland-5cb0a4aa9c08a" -e 'outer-html(//h2)'
<h2>

            Dit is Flevoland
        </h2>

$ xidel -s "https://www.omroepflevoland.nl/gemist/video/dit-is-flevoland-5cb0a4aa9c08a" -e 'outer-html(//span[starts-with(@class,"t--red")])'
<span class="t--red t--strong t--capitalize d--inl-block">
        Vr 12-04-2019
    </span>

$ xidel -s "https://www.omroepflevoland.nl/gemist/video/dit-is-flevoland-5cb0a4aa9c08a" -e '{"name":"Omroep Flevoland: "||normalize-space(//h2),"date":substring(normalize-space(//span[starts-with(@class,"t--red")]),4),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url"://div[ends-with(@class,"videoplayer")]/@data-file}]}'
{
  "name": "Omroep Flevoland: Dit is Flevoland",
  "date": "12-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://d5ms27yy6exnf.cloudfront.net/video/middel/190412_DIF.mp4"
    }
  ]
}

https://www.omroepflevoland.nl/sport/170116/team-de-corner-wint-dorpenloop

$ xidel -s "https://www.omroepflevoland.nl/sport/170116/team-de-corner-wint-dorpenloop" -e 'outer-html(//span[@class="d--block--sm"])'
<span class="d--block--sm">

                                        Za 13 april 2019 | 17:18

        </span>

$ xidel -s --module=xivid.xq "https://www.omroepflevoland.nl/sport/170116/team-de-corner-wint-dorpenloop" -e '{"name":"Omroep Flevoland: "||normalize-space(//h2),"date":xivid:txt-to-date(//span[@class="d--block--sm"]),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url"://div[ends-with(@class,"videoplayer")]/@data-file}]}'
{
  "name": "Omroep Flevoland: Team De Corner wint dorpenloop",
  "date": "13-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://d5ms27yy6exnf.cloudfront.net/video/middel/190413_Dorpenloop_00000SVO.mp4"
    }
  ]
}

------------------------------------------------------------------------------------------------

E√©n query voor beide videostreams:

$ xidel -s --module=xivid.xq "https://www.omroepflevoland.nl/" -e 'let $a:=//div[ends-with(@class,"videoplayer")] return if ($a/@data-page-type="home") then {"name":"Omroep Flevoland: Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json($a/@data-file)} else {"name":"Omroep Flevoland: "||normalize-space(//h2),"date":if ($a/@data-page-type="missed") then substring(normalize-space(//span[starts-with(@class,"t--red")]),4) else xivid:txt-to-date(//span[@class="d--block--sm"]),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url"://div[ends-with(@class,"videoplayer")]/@data-file}]}'

------------------------------------------------------------------------------------------------

-e '
  let $a:=//div[ends-with(@class,"videoplayer")] return
  if ($a/@data-page-type="home") then {
    "name":"Omroep Flevoland: Livestream",
    "date":format-date(current-date(),"[D01]-[M01]-[Y]"),
    "formats":xivid:m3u8-to-json($a/@data-file)
  } else {
    "name":"Omroep Flevoland: "||normalize-space(//h2),
    "date":if ($a/@data-page-type="missed") then
      substring(
        normalize-space(//span[starts-with(@class,"t--red")]),
        4
      )
    else
      xivid:txt-to-date(//span[@class="d--block--sm"]),
    "formats":[
      {
        "format":"pg-1",
        "container":"mp4[h264+aac]",
        "url"://div[ends-with(@class,"videoplayer")]/@data-file
      }
    ]
  }
'

================================================================================================

[rtv utrecht]

https://www.rtvutrecht.nl/live/rtvutrecht/

$ xidel -s --module=xivid.xq "https://www.rtvutrecht.nl/live/rtvutrecht/" -f '//script[@async]/@src' -e 'json(extract($raw,"var opts = (.+);",1))/{"name":publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(clipData/(assets)()[mediatype="MP4_HLS"]/src)}'
{
  "name": "RTV Utrecht: Livestream",
  "date": "02-08-2019",
  "formats": [
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://d18rwjdhpr8dcw.cloudfront.net/live/rtvutrecht/rtvutrecht/index.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "142kbps",
      "url": "https://d18rwjdhpr8dcw.cloudfront.net/live/rtvutrecht/rtvutrecht/1562916731-au-index.m3u8"
    },
    [...]
    {
      "format": "hls-5",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3030kbps",
      "url": "https://d18rwjdhpr8dcw.cloudfront.net/live/rtvutrecht/rtvutrecht/1562916731-faster-1920-1080-2750000-index.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

https://www.rtvutrecht.nl/gemist/uitzending/rtvutrecht/unieuws/20190427-1700/

$ xidel -s "https://www.rtvutrecht.nl/gemist/uitzending/rtvutrecht/unieuws/20190427-1700/" -e 'let $a:=json(//script/extract(.,"setup\((.+)\)",1,"s")[.])//file return {"name":concat(//meta[@name="publisher"]/@content,": ",substring-before(normalize-space(//h3[@class="article-title"])," -")),"date":replace($a,".+?(\d+)/(\d+)/(\d+).+","$3-$2-$1"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$a}]}'
{
  "name": "RTV Utrecht: UNieuws",
  "date": "27-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://content.omroep.nl/rtvutrecht/uitzendinggemist/rtvutrecht/2019/04/27/RTV1889856_MQ.mp4"
    }
  ]
}

https://www.rtvutrecht.nl/nieuws/1908421/

$ xidel -s "https://www.rtvutrecht.nl/nieuws/1908421/" -e 'let $a:=json(//script/extract(.,"setup\((.+)\)",1,"s")[.])//file return {"name":concat(//meta[@name="publisher"]/@content,": ",(substring-before(normalize-space(//h3[@class="article-title"])," -")[.],normalize-space(//h1[@class="article-title"]))[1]),"date":replace($a,".+?(\d+)/(\d+)/(\d+).+","$3-$2-$1"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$a}]}'
{
  "name": "RTV Utrecht: Fantastische energie en geen wanklank: trotse burgemeester is tevreden over Koningsdag Amersfoort",
  "date": "27-04-2019",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "url": "https://content.omroep.nl/rtvutrecht/reportages/video/2019/04/27/2188794_MQ.mp4"
    }
  ]
}

------------------------------------------------------------------------------------------------

E√©n query voor beide videostreams:

$ xidel -s --module=xivid.xq "https://www.rtvutrecht.nl/nieuws/1908421/" -e 'if (//script[@async]) then json(extract(unparsed-text(//script[@async]/@src),"var opts = (.+);",1))/{"name":publicationData/label||": Livestream","date":format-date(current-date(),"[D01]-[M01]-[Y]"),"formats":xivid:m3u8-to-json(clipData/(assets)()[mediatype="MP4_HLS"]/src)} else let $a:=json(//script/extract(.,"setup\((.+)\)",1,"s")[.])//file return {"name":concat(//meta[@name="publisher"]/@content,": ",(substring-before(normalize-space(//h3[@class="article-title"])," -")[.],normalize-space(//h1[@class="article-title"]))[1]),"date":replace($a,".+?(\d+)/(\d+)/(\d+).+","$3-$2-$1"),"formats":[{"format":"pg-1","container":"mp4[h264+aac]","url":$a}]}'

------------------------------------------------------------------------------------------------

-e '
  if (//script[@async]) then
    json(
      extract(unparsed-text(//script[@async]/@src),"var opts = (.+);",1)
    )/{
      "name":publicationData/label||": Livestream",
      "date":format-date(current-date(),"[D01]-[M01]-[Y]"),
      "formats":xivid:m3u8-to-json(clipData/(assets)()[mediatype="MP4_HLS"]/src)
    }
  else
    let $a:=json(
      //script/extract(.,"setup\((.+)\)",1,"s")[.]
    )//file return {
      "name":concat(
        //meta[@name="publisher"]/@content,
        ": ",
        (
          substring-before(
            normalize-space(//h3[@class="article-title"]),
            " -"
          )[.],
          normalize-space(//h1[@class="article-title"])
        )[1]
      ),
      "date":replace($a,".+?(\d+)/(\d+)/(\d+).+","$3-$2-$1"),
      "formats":[
        {
          "format":"pg-1",
          "container":"mp4[h264+aac]",
          "url":$a
        }
      ]
    }
'

================================================================================================

[telegraaf]

https://www.telegraaf.nl/video/3439197/kamikaze-actie-op-n377-gefilmd

$ xidel -s "https://www.telegraaf.nl/video/3439197/kamikaze-actie-op-n377-gefilmd" -e 'concat("https://content.tmgvideo.nl/playlist/item=",json(//script/extract(.,"APOLLO_STATE__=(.+);",1)[.])/(.//videoId)[1],"/playlist.json")'
https://content.tmgvideo.nl/playlist/item=cCQFDoebv5A0/playlist.json

$ xidel -s "https://www.telegraaf.nl/video/3439197/kamikaze-actie-op-n377-gefilmd" -f 'concat("https://content.tmgvideo.nl/playlist/item=",json(//script/extract(.,"APOLLO_STATE__=(.+);",1)[.])/(.//videoId)[1],"/playlist.json")' -e '$json'
{
  "items": [
    {
      "id": "cCQFDoebv5A0",
      "account": "Kx1PKc",
      "audioonly": false,
      "live": false,
      "title": "Kamikaze-actie op N377",
      "description": "Een motorrijder neemt op de provinciale weg in Drenthe de meest grote risico's om op tijd op z'n bestemming te komen. Ook iets gefilmd op de weg? Mail het de redactie via verkeer@telegraaf.nl.",
      "poster": "//content.tmgvideo.nl/img/account=Kx1PKc/item=cCQFDoebv5A0/thumbid=2/image.jpg?v=20190412202826",
      "datecreated": "2019-04-12 20:26:34",
      "duration": 34,
      "locations": {
        "progressive": [
          {
            "label": "1080p",
            "height": 1080,
            "width": 1920,
            "sources": [
              {
                "type": "video/mp4",
                "src": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=YLRECscb9lIw/cCQFDoebv5A0.mp4"
              }
            ]
          },
          {
            "label": "720p",
            "height": 720,
            "width": 1280,
            "sources": [
              {
                "type": "video/mp4",
                "src": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=YoAMCo4bv9M0/cCQFDoebv5A0.mp4"
              }
            ]
          },
          {
            "label": "480p",
            "height": 480,
            "width": 854,
            "sources": [
              {
                "type": "video/mp4",
                "src": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=YiRND4KZvwEQ/cCQFDoebv5A0.mp4"
              }
            ]
          },
          {
            "label": "360p",
            "height": 360,
            "width": 640,
            "sources": [
              {
                "type": "video/mp4",
                "src": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=4oIELuOJtkIQ/cCQFDoebv5A0.mp4"
              }
            ]
          },
          {
            "label": "270p",
            "height": 270,
            "width": 480,
            "sources": [
              {
                "type": "video/mp4",
                "src": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=4JAEDuMLtlIQ/cCQFDoebv5A0.mp4"
              }
            ]
          }
        ],
        "adaptive": [
          {
            "type": "application/dash+xml",
            "src": "https://media.tmgvideo.nl/dash/account=Kx1PKc/item=cCQFDoebv5A0/cCQFDoebv5A0.mpd?v=20190412202826_5"
          },
          {
            "type": "application/x-mpegURL",
            "src": "https://media.tmgvideo.nl/hls/account=Kx1PKc/item=cCQFDoebv5A0/cCQFDoebv5A0.m3u8?v=20190412202826_5"
          }
        ]
      },
      [...]
    }
  ]
}

$ xidel -s --module=xivid.xq "https://www.telegraaf.nl/video/3439197/kamikaze-actie-op-n377-gefilmd" -e 'let $a:=json(concat("https://content.tmgvideo.nl/playlist/item=",json(//script/extract(.,"APOLLO_STATE__=(.+);",1)[.])/(.//videoId)[1],"/playlist.json")) return {"name":"Telegraaf: "||$a//title,"date":replace($a//datecreated,"(\d+)-(\d+)-(\d+).+","$3-$2-$1"),"duration":format-time($a//duration * duration("PT1S"),"[H01]:[m01]:[s01]"),"formats":($a//locations/reverse((progressive)())/{"format":"pg-"||position(),"container":"mp4[h264+aac]","resolution":concat(width,"x",height),"url":.//src},xivid:m3u8-to-json($a//locations/(adaptive)()[ends-with(type,"x-mpegURL")]/extract(src,"(.+m3u8)",1)))}'
{
  "name": "Telegraaf: Kamikaze-actie op N377",
  "date": "12-04-2019",
  "duration": "00:00:34",
  "formats": [
    {
      "format": "pg-1",
      "container": "mp4[h264+aac]",
      "resolution": "480x270",
      "url": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=4JAEDuMLtlIQ/cCQFDoebv5A0.mp4"
    },
    [...]
    {
      "format": "pg-5",
      "container": "mp4[h264+aac]",
      "resolution": "1920x1080",
      "url": "https://media.tmgvideo.nl/progressive/account=Kx1PKc/item=cCQFDoebv5A0/file=YLRECscb9lIw/cCQFDoebv5A0.mp4"
    },
    {
      "format": "hls-0",
      "container": "m3u8[manifest]",
      "url": "https://media.tmgvideo.nl/hls/account=Kx1PKc/item=cCQFDoebv5A0/cCQFDoebv5A0.m3u8"
    },
    {
      "format": "hls-1",
      "container": "m3u8[aac]",
      "resolution": null,
      "bitrate": "64kbps",
      "url": "https://media.tmgvideo.nl/hls/account=Kx1PKc/item=cCQFDoebv5A0/cCQFDoebv5A0-19700101_1-audio=64000.m3u8"
    },
    [...]
    {
      "format": "hls-7",
      "container": "m3u8[h264+aac]",
      "resolution": "1920x1080",
      "bitrate": "3600|128kbps",
      "url": "https://media.tmgvideo.nl/hls/account=Kx1PKc/item=cCQFDoebv5A0/cCQFDoebv5A0-19700101_1-audio=128000-video=3600000.m3u8"
    }
  ]
}

------------------------------------------------------------------------------------------------

-e '
  let $a:=json(
    concat(
      "https://content.tmgvideo.nl/playlist/item=",
      json(
        //script/extract(.,"APOLLO_STATE__=(.+);",1)[.]
      )/(.//videoId)[1],
      "/playlist.json"
    )
  ) return {
    "name":"Telegraaf: "||$a//title,
    "date":replace(
      $a//datecreated,
      "(\d+)-(\d+)-(\d+).+",
      "$3-$2-$1"
    ),
    "duration":format-time(
      $a//duration * duration("PT1S"),
      "[H01]:[m01]:[s01]"
    ),
    "formats":(
      $a//locations/reverse((progressive)())/{
        "format":"pg-"||position(),
        "container":"mp4[h264+aac]",
        "resolution":concat(width,"x",height),
        "url":.//src
      },
      xivid:m3u8-to-json(
        $a//locations/(adaptive)()[ends-with(type,"x-mpegURL")]/extract(src,"(.+m3u8)",1)
      )
    )
  }
'
