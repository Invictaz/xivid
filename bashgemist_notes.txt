[npo]

$ xidel -s "http://e.omroep.nl/metadata/POW_03689795" --xquery '
  json(
    extract(
      $raw,
      "\((.+)\)",
      1
    )
  )[not(error)]/{
    "name":if (medium="live") then
      titel||": Livestream"
    else
      replace(
        concat(
          if (count(.//naam)=1) then
            .//naam
          else
            join(
              .//naam,
              " en "
            ),
          ": ",
          if (ptype="episode") then
            if (aflevering_titel) then
              if (
                contains(
                  titel,
                  aflevering_titel
                )
              ) then
                titel
              else
                if (
                  contains(
                    aflevering_titel,
                    titel
                  )
                ) then
                  aflevering_titel
                else
                  concat(
                    titel,
                    " - ",
                    aflevering_titel
                  )
            else
              titel
          else
            concat(
              .//serie_titel,
              " - ",
              titel
            )
        ),
        "[&quot;&apos;]",
        "'\'\''"
      ),
    "date":if (medium="live") then
      "'$(date "+%d-%m-%Y")'"
    else (
      if (gidsdatum) then
        replace(
          gidsdatum,
          "(\d+)-(\d+)-(\d+)",
          "$3-$2-$1"
        )
      else
        if (
          matches(
            "https://www.npostart.nl/nos-journaal/12-12-2018/POW_03689795",
            "\d{2}-\d{2}-\d{4}"
          )
        ) then
          extract(
            "https://www.npostart.nl/nos-journaal/12-12-2018/POW_03689795",
            ".+/([\d-]+)",
            1
          )
        else
          extract(
            x:request(
              {
                "url":"https://www.npostart.nl/POW_03689795",
                "method":"HEAD"
              }
            )/url,
            ".+/([\d-]+)",
            1
          )
    ),
    "duration":if (tijdsduur) then
      tijdsduur
    else
      (),
    "start":start,
    "end":eind,
    "expdate":if (publicatie_eind) then
      replace(
        publicatie_eind,
        "(\d+)-(\d+)-(\d+)T([\d:]+).+",
        "$3-$2-$1 $4"
      )
    else
      (),
    "subtitle":if (tt888="ja") then
      "http://tt888.omroep.nl/tt888/POW_03689795"
    else
      (),
    "formats":let $a:=x:request(
          {
            "url":"http://ida.omroep.nl/app.php/POW_03689795?token="||json(
              "http://ida.omroep.nl/app.php/auth"
            )/token,
            "error-handling":"4xx=accept"
          }
        )[
          contains(
            headers[1],
            "200"
          )
        ]/json/(items)()(),
        $b:=$a[format="hls"]/x:request(
          {
            "url":replace(
              url,
              "jsonp",
              "json"
            ),
            "error-handling":"4xx=accept"
          }
        )[
          contains(
            headers[1],
            "200"
          )
        ]/(
          if (json instance of string) then
            json
          else
            json/url
        ),
        $c:=[
          reverse(
            $a[contentType="odi"][format="mp4"]
          )/x:request(
            {
              "url":replace(
                url,
                "jsonp",
                "json"
              ),
              "error-handling":"4xx=accept"
            }
          )[
            contains(
              headers[1],
              "200"
            )
          ]/json/substring-before(
            url,
            "?"
          ) ! {
            "format":"pg-"||position(),
            "extension":"m4v",
            "url":.
          },
          {
            "format":"hls-0",
            "extension":"m3u8",
            "resolution":"manifest",
            "url":$b
          }[url],
          for $x at $i in tail(
            tokenize(
              extract(
                unparsed-text($b),
                "(#EXT-X-STREAM-INF.+m3u8$)",
                1,"ms"
              ),
              "#EXT-X-STREAM-INF:"
            )
          ) order by extract(
            $x,
            "BANDWIDTH=(\d+)",
            1
          ) count $i
          return {
            "format":"hls-"||$i,
            "extension":"m3u8",
            "resolution":extract(
              $x,
              "RESOLUTION=([\dx]+)",
              1
            ) ! (
              if (.) then
                .
              else
                "audiospoor"
            ),
            "vbitrate":extract(
              $x,
              "video=(\d+)\d{3}",
              1
            ) ! (
              if (.) then
                concat(
                  "v:",
                  .,
                  "k"
                )
              else
                ""
            ),
            "abitrate":replace(
              $x,
              ".+audio.+?(\d+)\d{3}.+",
              "a:$1k","s"
            ),
            "url":resolve-uri(
              ".",
              $b
            )||extract(
              $x,
              "(.+m3u8)",
              1
            )
          },
          reverse(
            $a[contentType="url"][format="mp4"]
          )/x:request(
            {
              "url":url,
              "method":"HEAD",
              "error-handling":"xxx=accept"
            }
          )[
            some $x in ("200","302") satisfies contains(
              headers[1],
              $x
            )
          ]/(
            if (
              contains(
                url,
                "content-ip"
              )
            ) then
              x:request(
                {
                  "url":"https://ipv4-api.nos.nl/resolve.php/video?url="||uri-encode(url),
                  "method":"HEAD"
                }
              )/url
            else
              url
          ) ! {
            "format":"mp4-"||position(),
            "extension":extract(
              .,
              ".+\.(.+)",
              1
            ),
            "url":.
          }
        ]
    return
    if ($c()) then
      $c
    else
      ()
  }'
{
  "name": "NOS: NOS Journaal",
  "date": "12-12-2018",
  "duration": "00:24:39",
  "start": null,
  "end": null,
  "expdate": "01-01-2101 00:59:00",
  "subtitle": "http://tt888.omroep.nl/tt888/POW_03689795",
  "formats": [
    {
      "format": "pg-1",
      "extension": "m4v",
      "url": "https://content10c1b.omroep.nl/urishieldv2/l27m5a1b0a7d738bd144005c11a640000000.da077fb61a0c5933f1ae79863ff6a403/ceresodi/h264/p/12/10/10/f6/sb_POW_03689795.m4v"
    },
    {
      "format": "pg-2",
      "extension": "m4v",
      "url": "https://content10c1a.omroep.nl/urishieldv2/l27m05b6ed9143e505af005c11a640000000.c920edf4f11ccb22769034bacb65fc39/ceresodi/h264/p/12/10/10/f6/bb_POW_03689795.m4v"
    },
    {
      "format": "pg-3",
      "extension": "m4v",
      "url": "https://content10c3c.omroep.nl/urishieldv2/l27m07a681274325394d005c11a640000000.0b3f7b41a5e3ecfa9417d26dd3f7d31a/ceresodi/h264/p/12/10/10/f6/std_POW_03689795.m4v"
    },
    {
      "format": "hls-0",
      "extension": "m3u8",
      "resolution": "manifest",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795.m3u8"
    },
    {
      "format": "hls-1",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:203k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=96000-video=203000.m3u8"
    },
    {
      "format": "hls-2",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:203k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=128000-video=203000.m3u8"
    },
    {
      "format": "hls-3",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:203k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=192000-video=203000.m3u8"
    },
    {
      "format": "hls-4",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:505k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=96000-video=505000.m3u8"
    },
    {
      "format": "hls-5",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:505k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=128000-video=505000.m3u8"
    },
    {
      "format": "hls-6",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:505k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=192000-video=505000.m3u8"
    },
    {
      "format": "hls-7",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=96000-video=1109000.m3u8"
    },
    {
      "format": "hls-8",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=128000-video=1109000.m3u8"
    },
    {
      "format": "hls-9",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=192000-video=1109000.m3u8"
    },
    {
      "format": "hls-10",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1810k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=96000-video=1810000.m3u8"
    },
    {
      "format": "hls-11",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1810k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=128000-video=1810000.m3u8"
    },
    {
      "format": "hls-12",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1810k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4b.npostreaming.nl/urishieldv2/l27m7221b08871bf8532005c11a641000000.e93717a7833dfa2ddc8f4d281895e2b0/p/12/10/10/5c/POW_03689795/POW_03689795.ism/POW_03689795-audio=192000-video=1810000.m3u8"
    }
  ]
}

https://www.npostart.nl/de-laatste-minuten/17-12-2018/POMS_AT_15009224:
{
  "name": "AVROTROS: Hunted - De laatste minuten...",
  "date": "17-12-2018",
  "duration": "00:01:59",
  "start": "00:55:06",
  "end": "00:57:05",
  "expdate": "01-01-2101 00:59:00",
  "subtitle": "http://tt888.omroep.nl/tt888/POMS_AT_15009224",
  "formats": [
    {
      "format": "pg-1",
      "extension": "m4v",
      "url": "https://content10c4b.omroep.nl/urishieldv2/l27m6c2ec29c3fcf372e005c276570000000.b055f6717fc4e0b8ea2ae9042d1291e2/ceresodi/h264/p/06/10/10/f7/sb_AT_2105785.m4v"
    },
    {
      "format": "pg-2",
      "extension": "m4v",
      "url": "https://content10c4c.omroep.nl/urishieldv2/l27m34ec48023fb78477005c276570000000.171fddf89df4a5190ac631f86a056b63/ceresodi/h264/p/06/10/10/f7/bb_AT_2105785.m4v"
    },
    {
      "format": "pg-3",
      "extension": "m4v",
      "url": "https://content10c4a.omroep.nl/urishieldv2/l27m3187fe3c262e9d50005c276570000000.d1015a8a55fc8f98ef42e675570af912/ceresodi/h264/p/06/10/10/f7/std_AT_2105785.m4v"
    },
    {
      "format": "hls-0",
      "extension": "m3u8",
      "resolution": "manifest",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785.m3u8"
    },
    {
      "format": "hls-1",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:202k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=96000-video=202000.m3u8"
    },
    {
      "format": "hls-2",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:202k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=128000-video=202000.m3u8"
    },
    {
      "format": "hls-3",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:202k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=192000-video=202000.m3u8"
    },
    {
      "format": "hls-4",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:504k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=96000-video=504000.m3u8"
    },
    {
      "format": "hls-5",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:504k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=128000-video=504000.m3u8"
    },
    {
      "format": "hls-6",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:504k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=192000-video=504000.m3u8"
    },
    {
      "format": "hls-7",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=96000-video=1109000.m3u8"
    },
    {
      "format": "hls-8",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=128000-video=1109000.m3u8"
    },
    {
      "format": "hls-9",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1109k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=192000-video=1109000.m3u8"
    },
    {
      "format": "hls-10",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1813k",
      "abitrate": "a:96k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=96000-video=1813000.m3u8"
    },
    {
      "format": "hls-11",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1813k",
      "abitrate": "a:128k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=128000-video=1813000.m3u8"
    },
    {
      "format": "hls-12",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1813k",
      "abitrate": "a:192k",
      "url": "https://adaptive-e10c4a.npostreaming.nl/urishieldv2/l27m1f18e65b7d86dd64005c276570000000.3ef7e652a756367aa5d38a4933f1a866/p/06/10/10/5d/AT_2105785/AT_2105785.ism/AT_2105785-audio=192000-video=1813000.m3u8"
    }
  ]
}

https://www.npostart.nl/live/npo-1
{
  "name": "NPO 1: Livestream",
  "date": "29-12-2018",
  "duration": null,
  "start": null,
  "end": null,
  "expdate": null,
  "subtitle": null,
  "formats": [
    {
      "format": "hls-0",
      "extension": "m3u8",
      "resolution": "manifest",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1.m3u8"
    },
    {
      "format": "hls-1",
      "extension": "m3u8",
      "resolution": "audiospoor",
      "vbitrate": "",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000.m3u8"
    },
    {
      "format": "hls-2",
      "extension": "m3u8",
      "resolution": "384x216",
      "vbitrate": "v:200k",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=200000.m3u8"
    },
    {
      "format": "hls-3",
      "extension": "m3u8",
      "resolution": "480x270",
      "vbitrate": "v:499k",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=499968.m3u8"
    },
    {
      "format": "hls-4",
      "extension": "m3u8",
      "resolution": "640x360",
      "vbitrate": "v:699k",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=699968.m3u8"
    },
    {
      "format": "hls-5",
      "extension": "m3u8",
      "resolution": "768x432",
      "vbitrate": "v:1000k",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1000000.m3u8"
    },
    {
      "format": "hls-6",
      "extension": "m3u8",
      "resolution": "1024x576",
      "vbitrate": "v:1800k",
      "abitrate": "a:128k",
      "url": "https://smoote1e.omroep.nl/urishieldv2/l2fm336d5956703e265a005c278b66000000.d32446ac4749f1a1c62ccb75fc1bde7d/live/npo/tvlive/npo1/npo1.isml/npo1-audio_nld=128000-video=1800000.m3u8"
    }
  ]
}

================================================================================================================================

[rtl]

$ xidel -s "http://www.rtl.nl/system/s4m/vfd/version=2/uuid=143d56f6-816e-3757-961d-eba686183076/fmt=adaptive/" --xquery '
  $json[
    not(
      meta/nr_of_videos_total=0
    )
  ]/{
    "name":replace(
      concat(
        .//station,
        ": ",
        abstracts/name,
        " - ",
        if (.//classname="uitzending") then
          episodes/name
        else
          .//title
      ),
      "[&quot;&apos;]",
      "'\'\''"
    ),
    "date":replace(
      (material)()/original_date * duration("PT1S") + date("1970-01-01"),
      "(\d+)-(\d+)-(\d+)",
      "$3-$2-$1"
    ),
    "duration":format-time(
      time((material)()/duration) + duration("PT0.5S"),
      "[H01]:[m01]:[s01]"
    ),
    "expdate":if ((.//ddr_timeframes)()[model="AVOD"]/stop) then
      replace(
        (.//ddr_timeframes)()[model="AVOD"]/stop * duration("PT1S") + dateTime("1970-01-01T00:00:00"),
        "(\d+)-(\d+)-(\d+)T(.+)",
        "$3-$2-$1 $4"
      )
    else
      (),
    "formats":let $a:=.//videohost||.//videopath return [
      {
        "format":"hls-0",
        "extension":"m3u8",
        "resolution":"manifest",
        "url":$a
      },
      for $x at $i in tail(
        tokenize(
          unparsed-text($a),
          "#EXT-X-STREAM-INF:"
        )
      ) order by extract(
        $x,
        "BANDWIDTH=(\d+)",
        1
      ) count $i
      return {
        "format":"hls-"||$i,
        "extension":"m3u8",
        "resolution":extract(
          $x,
          "RESOLUTION=([\dx]+)",
          1
        ) ! (
          if (.) then
            .
          else
            "audiospoor"
        ),
        "vbitrate":extract(
          $x,
          "video=(\d+)\d{3}",
          1
        ) ! (
          if (.) then
            concat(
              "v:",
              .,
              "k"
            )
          else
            ""
        ),
        "abitrate":replace(
          $x,
          ".+audio.+?(\d+)\d{3}.+",
          "a:$1k","s"
        ),
        "url":let $b:=extract(
          $x,
          "(.+m3u8)",
          1
        ) return
        if (
          starts-with(
            $b,
            "http"
          )
        ) then
          $b
        else
          resolve-uri(
            ".",
            $a
          )||$b
      }
    ]
  }'
{
  "name": "RTL4: RTL Nieuws - 19:30 uur",
  "date": "11-12-2018",
  "duration": "00:20:18",
  "expdate": "12-12-2019 05:35:25",
  "formats": [
    {
      "format": "hls-0",
      "extension": "m3u8",
      "resolution": "manifest",
      "url": "http://manifest.us.rtl.nl/rtlxl/v166/network/pc/adaptive/components/actueel/rtlnieuws/390575/143d56f6-816e-3757-961d-eba686183076.ssm/143d56f6-816e-3757-961d-eba686183076.m3u8"
    },
    {
      "format": "hls-1",
      "extension": "m3u8",
      "resolution": "audiospoor",
      "vbitrate": "",
      "abitrate": "a:125k",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/390575/143d56f6-816e-3757-961d-eba686183076.ssm/143d56f6-816e-3757-961d-eba686183076.ism/143d56f6-816e-3757-961d-eba686183076-audio=125437.m3u8"
    },
    {
      "format": "hls-2",
      "extension": "m3u8",
      "resolution": "711x400",
      "vbitrate": "v:903k",
      "abitrate": "a:125k",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/390575/143d56f6-816e-3757-961d-eba686183076.ssm/143d56f6-816e-3757-961d-eba686183076.ism/143d56f6-816e-3757-961d-eba686183076-audio=125437-video=903000.m3u8"
    },
    {
      "format": "hls-3",
      "extension": "m3u8",
      "resolution": "912x512",
      "vbitrate": "v:2093k",
      "abitrate": "a:125k",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/390575/143d56f6-816e-3757-961d-eba686183076.ssm/143d56f6-816e-3757-961d-eba686183076.ism/143d56f6-816e-3757-961d-eba686183076-audio=125437-video=2093000.m3u8"
    },
    {
      "format": "hls-4",
      "extension": "m3u8",
      "resolution": "1280x720",
      "vbitrate": "v:3805k",
      "abitrate": "a:125k",
      "url": "http://manifest.us.rtl.nl/10/v166/aes/adaptive/components/actueel/rtlnieuws/390575/143d56f6-816e-3757-961d-eba686183076.ssm/143d56f6-816e-3757-961d-eba686183076.ism/143d56f6-816e-3757-961d-eba686183076-audio=125437-video=3805000.m3u8"
    }
  ]
}

================================================================================================================================

[-i, --info]

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json() return $b'
name
date
duration
start
end
expdate
subtitle
formats

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] return $b'
name
date
duration
start
end
expdate
subtitle

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]] return $b'
name
date
duration
expdate
subtitle

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]] return $b ! $a(.)'
Naam:
Datum:
Tijdsduur:
Gratis tot:
Ondertiteling:

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]] return max($b ! $a(.) ! string-length(.))'
14

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) return string-join((1 to $c+1) ! "#")'
###############

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)),$d:=string-join((1 to $c+1) ! " ") return $b ! concat(substring($a(.)||$d,1,$c+1),$json(.))'
Naam:          NOS: NOS Journaal
Datum:         12-12-2018
Tijdsduur:     00:24:39
Gratis tot:    01-01-2101 00:59:00
Ondertiteling: http://tt888.omroep.nl/tt888/POW_03689795

------------------------------------------------------------------------------------------------
$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '690,754p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]] return max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9)'
9

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '690,754p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " ") return $b ! concat(substring($a(.)||$d,1,$c+1),$json(.))' -e '"Formaten:"'
Naam:     NPO 1: Livestream
Datum:    29-12-2018
Formaten:

------------------------------------------------------------------------------------------------

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate") return $f ! $e(1)(.)'
formaat
extensie
resolutie
bitrate

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate") return $f ! max($e()(.) ! string-length(.))'
7
8
9
7
6

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)) return string-join((1 to sum($g)) ! "#")'
#####################################

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") for $x in $e(1) return concat(substring("Formaten:"||$d,1,$c+1),string-join(for $y at $i in $f return substring($x($y)||$h,1,$g[$i]+2)))'
Formaten:      formaat  extensie  resolutie  bitrate

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") for $x at $i in $e() return concat(if ($i=1) then substring("Formaten:"||$d,1,$c+1) else $d,string-join(for $y at $i in $f return substring($x($y)||$h,1,$g[$i]+2)),if ($i=count($e())) then "(best)" else ())'
Formaten:      formaat  extensie  resolutie  bitrate
               pg-1     m4v
               pg-2     m4v
               pg-3     m4v
               hls-0    m3u8      manifest
               hls-1    m3u8      480x270    v:203k   a:96k
               hls-2    m3u8      480x270    v:203k   a:128k
               hls-3    m3u8      480x270    v:203k   a:192k
               hls-4    m3u8      640x360    v:505k   a:96k
               hls-5    m3u8      640x360    v:505k   a:128k
               hls-6    m3u8      640x360    v:505k   a:192k
               hls-7    m3u8      1024x576   v:1109k  a:96k
               hls-8    m3u8      1024x576   v:1109k  a:128k
               hls-9    m3u8      1024x576   v:1109k  a:192k
               hls-10   m3u8      1024x576   v:1810k  a:96k
               hls-11   m3u8      1024x576   v:1810k  a:128k
               hls-12   m3u8      1024x576   v:1810k  a:192k  (best)

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '430,557p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c+1),$json(.)),for $x at $i in $e() return concat(if ($i=1) then substring("Formaten:"||$d,1,$c+1) else $d,string-join(for $y at $i in $f return substring($x($y)||$h,1,$g[$i]+2)),if ($i=count($e())) then "(best)" else ()))'
Naam:          NOS: NOS Journaal
Datum:         12-12-2018
Tijdsduur:     00:24:39
Gratis tot:    01-01-2101 00:59:00
Ondertiteling: http://tt888.omroep.nl/tt888/POW_03689795
Formaten:      formaat  extensie  resolutie  bitrate
               pg-1     m4v
               pg-2     m4v
               pg-3     m4v
               hls-0    m3u8      manifest
               hls-1    m3u8      480x270    v:203k   a:96k
               hls-2    m3u8      480x270    v:203k   a:128k
               hls-3    m3u8      480x270    v:203k   a:192k
               hls-4    m3u8      640x360    v:505k   a:96k
               hls-5    m3u8      640x360    v:505k   a:128k
               hls-6    m3u8      640x360    v:505k   a:192k
               hls-7    m3u8      1024x576   v:1109k  a:96k
               hls-8    m3u8      1024x576   v:1109k  a:128k
               hls-9    m3u8      1024x576   v:1109k  a:192k
               hls-10   m3u8      1024x576   v:1810k  a:96k
               hls-11   m3u8      1024x576   v:1810k  a:128k
               hls-12   m3u8      1024x576   v:1810k  a:192k  (best)

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '690,754p' | xidel -s - --xquery '[...]'
Naam:     NPO 1: Livestream
Datum:    29-12-2018
Formaten: formaat  extensie  resolutie   bitrate
          hls-0    m3u8      manifest
          hls-1    m3u8      audiospoor           a:128k
          hls-2    m3u8      384x216     v:200k   a:128k
          hls-3    m3u8      480x270     v:499k   a:128k
          hls-4    m3u8      640x360     v:699k   a:128k
          hls-5    m3u8      768x432     v:1000k  a:128k
          hls-6    m3u8      1024x576    v:1800k  a:128k  (best)

------------------------------------------------------------------------------------------------

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '560,687p' | xidel -s - -e 'if (start) then let $a:=seconds-from-time(start) mod 30 * dayTimeDuration("PT1S") return (time(start) - $a,$a + time("00:00:00"),duration) else ()'
00:55:00
00:00:06
00:01:59

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '560,687p' | xidel -s - -e 'if (start) then let $a:=seconds-from-time(start) mod 30 * dayTimeDuration("PT1S") return concat("Download: ","ffmpeg -ss ",time(start) - $a," -i [url] -ss ",$a + time("00:00:00")," -t ",duration," [...]") else ()'
Download: ffmpeg -ss 00:55:00 -i [url] -ss 00:00:06 -t 00:01:59 [...]

------------------------------------------------------------------------------------------------

$ cat /cygdrive/d/Storage/Media/Binaries/bashgemist_notes.txt | sed -n '560,687p' | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c+1),$json(.)),for $x at $i in $e() return concat(if ($i=1) then substring("Formaten:"||$d,1,$c+1) else $d,string-join(for $y at $i in $f return substring($x($y)||$h,1,$g[$i]+2)),if ($i=count($e())) then "(best)" else ()),if (start) then let $a:=seconds-from-time(start) mod 30 * dayTimeDuration("PT1S") return ("",concat(substring("Download:"||$d,1,$c+1),"ffmpeg -ss ",time(start) - $a," -i [url] -ss ",$a + time("00:00:00")," -t ",duration," [...]")) else ())'
Naam:          AVROTROS: Hunted - De laatste minuten...
Datum:         17-12-2018
Tijdsduur:     00:01:59
Begin:         00:55:06
Einde:         00:57:05
Gratis tot:    01-01-2101 00:59:00
Ondertiteling: http://tt888.omroep.nl/tt888/POMS_AT_15009224
Formaten:      formaat  extensie  resolutie  bitrate
               pg-1     m4v
               pg-2     m4v
               pg-3     m4v
               hls-0    m3u8      manifest
               hls-1    m3u8      480x270    v:202k   a:96k
               hls-2    m3u8      480x270    v:202k   a:128k
               hls-3    m3u8      480x270    v:202k   a:192k
               hls-4    m3u8      640x360    v:504k   a:96k
               hls-5    m3u8      640x360    v:504k   a:128k
               hls-6    m3u8      640x360    v:504k   a:192k
               hls-7    m3u8      1024x576   v:1109k  a:96k
               hls-8    m3u8      1024x576   v:1109k  a:128k
               hls-9    m3u8      1024x576   v:1109k  a:192k
               hls-10   m3u8      1024x576   v:1813k  a:96k
               hls-11   m3u8      1024x576   v:1813k  a:128k
               hls-12   m3u8      1024x576   v:1813k  a:192k  (best)

Download:      ffmpeg -ss 00:55:00 -i [url] -ss 00:00:06 -t 00:01:59 [...]

$ cat <<EOF | xidel -s - --xquery 'let $a:={"name":"Naam:","date":"Datum:","duration":"Tijdsduur:","start":"Begin:","end":"Einde:","expdate":"Gratis tot:","subtitle":"Ondertiteling:"},$b:=$json()[position()<count($json())] ! .[$json(.)[.]],$c:=max($b ! $a(.) ! string-length(.)) ! (if (.>9) then . else 9),$d:=string-join((1 to $c+1) ! " "),$e:=[{"format":"formaat","extension":"extensie","resolution":"resolutie","vbitrate":"bitrate"},$json/(formats)()],$f:=("format","extension","resolution","vbitrate","abitrate"),$g:=$f ! max($e()(.) ! string-length(.)),$h:=string-join((1 to sum($g)) ! " ") return ($b ! concat(substring($a(.)||$d,1,$c+1),$json(.)),if ($e(2)) then for $x at $i in $e() return concat(if ($i=1) then substring("Formaten:"||$d,1,$c+1) else $d,string-join(for $y at $i in $f return substring($x($y)||$h,1,$g[$i]+2)),if ($i=count($e())) then "(best)" else ()) else substring("Formaten:"||$d,1,$c+1)||"-",if (start) then let $a:=seconds-from-time(start) mod 30 * dayTimeDuration("PT1S") return ("",concat(substring("Download:"||$d,1,$c+1),"ffmpeg -ss ",time(start) - $a," -i [url] -ss ",$a + time("00:00:00")," -t ",duration," [...]")) else ())'
{
  "name": "VPRO: Zigeunermuziek doet pijn - Bob Entrop, VPRO, 2008 (58 min.)",
  "date": "21-07-2010",
  "duration": "00:58:00",
  "start": null,
  "end": null,
  "expdate": null,
  "subtitle": null,
  "formats": null
}
EOF
Naam:      VPRO: Zigeunermuziek doet pijn - Bob Entrop, VPRO, 2008 (58 min.)
Datum:     21-07-2010
Tijdsduur: 00:58:00
Formaten:  -

------------------------------------------------------------------------------------------------

--xquery '
  let $a:={
        "name":"Naam:",
        "date":"Datum:",
        "duration":"Tijdsduur:",
        "start":"Begin:",
        "end":"Einde:",
        "expdate":"Gratis tot:",
        "subtitle":"Ondertiteling:"
      },
      $b:=$json()[
        position()<count($json())
      ] ! .[$json(.)[.]],
      $c:=max(
        $b ! $a(.) ! string-length(.)
      ) ! (
        if (.>9) then
          .
        else
          9
      ),
      $d:=string-join(
        (1 to $c+1) ! " "
      ),
      $e:=[
        {
          "format":"formaat",
          "extension":"extensie",
          "resolution":"resolutie",
          "vbitrate":"bitrate"
        },
        $json/(formats)()
      ],
      $f:=(
        "format",
        "extension",
        "resolution",
        "vbitrate",
        "abitrate"
      ),
      $g:=$f ! max(
        $e()(.) ! string-length(.)
      ),
      $h:=string-join(
        (1 to sum($g)) ! " "
      )
  return (
    $b ! concat(
      substring(
        $a(.)||$d,
        1,
        $c+1
      ),
      $json(.)
    ),
    if ($e(2)) then
      for $x at $i in $e() return
      concat(
        if ($i=1) then
          substring(
            "Formaten:"||$d,
            1,
            $c+1
          )
        else
          $d,
        string-join(
          for $y at $i in $f return
          substring(
            $x($y)||$h,
            1,
            $g[$i]+2
          )
        ),
        if ($i=count($e())) then
          "(best)"
        else
          ()
      )
    else
      substring(
        "Formaten:"||$d,
        1,
        $c+1
      )||"-",
    if (start) then
      let $a:=seconds-from-time(start) mod 30 * dayTimeDuration("PT1S") return (
        "",
        concat(
          substring(
            "Download:"||$d,
            1,
            $c+1
          ),
          "ffmpeg -ss ",
          time(start) - $a,
          " -i [url] -ss ",
          $a + time("00:00:00"),
          " -t ",
          duration,
          " [...]"
        )
      )
    else
      ()
  )'
